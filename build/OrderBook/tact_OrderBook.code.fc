#pragma version =0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_OrderBook.headers.fc";
#include "tact_OrderBook.stdlib.fc";
#include "tact_OrderBook.storage.fc";

;;
;; Contract OrderBook functions
;;

(int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $OrderBook$_contract_init() impure inline_ref {
    var (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)) = (6, 1800, 180, 900, 100000000, 50000000, 30000000, null(), null(), null(), 1, null(), null(), null(), null(), 1, null(), 1, null(), 1, null(), 1);
    $self'owner = __tact_context_get_sender();
    $self'executors~__tact_dict_set_slice_int(267, __tact_context_get_sender(), true, 1);
    $self'compensators~__tact_dict_set_slice_int(267, __tact_context_get_sender(), true, 1);
    $self'usdtWallet = __tact_create_address(0, 0);
    $self'pool = __tact_create_address(0, 0);
    return ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext);
}

((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int), int) $OrderBook$_fun_isExecutor((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, slice $account) impure inline_ref {
    var (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)) = $self;
    int $isExecutorOpt = __tact_dict_get_slice_int($self'executors, 267, $account, 1);
    if (null?($isExecutorOpt)) {
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), false);
    }
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), __tact_not_null($isExecutorOpt));
}

((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int), int) $OrderBook$_fun_isCompensator((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, slice $account) impure inline_ref {
    var (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)) = $self;
    int $isCompensatorOpt = __tact_dict_get_slice_int($self'compensators, 267, $account, 1);
    if (null?($isCompensatorOpt)) {
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), false);
    }
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), __tact_not_null($isCompensatorOpt));
}

((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int), (int, int, int, int, int, int, int, int, int, slice, slice)) $OrderBook$_fun_configData((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, slice $executor, slice $compensator) impure inline_ref {
    var (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)) = $self;
    int $isExecutor = null();
    if ((~ null?($executor))) {
        $isExecutor = __tact_dict_get_slice_int($self'executors, 267, __tact_not_null($executor), 1);
    }
    int $isCompensator = null();
    if ((~ null?($compensator))) {
        $isCompensator = __tact_dict_get_slice_int($self'compensators, 267, __tact_not_null($compensator), 1);
    }
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), $ConfigData$_constructor_isExecutor_isCompensator_minTimeDelayExecutor_maxTimeDelayExecutor_minTimeDelayTrader_minPendingTimeDelayCompensator_minExecutionFee_gasConsumption_minTonsForStorage_usdtWallet_pool($isExecutor, $isCompensator, $self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool));
}

((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int), cell) $OrderBook$_fun_createJettonTransferBody((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, int $queryId, int $jettonAmount, slice $to, slice $responseDestination) impure inline_ref {
    var (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)) = $self;
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), end_cell(store_slice(store_coins(store_int(__tact_store_address(__tact_store_address(store_coins(store_int(store_int(begin_cell(), 260734629, 32), $queryId, 64), $jettonAmount), $to), $responseDestination), 0, 1), 0), $Cell$_fun_asSlice(end_cell(begin_cell())))));
}

((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int), ()) $OrderBook$_fun_refundLiquidity((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, int $queryId, int $amount, slice $to) impure inline_ref {
    var (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)) = $self;
    __tact_nop();
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'usdtWallet, 0, 64, false, ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_createJettonTransferBody($queryId, $amount, $to, $to)));
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int), ()) $OrderBook$_fun_handleCreateIncreaseRBFPositionOrder((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, int $queryId, int $jettonFromAmount, slice $account, int $executionFee, int $liquidityDelta) impure inline_ref {
    var (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)) = $self;
    __tact_nop();
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    if (($ctx'value < ($executionFee + $self'gasConsumption))) {
        __tact_nop();
        ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_refundLiquidity($queryId, $jettonFromAmount, $account);
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
    }
    if (($jettonFromAmount < $liquidityDelta)) {
        ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_refundLiquidity($queryId, $jettonFromAmount, $account);
        __tact_nop();
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
    }
    int $orderId = $self'rbfPositionOrderIndexNext;
    $self'rbfPositionOrderIndexNext = ($orderId + 1);
    $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $orderId, $RBFPositionOrder$_store_cell($RBFPositionOrder$_constructor_isIncrease_account_liquidityDelta_executionFee_blockTime_isPending_pendingTime_callbackId_executionFeeReceiver(true, $account, $liquidityDelta, $executionFee, now(), false, now(), null(), null())));
    $global_emit($RBFPositionOrderCreatedEvent$_store_cell($RBFPositionOrderCreatedEvent$_constructor_isIncrease_account_liquidityDelta_executionFee_orderId(true, $account, $liquidityDelta, $executionFee, $orderId)));
    int $refundValue = (($Context$_get_value(__tact_context_get()) - $executionFee) - $self'gasConsumption);
    if (($refundValue > 0)) {
        __tact_nop();
        $global_send($SendParameters$_constructor_to_bounce_value($account, false, $refundValue));
    }
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int), ()) $OrderBook$_fun_handelRBFPositionOrderCallback((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, int $orderId, int $trxId) impure inline_ref {
    var (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)) = $self;
    tuple $orderOpt = $RBFPositionOrder$_load_opt(__tact_dict_get_int_cell($self'rbfPositionOrders, 257, $orderId));
    if (null?($orderOpt)) {
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
    }
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'pendingTime, $order'callbackId, $order'executionFeeReceiver) = $RBFPositionOrder$_not_null($orderOpt);
    $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $orderId, $RBFPositionOrder$_store_opt(null()));
    if ($order'isIncrease) {
        $global_emit($RBFPositionOrderCancelledEvent$_store_cell($RBFPositionOrderCancelledEvent$_constructor_isIncrease_orderId_trxId(true, $orderId, $trxId)));
        if ((~ null?($order'executionFeeReceiver))) {
            $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_not_null($order'executionFeeReceiver), true, $order'executionFee, 2));
        }
    } else {
        $global_emit($RBFPositionOrderExecutedEvent$_store_cell($RBFPositionOrderExecutedEvent$_constructor_isIncrease_orderId_trxId(false, $orderId, $trxId)));
        if ((~ null?($order'executionFeeReceiver))) {
            $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_not_null($order'executionFeeReceiver), true, $order'executionFee, 2));
        }
    }
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int), (int, tuple)) $OrderBook$_fun_rbfPositionOrderData((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, int $orderId) impure inline_ref {
    var (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)) = $self;
    tuple $rbfPositionOrder = null();
    if ((~ null?($orderId))) {
        $rbfPositionOrder = $RBFPositionOrder$_load_opt(__tact_dict_get_int_cell($self'rbfPositionOrders, 257, __tact_not_null($orderId)));
    }
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), $RBFPositionOrderData$_constructor_rbfPositionOrderIndexNext_rbfPositionOrder($self'rbfPositionOrderIndexNext, $rbfPositionOrder));
}

((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int), ()) $OrderBook$_fun_shouldCancel((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, int $blockTime, slice $account, int $isPending) impure inline_ref {
    var (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)) = $self;
    throw_unless(24173, (~ $isPending));
    int $isExecutor = ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_isExecutor(__tact_context_get_sender());
    if ($isExecutor) {
        throw_unless(39703, (($blockTime + $self'minTimeDelayExecutor) <= now()));
    }
    throw_unless(41207, ( (( __tact_slice_eq_bits($account, __tact_context_get_sender()) )) ? (true) : ($isExecutor) ));
    if ((~ $isExecutor)) {
        throw_unless(39703, (($blockTime + $self'minTimeDelayTrader) <= now()));
    }
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int), ()) $OrderBook$_fun_shouldExecute((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, int $blockTime, int $isPending) impure inline_ref {
    var (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)) = $self;
    throw_unless(24173, (~ $isPending));
    int $isExecutor = ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_isExecutor(__tact_context_get_sender());
    throw_unless(41207, $isExecutor);
    throw_unless(39703, (($blockTime + $self'minTimeDelayExecutor) <= now()));
    throw_unless(16780, (($blockTime + $self'maxTimeDelayExecutor) > now()));
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int), ()) $OrderBook$_fun_requireOwner((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self) impure inline_ref {
    var (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)) = $self;
    throw_unless(132, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int), slice) $OrderBook$_fun_owner((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self) impure inline_ref {
    var (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)) = $self;
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), $self'owner);
}

;;
;; Receivers of a Contract OrderBook
;;

(((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int)), ()) $OrderBook$_internal_binary_UpdateConfig((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, (slice, int, slice, int, int, int, int, int, int, int, int, slice, slice) $msg) impure inline {
    var ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext) = $self;
    var ($msg'executor, $msg'enableExecutor, $msg'compensator, $msg'enableCompensator, $msg'minTimeDelayExecutor, $msg'maxTimeDelayExecutor, $msg'minTimeDelayTrader, $msg'minPendingTimeDelayCompensator, $msg'minExecutionFee, $msg'gasConsumption, $msg'minTonsForStorage, $msg'usdtWallet, $msg'pool) = $msg;
    ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_requireOwner();
    if (( ((~ null?($msg'executor))) ? ((~ null?($msg'enableExecutor))) : (false) )) {
        $self'executors~__tact_dict_set_slice_int(267, __tact_not_null($msg'executor), __tact_not_null($msg'enableExecutor), 1);
    }
    if (( ((~ null?($msg'compensator))) ? ((~ null?($msg'enableCompensator))) : (false) )) {
        $self'compensators~__tact_dict_set_slice_int(267, __tact_not_null($msg'compensator), __tact_not_null($msg'enableCompensator), 1);
    }
    if ((~ null?($msg'minTimeDelayExecutor))) {
        $self'minTimeDelayExecutor = __tact_not_null($msg'minTimeDelayExecutor);
    }
    if ((~ null?($msg'maxTimeDelayExecutor))) {
        $self'maxTimeDelayExecutor = __tact_not_null($msg'maxTimeDelayExecutor);
    }
    if ((~ null?($msg'minTimeDelayTrader))) {
        $self'minTimeDelayTrader = __tact_not_null($msg'minTimeDelayTrader);
    }
    if ((~ null?($msg'minPendingTimeDelayCompensator))) {
        $self'minPendingTimeDelayCompensator = __tact_not_null($msg'minPendingTimeDelayCompensator);
    }
    if ((~ null?($msg'minExecutionFee))) {
        $self'minExecutionFee = __tact_not_null($msg'minExecutionFee);
    }
    if ((~ null?($msg'gasConsumption))) {
        $self'gasConsumption = __tact_not_null($msg'gasConsumption);
    }
    if ((~ null?($msg'minTonsForStorage))) {
        $self'minTonsForStorage = __tact_not_null($msg'minTonsForStorage);
    }
    if ((~ null?($msg'usdtWallet))) {
        $self'usdtWallet = __tact_not_null($msg'usdtWallet);
    }
    if ((~ null?($msg'pool))) {
        $self'pool = __tact_not_null($msg'pool);
    }
    $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_context_get_sender(), false, 0, 64));
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

(((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int)), ()) $OrderBook$_internal_binary_TokenNotification((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, (int, int, slice, slice) $msg) impure inline {
    var ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext) = $self;
    var ($msg'queryId, $msg'amount, $msg'from, $msg'forwardPayload) = $msg;
    if (( ~ __tact_slice_eq_bits($self'usdtWallet, __tact_context_get_sender()) )) {
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
    }
    slice $operation = $Cell$_fun_asSlice($msg'forwardPayload~load_ref());
    int $opCode = $operation~load_int(32);
    if (($opCode == 1)) {
        int $liquidityDelta = $operation~load_int(128);
        int $executionFee = $operation~load_coins();
        __tact_nop();
        __tact_nop();
        __tact_nop();
        __tact_nop();
        ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_handleCreateIncreaseRBFPositionOrder($msg'queryId, $msg'amount, $msg'from, $executionFee, $liquidityDelta);
    }
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

(((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int)), ()) $OrderBook$_internal_binary_TokenExcesses((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, (int) $msg) impure inline {
    var ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext) = $self;
    var ($msg'queryId) = $msg;
    tuple $jettonCallbackOpt = $JettonCallback$_load_opt(__tact_dict_get_int_cell($self'jettonCallbacks, 257, $msg'queryId));
    if (null?($jettonCallbackOpt)) {
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
    }
    var ($jettonCallback'orderType, $jettonCallback'orderId, $jettonCallback'tokenId, $jettonCallback'amount, $jettonCallback'trxId) = $JettonCallback$_not_null($jettonCallbackOpt);
    $self'jettonCallbacks~__tact_dict_set_int_cell(257, $msg'queryId, $JettonCallback$_store_opt(null()));
    if (($jettonCallback'orderType == 1)) {
        ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_handelRBFPositionOrderCallback($jettonCallback'orderId, $jettonCallback'trxId);
    }
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

(((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int)), ()) $OrderBook$_internal_binary_CreateDecreaseRBFPositionOrder((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, (int, int) $msg) impure inline {
    var ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext) = $self;
    var ($msg'executionFee, $msg'liquidityDelta) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, (($ctx'value - $msg'executionFee) >= $self'gasConsumption));
    throw_unless(24562, ($msg'executionFee >= $self'minExecutionFee));
    int $orderId = $self'rbfPositionOrderIndexNext;
    $self'rbfPositionOrderIndexNext = ($self'rbfPositionOrderIndexNext + 1);
    $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $orderId, $RBFPositionOrder$_store_cell($RBFPositionOrder$_constructor_isIncrease_account_liquidityDelta_executionFee_blockTime_isPending_pendingTime_callbackId_executionFeeReceiver(false, __tact_context_get_sender(), $msg'liquidityDelta, $msg'executionFee, now(), false, now(), null(), null())));
    $global_emit($RBFPositionOrderCreatedEvent$_store_cell($RBFPositionOrderCreatedEvent$_constructor_isIncrease_account_liquidityDelta_executionFee_orderId(false, __tact_context_get_sender(), $msg'liquidityDelta, $msg'executionFee, $orderId)));
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

(((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int)), ()) $OrderBook$_internal_binary_CancelRBFPositionOrder((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, (int, int, slice) $msg) impure inline {
    var ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext) = $self;
    var ($msg'orderId, $msg'trxId, $msg'executionFeeReceiver) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, ($ctx'value >= $self'gasConsumption));
    tuple $orderOpt = $RBFPositionOrder$_load_opt(__tact_dict_get_int_cell($self'rbfPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'pendingTime, $order'callbackId, $order'executionFeeReceiver) = $RBFPositionOrder$_not_null($orderOpt);
    ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_shouldCancel($order'blockTime, __tact_context_get_sender(), $order'isPending);
    if ($order'isIncrease) {
        int $callbackId = $self'jettonCallbackQueryIdNext;
        $self'jettonCallbackQueryIdNext = ($callbackId + 1);
        $self'jettonCallbacks~__tact_dict_set_int_cell(257, $callbackId, $JettonCallback$_store_cell($JettonCallback$_constructor_orderType_orderId_tokenId_amount_trxId(1, $msg'orderId, null(), $order'liquidityDelta, $msg'trxId)));
        if ((~ null?($msg'executionFeeReceiver))) {
            $order'executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
        } else {
            $order'executionFeeReceiver = __tact_context_get_sender();
        }
        $order'isPending = true;
        $order'pendingTime = now();
        $order'callbackId = $callbackId;
        $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $RBFPositionOrder$_store_cell(($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'pendingTime, $order'callbackId, $order'executionFeeReceiver)));
        $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'usdtWallet, 0, 64, false, ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_createJettonTransferBody($callbackId, $order'liquidityDelta, $order'account, my_address())));
    } else {
        slice $executionFeeReceiver = __tact_context_get_sender();
        if ((~ null?($msg'executionFeeReceiver))) {
            $executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
        }
        $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $RBFPositionOrder$_store_opt(null()));
        $global_emit($RBFPositionOrderCancelledEvent$_store_cell($RBFPositionOrderCancelledEvent$_constructor_isIncrease_orderId_trxId(false, $msg'orderId, $msg'trxId)));
        $global_send($SendParameters$_constructor_to_bounce_value_mode($executionFeeReceiver, true, $order'executionFee, 2));
    }
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

(((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int)), ()) $OrderBook$_internal_binary_ExecuteRBFPositionOrder((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, (int, int, slice) $msg) impure inline {
    var ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext) = $self;
    var ($msg'orderId, $msg'trxId, $msg'executionFeeReceiver) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, ($ctx'value >= $self'gasConsumption));
    tuple $orderOpt = $RBFPositionOrder$_load_opt(__tact_dict_get_int_cell($self'rbfPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'pendingTime, $order'callbackId, $order'executionFeeReceiver) = $RBFPositionOrder$_not_null($orderOpt);
    ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_shouldExecute($order'blockTime, $order'isPending);
    if ((~ null?($msg'executionFeeReceiver))) {
        $order'executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
    } else {
        $order'executionFeeReceiver = __tact_context_get_sender();
    }
    $order'isPending = true;
    $order'pendingTime = now();
    $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $RBFPositionOrder$_store_cell(($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'pendingTime, $order'callbackId, $order'executionFeeReceiver)));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'pool, 0, 64, false, $UpdateRBFPosition$_store_cell($UpdateRBFPosition$_constructor_isIncrease_orderId_trxId_account_liquidityDelta($order'isIncrease, $msg'orderId, $msg'trxId, $order'account, $order'liquidityDelta))));
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

(((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int)), ()) $OrderBook$_internal_binary_UpdateRBFPositionSuccess((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, (int, int, int) $msg) impure inline {
    var ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext) = $self;
    var ($msg'orderId, $msg'receive, $msg'trxId) = $msg;
    throw_unless(41207, ( __tact_slice_eq_bits($self'pool, __tact_context_get_sender()) ));
    tuple $orderOpt = $RBFPositionOrder$_load_opt(__tact_dict_get_int_cell($self'rbfPositionOrders, 257, $msg'orderId));
    if (null?($orderOpt)) {
        __tact_nop();
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
    }
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'pendingTime, $order'callbackId, $order'executionFeeReceiver) = $RBFPositionOrder$_not_null($orderOpt);
    if ($order'isIncrease) {
        $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $RBFPositionOrder$_store_opt(null()));
        $global_emit($RBFPositionOrderExecutedEvent$_store_cell($RBFPositionOrderExecutedEvent$_constructor_isIncrease_orderId_trxId(true, $msg'orderId, $msg'trxId)));
        if ((~ null?($order'executionFeeReceiver))) {
            $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_not_null($order'executionFeeReceiver), true, $order'executionFee, 2));
        }
    } else {
        int $callbackId = $self'jettonCallbackQueryIdNext;
        $self'jettonCallbackQueryIdNext = ($callbackId + 1);
        $self'jettonCallbacks~__tact_dict_set_int_cell(257, $callbackId, $JettonCallback$_store_cell($JettonCallback$_constructor_orderType_orderId_tokenId_amount_trxId(1, $msg'orderId, null(), $msg'receive, $msg'trxId)));
        $order'callbackId = $callbackId;
        $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $RBFPositionOrder$_store_cell(($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'pendingTime, $order'callbackId, $order'executionFeeReceiver)));
        $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'usdtWallet, 0, 64, false, ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_createJettonTransferBody($callbackId, $msg'receive, $order'account, my_address())));
    }
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

(((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int)), ()) $OrderBook$_receive_binary_bounce_UpdateRBFPosition((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, (int, int) $src) impure inline {
    var ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext) = $self;
    var ($src'isIncrease, $src'orderId) = $src;
    tuple $orderOpt = $RBFPositionOrder$_load_opt(__tact_dict_get_int_cell($self'rbfPositionOrders, 257, $src'orderId));
    if (null?($orderOpt)) {
        __tact_nop();
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
    }
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'pendingTime, $order'callbackId, $order'executionFeeReceiver) = $RBFPositionOrder$_not_null($orderOpt);
    $order'isPending = false;
    $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $src'orderId, $RBFPositionOrder$_store_cell(($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'pendingTime, $order'callbackId, $order'executionFeeReceiver)));
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

(((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int)), ()) $OrderBook$_internal_binary_CompensateIncreaseRBFPositionOrder((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, (int, int, int, int, slice) $msg) impure inline {
    var ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext) = $self;
    var ($msg'orderId, $msg'trxId, $msg'positionSuccess, $msg'refundSuccess, $msg'executionFeeReceiver) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, ($ctx'value >= $self'gasConsumption));
    throw_unless(21064, ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_isCompensator(__tact_context_get_sender()));
    tuple $orderOpt = $RBFPositionOrder$_load_opt(__tact_dict_get_int_cell($self'rbfPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'pendingTime, $order'callbackId, $order'executionFeeReceiver) = $RBFPositionOrder$_not_null($orderOpt);
    throw_unless(42241, $order'isPending);
    throw_unless(54538, (($order'pendingTime + $self'minPendingTimeDelayCompensator) <= now()));
    if ($msg'positionSuccess) {
        $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $RBFPositionOrder$_store_opt(null()));
        $global_emit($RBFPositionOrderExecutedEvent$_store_cell($RBFPositionOrderExecutedEvent$_constructor_isIncrease_orderId_trxId(true, $msg'orderId, $msg'trxId)));
        if ((~ null?($order'executionFeeReceiver))) {
            $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_not_null($order'executionFeeReceiver), true, $order'executionFee, 2));
        }
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
    }
    if ($msg'refundSuccess) {
        if ((~ null?($order'callbackId))) {
            $self'jettonCallbacks~__tact_dict_set_int_cell(257, __tact_not_null($order'callbackId), $JettonCallback$_store_opt(null()));
        }
        $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $RBFPositionOrder$_store_opt(null()));
        $global_emit($RBFPositionOrderCancelledEvent$_store_cell($RBFPositionOrderCancelledEvent$_constructor_isIncrease_orderId_trxId(true, $msg'orderId, $msg'trxId)));
        if ((~ null?($order'executionFeeReceiver))) {
            $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_not_null($order'executionFeeReceiver), true, $order'executionFee, 2));
        }
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
    }
    throw_unless(40029, (~ null?($order'callbackId)));
    int $callbackId = __tact_not_null($order'callbackId);
    tuple $jettonCallbackOpt = $JettonCallback$_load_opt(__tact_dict_get_int_cell($self'jettonCallbacks, 257, $callbackId));
    if (null?($jettonCallbackOpt)) {
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
    }
    var ($jettonCallback'orderType, $jettonCallback'orderId, $jettonCallback'tokenId, $jettonCallback'amount, $jettonCallback'trxId) = $JettonCallback$_not_null($jettonCallbackOpt);
    $jettonCallback'trxId = $msg'trxId;
    $self'jettonCallbacks~__tact_dict_set_int_cell(257, $callbackId, $JettonCallback$_store_cell(($jettonCallback'orderType, $jettonCallback'orderId, $jettonCallback'tokenId, $jettonCallback'amount, $jettonCallback'trxId)));
    if ((~ null?($msg'executionFeeReceiver))) {
        $order'executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
    } else {
        $order'executionFeeReceiver = __tact_context_get_sender();
    }
    $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $RBFPositionOrder$_store_cell(($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'pendingTime, $order'callbackId, $order'executionFeeReceiver)));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'usdtWallet, 0, 64, false, ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_createJettonTransferBody($callbackId, $jettonCallback'amount, $order'account, my_address())));
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

(((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int)), ()) $OrderBook$_internal_binary_CompensateDecreaseRBFPositionOrder((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, (int, int, int, int, slice) $msg) impure inline {
    var ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext) = $self;
    var ($msg'orderId, $msg'trxId, $msg'positionSuccess, $msg'refundSuccess, $msg'executionFeeReceiver) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, ($ctx'value >= $self'gasConsumption));
    throw_unless(21064, ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_isCompensator(__tact_context_get_sender()));
    tuple $orderOpt = $RBFPositionOrder$_load_opt(__tact_dict_get_int_cell($self'rbfPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'pendingTime, $order'callbackId, $order'executionFeeReceiver) = $RBFPositionOrder$_not_null($orderOpt);
    throw_unless(42241, $order'isPending);
    throw_unless(54538, (($order'pendingTime + $self'minPendingTimeDelayCompensator) <= now()));
    if ((~ $msg'positionSuccess)) {
        $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $RBFPositionOrder$_store_opt(null()));
        $global_emit($RBFPositionOrderCancelledEvent$_store_cell($RBFPositionOrderCancelledEvent$_constructor_isIncrease_orderId_trxId(false, $msg'orderId, $msg'trxId)));
        if ((~ null?($order'executionFeeReceiver))) {
            $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_not_null($order'executionFeeReceiver), true, $order'executionFee, 2));
        }
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
    }
    if ($msg'refundSuccess) {
        if ((~ null?($order'callbackId))) {
            $self'jettonCallbacks~__tact_dict_set_int_cell(257, __tact_not_null($order'callbackId), $JettonCallback$_store_opt(null()));
        }
        $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $RBFPositionOrder$_store_opt(null()));
        $global_emit($RBFPositionOrderExecutedEvent$_store_cell($RBFPositionOrderExecutedEvent$_constructor_isIncrease_orderId_trxId(false, $msg'orderId, $msg'trxId)));
        if ((~ null?($order'executionFeeReceiver))) {
            $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_not_null($order'executionFeeReceiver), true, $order'executionFee, 2));
        }
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
    }
    throw_unless(40029, (~ null?($order'callbackId)));
    int $callbackId = __tact_not_null($order'callbackId);
    tuple $jettonCallbackOpt = $JettonCallback$_load_opt(__tact_dict_get_int_cell($self'jettonCallbacks, 257, $callbackId));
    if (null?($jettonCallbackOpt)) {
        return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
    }
    var ($jettonCallback'orderType, $jettonCallback'orderId, $jettonCallback'tokenId, $jettonCallback'amount, $jettonCallback'trxId) = $JettonCallback$_not_null($jettonCallbackOpt);
    $jettonCallback'trxId = $msg'trxId;
    $self'jettonCallbacks~__tact_dict_set_int_cell(257, $callbackId, $JettonCallback$_store_cell(($jettonCallback'orderType, $jettonCallback'orderId, $jettonCallback'tokenId, $jettonCallback'amount, $jettonCallback'trxId)));
    if ((~ null?($msg'executionFeeReceiver))) {
        $order'executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
    } else {
        $order'executionFeeReceiver = __tact_context_get_sender();
    }
    $self'rbfPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $RBFPositionOrder$_store_cell(($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'pendingTime, $order'callbackId, $order'executionFeeReceiver)));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'usdtWallet, 0, 64, false, ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_createJettonTransferBody($callbackId, $jettonCallback'amount, $order'account, my_address())));
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

(((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int)), ()) $OrderBook$_internal_binary_CancelIncreasePerpPositionMarketOrder((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, (slice, int, int) $msg) impure inline {
    var ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext) = $self;
    var ($msg'executionFeeReceiver, $msg'orderId, $msg'trxId) = $msg;
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

(((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int)), ()) $OrderBook$_internal_binary_ExecuteIncreasePerpPositionMarketOrder((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, (slice, int, int) $msg) impure inline {
    var ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext) = $self;
    var ($msg'executionFeeReceiver, $msg'orderId, $msg'trxId) = $msg;
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

(((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int)), ()) $OrderBook$_internal_binary_Deploy((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) $self, (int) $deploy) impure inline {
    var ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext)~$OrderBook$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'minTimeDelayExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minPendingTimeDelayCompensator, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'tokenConfigs, $self'tokenIndexNext, $self'owner, $self'executors, $self'compensators, $self'jettonCallbacks, $self'jettonCallbackQueryIdNext, $self'rbfPositionOrders, $self'rbfPositionOrderIndexNext, $self'increaseLPPositionOrders, $self'increaseLPPositionOrderIndexNext, $self'increasePerpPositionMarketOrders, $self'increasePerpPositionMarketOrderIndexNext), ());
}

;;
;; Get methods of a Contract OrderBook
;;

_ %configData(slice $$executor, slice $$compensator) method_id(82657) {
    slice $executor = null?($$executor) ? null() : __tact_verify_address($$executor);
    slice $compensator = null?($$compensator) ? null() : __tact_verify_address($$compensator);
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_configData($executor, $compensator);
    return $ConfigData$_to_external(res);
}

_ %rbfPositionOrderData(int $$orderId) method_id(75336) {
    int $orderId = $$orderId;
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_rbfPositionOrderData($orderId);
    return $RBFPositionOrderData$_to_external(res);
}

_ %owner() method_id(83229) {
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_owner();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128,
        "org.ton.ownable"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmViybVdz3UkHxPc5tt8nnBkawQeeCwugFTTqfsjvSHhVK";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract OrderBook
;;

((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int), int) $OrderBook$_contract_router_internal((int, int, int, int, int, int, int, slice, slice, cell, int, slice, cell, cell, cell, int, cell, int, cell, int, cell, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        
        ;; Skip 0xFFFFFFFF
        in_msg~skip_bits(32);
        
        ;; Parse op
        int op = 0;
        if (slice_bits(in_msg) >= 32) {
            op = in_msg.preload_uint(32);
        }
        
        ;; Bounced handler for UpdateRBFPosition message
        if (op == 3902592095) {
            var msg = in_msg~$UpdateRBFPosition$_load_bounced();
            self~$OrderBook$_receive_binary_bounce_UpdateRBFPosition(msg);
            return (self, true);
        }
        
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive UpdateConfig message
    if (op == 2288110707) {
        var msg = in_msg~$UpdateConfig$_load();
        self~$OrderBook$_internal_binary_UpdateConfig(msg);
        return (self, true);
    }
    
    ;; Receive TokenNotification message
    if (op == 1935855772) {
        var msg = in_msg~$TokenNotification$_load();
        self~$OrderBook$_internal_binary_TokenNotification(msg);
        return (self, true);
    }
    
    ;; Receive TokenExcesses message
    if (op == 3576854235) {
        var msg = in_msg~$TokenExcesses$_load();
        self~$OrderBook$_internal_binary_TokenExcesses(msg);
        return (self, true);
    }
    
    ;; Receive CreateDecreaseRBFPositionOrder message
    if (op == 2702271213) {
        var msg = in_msg~$CreateDecreaseRBFPositionOrder$_load();
        self~$OrderBook$_internal_binary_CreateDecreaseRBFPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive CancelRBFPositionOrder message
    if (op == 3161392643) {
        var msg = in_msg~$CancelRBFPositionOrder$_load();
        self~$OrderBook$_internal_binary_CancelRBFPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive ExecuteRBFPositionOrder message
    if (op == 2755031130) {
        var msg = in_msg~$ExecuteRBFPositionOrder$_load();
        self~$OrderBook$_internal_binary_ExecuteRBFPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive UpdateRBFPositionSuccess message
    if (op == 485543809) {
        var msg = in_msg~$UpdateRBFPositionSuccess$_load();
        self~$OrderBook$_internal_binary_UpdateRBFPositionSuccess(msg);
        return (self, true);
    }
    
    ;; Receive CompensateIncreaseRBFPositionOrder message
    if (op == 3360956377) {
        var msg = in_msg~$CompensateIncreaseRBFPositionOrder$_load();
        self~$OrderBook$_internal_binary_CompensateIncreaseRBFPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive CompensateDecreaseRBFPositionOrder message
    if (op == 3244396211) {
        var msg = in_msg~$CompensateDecreaseRBFPositionOrder$_load();
        self~$OrderBook$_internal_binary_CompensateDecreaseRBFPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive CancelIncreasePerpPositionMarketOrder message
    if (op == 1488535682) {
        var msg = in_msg~$CancelIncreasePerpPositionMarketOrder$_load();
        self~$OrderBook$_internal_binary_CancelIncreasePerpPositionMarketOrder(msg);
        return (self, true);
    }
    
    ;; Receive ExecuteIncreasePerpPositionMarketOrder message
    if (op == 3760571195) {
        var msg = in_msg~$ExecuteIncreasePerpPositionMarketOrder$_load();
        self~$OrderBook$_internal_binary_ExecuteIncreasePerpPositionMarketOrder(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$OrderBook$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $OrderBook$_contract_load();
    
    ;; Handle operation
    int handled = self~$OrderBook$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $OrderBook$_contract_store(self);
}
