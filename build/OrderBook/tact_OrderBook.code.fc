#pragma version =0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_OrderBook.headers.fc";
#include "tact_OrderBook.stdlib.fc";
#include "tact_OrderBook.constants.fc";
#include "tact_OrderBook.storage.fc";

;;
;; Contract OrderBook functions
;;

(int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $OrderBook$_contract_init(int $deployId) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = (1800, 180, 100000000, 50000000, 30000000, null(), null(), null(), null(), null(), 1, null(), null(), 1);
    $self'owner = __tact_context_get_sender();
    $self'executors~__tact_dict_set_slice_int(267, __tact_context_get_sender(), true, 1);
    $self'usdtWallet = __tact_create_address(0, 0);
    $self'pool = __tact_create_address(0, 0);
    return ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext);
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), (int, int, int, int, int, int, slice, slice)) $OrderBook$_fun_configData((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, slice $executor) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    int $isExecutor = null();
    if ((~ null?($executor))) {
        $isExecutor = __tact_dict_get_slice_int($self'executors, 267, __tact_not_null($executor), 1);
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), $ConfigData$_constructor_isExecutor_maxTimeDelayExecutor_minTimeDelayTrader_minExecutionFee_gasConsumption_minTonsForStorage_usdtWallet_pool($isExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool));
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), ()) $OrderBook$_fun_refundJetton((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, int $queryId, int $amount, slice $to, slice $destination) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    if (($amount > 0)) {
        $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'usdtWallet, 100000000, 2, false, $TokenTransfer$_store_cell($TokenTransfer$_constructor_queryId_amount_receiver_responseDestination_customPayload_forwardTonAmount_forwardPayload($queryId, $amount, $to, $destination, null(), 0, $Cell$_fun_asSlice(end_cell(begin_cell()))))));
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), ()) $OrderBook$_fun_refundExecessTon((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, slice $to, int $executionFee) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    int $refundValue = ((($Context$_get_value(__tact_context_get()) - $executionFee) - $self'gasConsumption) - $self'minTonsForStorage);
    if (($refundValue > 0)) {
        $global_send($SendParameters$_constructor_to_bounce_value_mode($to, false, $refundValue, 2));
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), int) $OrderBook$_fun_getPoolGas((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ((($Context$_fun_readForwardFee(__tact_context_get()) * 2) + ($self'gasConsumption * 2)) + $self'minTonsForStorage));
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), ()) $OrderBook$_fun_handleCreateIncreaseLPPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, int $queryId, int $jettonFromAmount, slice $account, int $executionFee, int $liquidityDelta) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    slice $refundComment = __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7();
    int $refund = false;
    if (($ctx'value < (($executionFee + $self'gasConsumption) + $self'minTonsForStorage))) {
        $refund = true;
        $refundComment = __gen_slice_string_8ba9018bc74a66ae95c44ce5cb80fbce64c3667445aa0d92336158bca8b98806();
    }
    if (($jettonFromAmount < $liquidityDelta)) {
        $refund = true;
        $refundComment = __gen_slice_string_8ce2da4af26e604e5fe31bdccf91e209e52cfe8aa03ca684428d0631f501a690();
    }
    if (($executionFee < $self'minExecutionFee)) {
        $refund = true;
        $refundComment = __gen_slice_string_dec71a65a2cdc865d4307f5761ab01137c82cb0513cb4734f6a1048ca6ce4039();
    }
    if ($refund) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundJetton($queryId, $jettonFromAmount, $account, $account);
        $global_send($SendParameters$_constructor_to_bounce_value_mode_body($account, true, $executionFee, (2 + 64), $String$_fun_asComment($refundComment)));
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
    }
    int $orderId = $self'lpPositionOrderIndexNext;
    $self'lpPositionOrderIndexNext = ($orderId + 1);
    $self'lpPositionOrders~__tact_dict_set_int_cell(257, $orderId, $LPPositionOrder$_store_cell($LPPositionOrder$_constructor_isIncrease_account_liquidityDelta_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator(true, $account, $liquidityDelta, $executionFee, now(), false, null(), null())));
    $global_emit($LPPositionOrderCreatedEvent$_store_cell($LPPositionOrderCreatedEvent$_constructor_opType_account_liquidityDelta_executionFee_orderId(1, $account, $liquidityDelta, $executionFee, $orderId)));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundExecessTon($account, $executionFee);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), tuple) $OrderBook$_fun_lpPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, int $orderId) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), $LPPositionOrder$_load_opt(__tact_dict_get_int_cell($self'lpPositionOrders, 257, $orderId)));
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), int) $OrderBook$_fun_lpPositionOrderIndexNext((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), $self'lpPositionOrderIndexNext);
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), int) $OrderBook$_fun_createPerpOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, int $opType, slice $account, int $tokenId, int $isLong, int $marginDelta, int $sizeDelta, int $triggerPrice, int $tpSize, int $tpPrice, int $slSize, int $slPrice, int $executionFee) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    int $triggerAbove = false;
    int $orderId = $self'perpPositionOrderIndexNext;
    $self'perpPositionOrderIndexNext = ($orderId + 1);
    if (( (($opType == 10)) ? (true) : (($opType == 11)) )) {
        $triggerAbove = (~ $isLong);
        $self'perpPositionOrderExs~__tact_dict_set_int_cell(257, $orderId, $PerpPositionOrderEx$_store_cell($PerpPositionOrderEx$_constructor_tpSize_tpPrice_slSize_slPrice($tpSize, $tpPrice, $slSize, $slPrice)));
    } else {
        if (($opType == 12)) {
            $triggerAbove = $isLong;
        } else {
            if (($opType == 13)) {
                $triggerAbove = $isLong;
            } else {
                $triggerAbove = (~ $isLong);
            }
        }
    }
    $self'perpPositionOrders~__tact_dict_set_int_cell(257, $orderId, $PerpPositionOrder$_store_cell($PerpPositionOrder$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator($opType, $tokenId, $account, $isLong, $marginDelta, $sizeDelta, $triggerPrice, $triggerAbove, $executionFee, now(), false, null(), null())));
    $global_emit($PerpPositionOrderCreatedEvent$_store_cell($PerpPositionOrderCreatedEvent$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_executionFee_orderId_triggerPrice_triggerAbove_tpSize_tpPrice_slSize_slPrice($opType, $tokenId, $account, $isLong, $marginDelta, $sizeDelta, $executionFee, $orderId, $triggerPrice, $triggerAbove, $tpSize, $tpPrice, $slSize, $slPrice)));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), $orderId);
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), ()) $OrderBook$_fun_handleCreateIncreasePerpPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, int $queryId, int $jettonFromAmount, slice $account, int $executionFee, int $isMarket, int $tokenId, int $isLong, int $marginDelta, int $sizeDelta, int $triggerPrice, int $tpSize, int $tpPrice, int $slSize, int $slPrice) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    slice $refundComment = __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7();
    int $refund = false;
    if (($ctx'value < (($executionFee + $self'gasConsumption) + $self'minTonsForStorage))) {
        $refund = true;
        $refundComment = __gen_slice_string_8ba9018bc74a66ae95c44ce5cb80fbce64c3667445aa0d92336158bca8b98806();
    }
    if (($jettonFromAmount < $marginDelta)) {
        $refund = true;
        $refundComment = __gen_slice_string_8ce2da4af26e604e5fe31bdccf91e209e52cfe8aa03ca684428d0631f501a690();
    }
    if (($executionFee < $self'minExecutionFee)) {
        $refund = true;
        $refundComment = __gen_slice_string_dec71a65a2cdc865d4307f5761ab01137c82cb0513cb4734f6a1048ca6ce4039();
    }
    if ($refund) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundJetton($queryId, $jettonFromAmount, $account, $account);
        $global_send($SendParameters$_constructor_to_bounce_value_mode_body($account, true, $executionFee, (2 + 64), $String$_fun_asComment($refundComment)));
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
    }
    int $opType = 0;
    if ($isMarket) {
        $opType = 10;
    } else {
        $opType = 11;
    }
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_createPerpOrder($opType, $account, $tokenId, $isLong, $marginDelta, $sizeDelta, $triggerPrice, $tpSize, $tpPrice, $slSize, $slPrice, $executionFee);
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundExecessTon($account, $executionFee);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), tuple) $OrderBook$_fun_perpPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, int $orderId) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), $PerpPositionOrder$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrders, 257, $orderId)));
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), int) $OrderBook$_fun_perpPositionOrderIndexNext((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), $self'perpPositionOrderIndexNext);
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), ()) $OrderBook$_fun_shouldCancel((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, int $blockTime, slice $account, int $isPending) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    throw_unless(24173, (~ $isPending));
    int $isExecutor = false;
    int $isExecutorOpt = __tact_dict_get_slice_int($self'executors, 267, __tact_context_get_sender(), 1);
    if ((~ null?($isExecutorOpt))) {
        $isExecutor = __tact_not_null($isExecutorOpt);
    }
    throw_unless(41207, ( (( __tact_slice_eq_bits($account, __tact_context_get_sender()) )) ? (true) : ($isExecutor) ));
    if ((~ $isExecutor)) {
        throw_unless(39703, (($blockTime + $self'minTimeDelayTrader) <= now()));
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), ()) $OrderBook$_fun_shouldExecute((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, int $blockTime, int $isPending) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    throw_unless(24173, (~ $isPending));
    int $isExecutor = false;
    int $isExecutorOpt = __tact_dict_get_slice_int($self'executors, 267, __tact_context_get_sender(), 1);
    if ((~ null?($isExecutorOpt))) {
        $isExecutor = __tact_not_null($isExecutorOpt);
    }
    throw_unless(41207, $isExecutor);
    throw_unless(16780, (($blockTime + $self'maxTimeDelayExecutor) > now()));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), ()) $OrderBook$_fun_requireOwner((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    throw_unless(132, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), slice) $OrderBook$_fun_owner((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)) = $self;
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), $self'owner);
}

;;
;; Receivers of a Contract OrderBook
;;

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_internal_binary_UpdateConfig((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (slice, int, int, int, int, int, int, slice, slice) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($msg'executor, $msg'enableExecutor, $msg'maxTimeDelayExecutor, $msg'minTimeDelayTrader, $msg'minExecutionFee, $msg'gasConsumption, $msg'minTonsForStorage, $msg'usdtWallet, $msg'pool) = $msg;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_requireOwner();
    if (( ((~ null?($msg'executor))) ? ((~ null?($msg'enableExecutor))) : (false) )) {
        $self'executors~__tact_dict_set_slice_int(267, __tact_not_null($msg'executor), __tact_not_null($msg'enableExecutor), 1);
    }
    $self'maxTimeDelayExecutor = $msg'maxTimeDelayExecutor;
    $self'minTimeDelayTrader = $msg'minTimeDelayTrader;
    $self'minExecutionFee = $msg'minExecutionFee;
    $self'gasConsumption = $msg'gasConsumption;
    $self'minTonsForStorage = $msg'minTonsForStorage;
    $self'usdtWallet = $msg'usdtWallet;
    $self'pool = $msg'pool;
    $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_context_get_sender(), false, 0, 64));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_internal_binary_TokenNotification((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (int, int, slice, slice) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($msg'queryId, $msg'amount, $msg'from, $msg'forwardPayload) = $msg;
    if (( ~ __tact_slice_eq_bits($self'usdtWallet, __tact_context_get_sender()) )) {
        $global_send($SendParameters$_constructor_to_value_mode_bounce_body(__tact_context_get_sender(), 0, 64, false, $TokenTransfer$_store_cell($TokenTransfer$_constructor_queryId_amount_receiver_responseDestination_customPayload_forwardTonAmount_forwardPayload($msg'queryId, $msg'amount, $msg'from, null(), null(), 0, $Cell$_fun_asSlice(end_cell(begin_cell()))))));
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
    }
    slice $operation = $Cell$_fun_asSlice($msg'forwardPayload~load_ref());
    int $opCode = $operation~load_int(32);
    if (($opCode == 1)) {
        int $liquidityDelta = $operation~load_int(128);
        int $executionFee = $operation~load_coins();
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_handleCreateIncreaseLPPositionOrder($msg'queryId, $msg'amount, $msg'from, $executionFee, $liquidityDelta);
    } elseif (($opCode == 2)) {
        int $executionFee = $operation~load_coins();
        int $isMarket = ($operation~load_int(1) == (- 1));
        int $tokenId = $operation~load_int(64);
        int $isLong = ($operation~load_int(1) == (- 1));
        int $marginDelta = $operation~load_int(128);
        int $sizeDelta = $operation~load_int(128);
        int $triggerPrice = $operation~load_int(256);
        slice $tpSl = $Cell$_fun_asSlice($operation~load_ref());
        int $tpSize = $tpSl~load_int(128);
        int $tpPrice = $tpSl~load_int(256);
        int $slSize = $tpSl~load_int(128);
        int $slPrice = $tpSl~load_int(256);
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_handleCreateIncreasePerpPositionOrder($msg'queryId, $msg'amount, $msg'from, $executionFee, $isMarket, $tokenId, $isLong, $marginDelta, $sizeDelta, $triggerPrice, $tpSize, $tpPrice, $slSize, $slPrice);
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_internal_binary_CreateDecreaseLPPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($msg'executionFee, $msg'liquidityDelta) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, (($ctx'value - $msg'executionFee) >= ($self'gasConsumption + $self'minTonsForStorage)));
    throw_unless(24562, ($msg'executionFee >= $self'minExecutionFee));
    int $orderId = $self'lpPositionOrderIndexNext;
    $self'lpPositionOrderIndexNext = ($self'lpPositionOrderIndexNext + 1);
    $self'lpPositionOrders~__tact_dict_set_int_cell(257, $orderId, $LPPositionOrder$_store_cell($LPPositionOrder$_constructor_isIncrease_account_liquidityDelta_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator(false, __tact_context_get_sender(), $msg'liquidityDelta, $msg'executionFee, now(), false, null(), null())));
    $global_emit($LPPositionOrderCreatedEvent$_store_cell($LPPositionOrderCreatedEvent$_constructor_opType_account_liquidityDelta_executionFee_orderId(2, __tact_context_get_sender(), $msg'liquidityDelta, $msg'executionFee, $orderId)));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundExecessTon(__tact_context_get_sender(), $msg'executionFee);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_internal_binary_CancelLPPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (int, int, slice) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($msg'orderId, $msg'trxId, $msg'executionFeeReceiver) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    tuple $orderOpt = $LPPositionOrder$_load_opt(__tact_dict_get_int_cell($self'lpPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $LPPositionOrder$_not_null($orderOpt);
    if ($order'isIncrease) {
        throw_unless(19305, ($ctx'value >= (($self'gasConsumption + $self'minTonsForStorage) + 100000000)));
    } else {
        throw_unless(19305, ($ctx'value >= ($self'gasConsumption + $self'minTonsForStorage)));
    }
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_shouldCancel($order'blockTime, __tact_context_get_sender(), $order'isPending);
    slice $executionFeeReceiver = __tact_context_get_sender();
    if ((~ null?($msg'executionFeeReceiver))) {
        $executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
    }
    $self'lpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $LPPositionOrder$_store_opt(null()));
    if ($order'isIncrease) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundJetton(0, $order'liquidityDelta, $order'account, __tact_context_get_sender());
    }
    if (($order'executionFee > 0)) {
        $global_send($SendParameters$_constructor_to_bounce_value_mode($executionFeeReceiver, true, $order'executionFee, 2));
    }
    $global_emit($LPPositionOrderCancelledEvent$_store_cell($LPPositionOrderCancelledEvent$_constructor_opType_orderId_trxId(($order'isIncrease ? 1 : 2), $msg'orderId, $msg'trxId)));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundExecessTon(__tact_context_get_sender(), 0);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_internal_binary_ExecuteLPPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (int, int, slice, int, cell) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($msg'orderId, $msg'trxId, $msg'executionFeeReceiver, $msg'pricesLength, $msg'prices) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    tuple $orderOpt = $LPPositionOrder$_load_opt(__tact_dict_get_int_cell($self'lpPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $LPPositionOrder$_not_null($orderOpt);
    if ($order'isIncrease) {
        throw_unless(19305, ($ctx'value >= ((($self'gasConsumption * 2) + $self'minTonsForStorage) + ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_getPoolGas())));
    } else {
        throw_unless(19305, ($ctx'value >= (((($self'gasConsumption * 2) + $self'minTonsForStorage) + ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_getPoolGas()) + 100000000)));
    }
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_shouldExecute($order'blockTime, $order'isPending);
    if ((~ null?($msg'executionFeeReceiver))) {
        $order'executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
    } else {
        $order'executionFeeReceiver = __tact_context_get_sender();
    }
    $order'lastOperator = __tact_context_get_sender();
    $order'isPending = true;
    $self'lpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $LPPositionOrder$_store_cell(($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator)));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'pool, 0, 64, true, $UpdateLPPosition$_store_cell($UpdateLPPosition$_constructor_isIncrease_orderId_trxId_account_liquidityDelta_pricesLength_prices($order'isIncrease, $msg'orderId, $msg'trxId, $order'account, $order'liquidityDelta, $msg'pricesLength, $msg'prices))));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_internal_binary_UpdateLPPositionSuccess((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (int, int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($msg'orderId, $msg'receive, $msg'trxId) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(41207, ( __tact_slice_eq_bits($self'pool, __tact_context_get_sender()) ));
    tuple $orderOpt = $LPPositionOrder$_load_opt(__tact_dict_get_int_cell($self'lpPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $LPPositionOrder$_not_null($orderOpt);
    if ($order'isIncrease) {
        throw_unless(19305, ($ctx'value >= $self'gasConsumption));
    } else {
        throw_unless(19305, ($ctx'value >= ($self'gasConsumption + 100000000)));
    }
    $self'lpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $LPPositionOrder$_store_opt(null()));
    if (( ((~ $order'isIncrease)) ? (($msg'receive > 0)) : (false) )) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundJetton($msg'trxId, $msg'receive, $order'account, $order'lastOperator);
    }
    if (( ((~ null?($order'executionFeeReceiver))) ? (($order'executionFee > 0)) : (false) )) {
        $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_not_null($order'executionFeeReceiver), true, $order'executionFee, 2));
    }
    $global_emit($LPPositionOrderExecutedEvent$_store_cell($LPPositionOrderExecutedEvent$_constructor_opType_orderId_trxId(($order'isIncrease ? 1 : 2), $msg'orderId, $msg'trxId)));
    if ((~ null?($order'lastOperator))) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundExecessTon(__tact_not_null($order'lastOperator), 0);
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_receive_binary_bounce_UpdateLPPosition((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (int, int) $src) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($src'isIncrease, $src'orderId) = $src;
    tuple $orderOpt = $LPPositionOrder$_load_opt(__tact_dict_get_int_cell($self'lpPositionOrders, 257, $src'orderId));
    if (null?($orderOpt)) {
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
    }
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $LPPositionOrder$_not_null($orderOpt);
    $order'isPending = false;
    $self'lpPositionOrders~__tact_dict_set_int_cell(257, $src'orderId, $LPPositionOrder$_store_cell(($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator)));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_internal_binary_CreateDecreasePerpPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (int, int, int, int, int, int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($msg'executionFee, $msg'opType, $msg'tokenId, $msg'isLong, $msg'marginDelta, $msg'sizeDelta, $msg'triggerPrice) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, (($ctx'value - $msg'executionFee) >= ($self'gasConsumption + $self'minTonsForStorage)));
    throw_unless(24562, ($msg'executionFee >= $self'minExecutionFee));
    throw_unless(54499, ( (( (($msg'opType == 12)) ? (true) : (($msg'opType == 13)) )) ? (true) : (($msg'opType == 14)) ));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_createPerpOrder($msg'opType, __tact_context_get_sender(), $msg'tokenId, $msg'isLong, $msg'marginDelta, $msg'sizeDelta, $msg'triggerPrice, 0, 0, 0, 0, $msg'executionFee);
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundExecessTon(__tact_context_get_sender(), $msg'executionFee);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_internal_binary_CancelPerpPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (slice, int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($msg'executionFeeReceiver, $msg'orderId, $msg'trxId) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    tuple $orderOpt = $PerpPositionOrder$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'opType, $order'tokenId, $order'account, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $PerpPositionOrder$_not_null($orderOpt);
    if (( (($order'opType == 10)) ? (true) : (($order'opType == 11)) )) {
        throw_unless(19305, ($ctx'value >= (($self'gasConsumption + $self'minTonsForStorage) + 100000000)));
    } else {
        throw_unless(19305, ($ctx'value >= ($self'gasConsumption + $self'minTonsForStorage)));
    }
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_shouldCancel($order'blockTime, __tact_context_get_sender(), $order'isPending);
    slice $executionFeeReceiver = __tact_context_get_sender();
    if ((~ null?($msg'executionFeeReceiver))) {
        $executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
    }
    $self'perpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $PerpPositionOrder$_store_opt(null()));
    if (( (($order'opType == 10)) ? (true) : (($order'opType == 11)) )) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundJetton($msg'trxId, $order'marginDelta, $order'account, __tact_context_get_sender());
    }
    if (($order'executionFee > 0)) {
        $global_send($SendParameters$_constructor_to_bounce_value_mode($executionFeeReceiver, true, $order'executionFee, 2));
    }
    $global_emit($PerpPositionOrderCancelledEvent$_store_cell($PerpPositionOrderCancelledEvent$_constructor_opType_orderId_trxId($order'opType, $msg'orderId, $msg'trxId)));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundExecessTon(__tact_context_get_sender(), 0);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_internal_binary_ExecutePerpPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (slice, int, int, int, cell) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($msg'executionFeeReceiver, $msg'orderId, $msg'trxId, $msg'pricesLength, $msg'prices) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    tuple $orderOpt = $PerpPositionOrder$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'opType, $order'tokenId, $order'account, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $PerpPositionOrder$_not_null($orderOpt);
    if (( (($order'opType == 10)) ? (true) : (($order'opType == 11)) )) {
        throw_unless(19305, ($ctx'value >= ((($self'gasConsumption * 2) + $self'minTonsForStorage) + ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_getPoolGas())));
    } else {
        throw_unless(19305, ($ctx'value >= (((($self'gasConsumption * 2) + $self'minTonsForStorage) + ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_getPoolGas()) + 100000000)));
    }
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_shouldExecute($order'blockTime, $order'isPending);
    if ((~ null?($msg'executionFeeReceiver))) {
        $order'executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
    } else {
        $order'executionFeeReceiver = __tact_context_get_sender();
    }
    $order'isPending = true;
    $self'perpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $PerpPositionOrder$_store_cell(($order'opType, $order'tokenId, $order'account, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator)));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'pool, 0, 64, true, $UpdatePerpPosition$_store_cell($UpdatePerpPosition$_constructor_orderId_opType_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices($msg'orderId, $order'opType, $msg'trxId, $order'account, $order'tokenId, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $msg'pricesLength, $msg'prices))));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_internal_binary_UpdatePerpPositionSuccess((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (int, int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($msg'orderId, $msg'receive, $msg'trxId) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(41207, ( __tact_slice_eq_bits($self'pool, __tact_context_get_sender()) ));
    tuple $orderOpt = $PerpPositionOrder$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrders, 257, $msg'orderId));
    if (null?($orderOpt)) {
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
    }
    var ($order'opType, $order'tokenId, $order'account, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $PerpPositionOrder$_not_null($orderOpt);
    if (( (($order'opType == 10)) ? (true) : (($order'opType == 11)) )) {
        throw_unless(19305, ($ctx'value >= $self'gasConsumption));
        tuple $orderExOpt = $PerpPositionOrderEx$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrderExs, 257, $msg'orderId));
        if ((~ null?($orderExOpt))) {
            var ($orderEx'tpSize, $orderEx'tpPrice, $orderEx'slSize, $orderEx'slPrice) = $PerpPositionOrderEx$_not_null($orderExOpt);
            if (( (($orderEx'tpSize > 0)) ? (($orderEx'tpPrice > 0)) : (false) )) {
                ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_createPerpOrder(13, __tact_context_get_sender(), $order'tokenId, $order'isLong, 0, $orderEx'tpSize, $orderEx'tpPrice, 0, 0, 0, 0, 0);
            }
            if (( (($orderEx'slSize > 0)) ? (($orderEx'slPrice > 0)) : (false) )) {
                ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_createPerpOrder(14, __tact_context_get_sender(), $order'tokenId, $order'isLong, 0, $orderEx'slSize, $orderEx'slPrice, 0, 0, 0, 0, 0);
            }
        }
    } else {
        throw_unless(19305, ($ctx'value >= ($self'gasConsumption + 100000000)));
    }
    $self'perpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $PerpPositionOrder$_store_opt(null()));
    $global_emit($PerpPositionOrderExecutedEvent$_store_cell($PerpPositionOrderExecutedEvent$_constructor_opType_orderId_trxId($order'opType, $msg'orderId, $msg'trxId)));
    if ((~ null?($order'executionFeeReceiver))) {
        $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_not_null($order'executionFeeReceiver), true, $order'executionFee, 2));
    }
    if ((~ null?($order'lastOperator))) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundExecessTon(__tact_not_null($order'lastOperator), 0);
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_receive_binary_bounce_UpdatePerpPosition((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (int, int) $src) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($src'orderId, $src'opType) = $src;
    tuple $orderOpt = $PerpPositionOrder$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrders, 257, $src'orderId));
    if (null?($orderOpt)) {
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
    }
    var ($order'opType, $order'tokenId, $order'account, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $PerpPositionOrder$_not_null($orderOpt);
    if (($order'opType == 3)) {
        $self'perpPositionOrders~__tact_dict_set_int_cell(257, $src'orderId, $PerpPositionOrder$_store_opt(null()));
    } else {
        $order'isPending = false;
        $self'perpPositionOrders~__tact_dict_set_int_cell(257, $src'orderId, $PerpPositionOrder$_store_cell(($order'opType, $order'tokenId, $order'account, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator)));
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_internal_binary_LiquidateOrADLPerpPosition((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (slice, int, slice, int, int, int, cell) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($msg'executionFeeReceiver, $msg'tokenId, $msg'account, $msg'isLong, $msg'trxId, $msg'pricesLength, $msg'prices) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, ($ctx'value >= (((($self'gasConsumption * 2) + $self'minTonsForStorage) + ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_getPoolGas()) + 100000000)));
    int $isExecutor = false;
    int $isExecutorOpt = __tact_dict_get_slice_int($self'executors, 267, __tact_context_get_sender(), 1);
    if ((~ null?($isExecutorOpt))) {
        $isExecutor = __tact_not_null($isExecutorOpt);
    }
    throw_unless(41207, $isExecutor);
    slice $executionFeeReceiver = __tact_context_get_sender();
    if ((~ null?($msg'executionFeeReceiver))) {
        $executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
    }
    int $orderId = $self'perpPositionOrderIndexNext;
    $self'perpPositionOrderIndexNext = ($self'perpPositionOrderIndexNext + 1);
    $self'perpPositionOrders~__tact_dict_set_int_cell(257, $orderId, $PerpPositionOrder$_store_cell($PerpPositionOrder$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator(3, $msg'tokenId, $msg'account, $msg'isLong, 0, 0, 0, false, 0, now(), true, $executionFeeReceiver, __tact_context_get_sender())));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'pool, 0, 64, true, $UpdatePerpPosition$_store_cell($UpdatePerpPosition$_constructor_opType_orderId_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices(3, $orderId, $msg'trxId, $msg'account, $msg'tokenId, $msg'isLong, 0, 0, 0, false, $msg'pricesLength, $msg'prices))));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_internal_binary_CompensateOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (int, int, int, slice, int, slice, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($msg'orderType, $msg'orderId, $msg'trxId, $msg'refundReceiver, $msg'refundAmount, $msg'executionFeeReceiver, $msg'executionFee) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    int $isExecutor = false;
    int $isExecutorOpt = __tact_dict_get_slice_int($self'executors, 267, __tact_context_get_sender(), 1);
    if ((~ null?($isExecutorOpt))) {
        $isExecutor = __tact_not_null($isExecutorOpt);
    }
    throw_unless(41207, $isExecutor);
    if (( ((~ null?($msg'refundReceiver))) ? (($msg'refundAmount > 0)) : (false) )) {
        throw_unless(19305, ($ctx'value >= (($self'gasConsumption + $self'minTonsForStorage) + 100000000)));
    } else {
        throw_unless(19305, ($ctx'value >= ($self'gasConsumption + $self'minTonsForStorage)));
    }
    if ((~ null?($msg'orderType))) {
        int $isPending = true;
        if (__tact_int_eq_nullable_one($msg'orderType, 1)) {
            tuple $orderOpt = $LPPositionOrder$_load_opt(__tact_dict_get_int_cell($self'lpPositionOrders, 257, $msg'orderId));
            if ((~ null?($orderOpt))) {
                $isPending = $LPPositionOrder$_get_isPending($LPPositionOrder$_not_null($orderOpt));
            }
            $self'lpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $LPPositionOrder$_store_opt(null()));
        } else {
            tuple $orderOpt = $PerpPositionOrder$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrders, 257, $msg'orderId));
            if ((~ null?($orderOpt))) {
                $isPending = $PerpPositionOrder$_get_isPending($PerpPositionOrder$_not_null($orderOpt));
            }
            $self'perpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $PerpPositionOrder$_store_opt(null()));
        }
        throw_unless(42241, $isPending);
    }
    if (( ((~ null?($msg'refundReceiver))) ? (($msg'refundAmount > 0)) : (false) )) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundJetton($msg'trxId, $msg'refundAmount, __tact_not_null($msg'refundReceiver), __tact_context_get_sender());
    }
    if (( ((~ null?($msg'executionFeeReceiver))) ? (($msg'executionFee > 0)) : (false) )) {
        $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_not_null($msg'executionFeeReceiver), true, $msg'executionFee, 2));
    }
    $global_emit($CompensateOrderEvent$_store_cell($CompensateOrderEvent$_constructor_orderType_orderId_trxId_refundReceiver_refundAmount_executionFeeReceiver_executionFee($msg'orderType, $msg'orderId, $msg'trxId, $msg'refundReceiver, $msg'refundAmount, $msg'executionFeeReceiver, $msg'executionFee)));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_refundExecessTon(__tact_context_get_sender(), 0);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

(((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int)), ()) $OrderBook$_internal_binary_Deploy((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) $self, (int) $deploy) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext)~$OrderBook$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'minExecutionFee, $self'gasConsumption, $self'minTonsForStorage, $self'usdtWallet, $self'pool, $self'owner, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext), ());
}

;;
;; Get methods of a Contract OrderBook
;;

_ %configData(slice $$executor) method_id(82657) {
    slice $executor = null?($$executor) ? null() : __tact_verify_address($$executor);
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_configData($executor);
    return $ConfigData$_to_external(res);
}

_ %lpPositionOrder(int $$orderId) method_id(67995) {
    int $orderId = $$orderId;
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_lpPositionOrder($orderId);
    return $LPPositionOrder$_to_opt_external(res);
}

_ %lpPositionOrderIndexNext() method_id(75834) {
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_lpPositionOrderIndexNext();
    return res;
}

_ %perpPositionOrder(int $$orderId) method_id(69362) {
    int $orderId = $$orderId;
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_perpPositionOrder($orderId);
    return $PerpPositionOrder$_to_opt_external(res);
}

_ %perpPositionOrderIndexNext() method_id(85280) {
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_perpPositionOrderIndexNext();
    return res;
}

_ %owner() method_id(83229) {
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_owner();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128,
        "org.ton.ownable"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://Qmcd5LgNKkZT9g28iuaXRgeShi29r9Bf68mrTt6jELa1iq";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract OrderBook
;;

((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int), int) $OrderBook$_contract_router_internal((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, cell, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        
        ;; Skip 0xFFFFFFFF
        in_msg~skip_bits(32);
        
        ;; Parse op
        int op = 0;
        if (slice_bits(in_msg) >= 32) {
            op = in_msg.preload_uint(32);
        }
        
        ;; Bounced handler for UpdateLPPosition message
        if (op == 3902592095) {
            var msg = in_msg~$UpdateLPPosition$_load_bounced();
            self~$OrderBook$_receive_binary_bounce_UpdateLPPosition(msg);
            return (self, true);
        }
        
        ;; Bounced handler for UpdatePerpPosition message
        if (op == 4283950423) {
            var msg = in_msg~$UpdatePerpPosition$_load_bounced();
            self~$OrderBook$_receive_binary_bounce_UpdatePerpPosition(msg);
            return (self, true);
        }
        
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive UpdateConfig message
    if (op == 1843397758) {
        var msg = in_msg~$UpdateConfig$_load();
        self~$OrderBook$_internal_binary_UpdateConfig(msg);
        return (self, true);
    }
    
    ;; Receive TokenNotification message
    if (op == 1935855772) {
        var msg = in_msg~$TokenNotification$_load();
        self~$OrderBook$_internal_binary_TokenNotification(msg);
        return (self, true);
    }
    
    ;; Receive CreateDecreaseLPPositionOrder message
    if (op == 3408287443) {
        var msg = in_msg~$CreateDecreaseLPPositionOrder$_load();
        self~$OrderBook$_internal_binary_CreateDecreaseLPPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive CancelLPPositionOrder message
    if (op == 1211708109) {
        var msg = in_msg~$CancelLPPositionOrder$_load();
        self~$OrderBook$_internal_binary_CancelLPPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive ExecuteLPPositionOrder message
    if (op == 2094273857) {
        var msg = in_msg~$ExecuteLPPositionOrder$_load();
        self~$OrderBook$_internal_binary_ExecuteLPPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive UpdateLPPositionSuccess message
    if (op == 485543809) {
        var msg = in_msg~$UpdateLPPositionSuccess$_load();
        self~$OrderBook$_internal_binary_UpdateLPPositionSuccess(msg);
        return (self, true);
    }
    
    ;; Receive CreateDecreasePerpPositionOrder message
    if (op == 229084921) {
        var msg = in_msg~$CreateDecreasePerpPositionOrder$_load();
        self~$OrderBook$_internal_binary_CreateDecreasePerpPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive CancelPerpPositionOrder message
    if (op == 4187297011) {
        var msg = in_msg~$CancelPerpPositionOrder$_load();
        self~$OrderBook$_internal_binary_CancelPerpPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive ExecutePerpPositionOrder message
    if (op == 3809189531) {
        var msg = in_msg~$ExecutePerpPositionOrder$_load();
        self~$OrderBook$_internal_binary_ExecutePerpPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive UpdatePerpPositionSuccess message
    if (op == 4009870004) {
        var msg = in_msg~$UpdatePerpPositionSuccess$_load();
        self~$OrderBook$_internal_binary_UpdatePerpPositionSuccess(msg);
        return (self, true);
    }
    
    ;; Receive LiquidateOrADLPerpPosition message
    if (op == 492244992) {
        var msg = in_msg~$LiquidateOrADLPerpPosition$_load();
        self~$OrderBook$_internal_binary_LiquidateOrADLPerpPosition(msg);
        return (self, true);
    }
    
    ;; Receive CompensateOrder message
    if (op == 4163385099) {
        var msg = in_msg~$CompensateOrder$_load();
        self~$OrderBook$_internal_binary_CompensateOrder(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$OrderBook$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $OrderBook$_contract_load();
    
    ;; Handle operation
    int handled = self~$OrderBook$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $OrderBook$_contract_store(self);
}
