#pragma version =0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_OrderBook.headers.fc";
#include "tact_OrderBook.stdlib.fc";
#include "tact_OrderBook.constants.fc";
#include "tact_OrderBook.storage.fc";

;;
;; Contract OrderBook functions
;;

(int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $OrderBook$_contract_init(int $deployId) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = (1800, 180, 40000000, 90000000, 40000000, 90000000, 10000000, 80000000, 50000000, 100000000, 0, null(), null(), null(), null(), null(), null(), 1, null(), null(), 1, null(), 1);
    $self'owner = __tact_context_get_sender();
    $self'stopped = false;
    $self'executors~__tact_dict_set_slice_int(267, __tact_context_get_sender(), true, 1);
    $self'usdtWallet = __tact_create_address(0, 0);
    $self'pool = __tact_create_address(0, 0);
    return ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext);
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), (int, int, int, int, int, int, int, int, int, int, int, int, slice, slice)) $OrderBook$_fun_configData((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, slice $executor) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    int $isExecutor = null();
    if ((~ null?($executor))) {
        $isExecutor = __tact_dict_get_slice_int($self'executors, 267, __tact_not_null($executor), 1);
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), $ConfigData$_constructor_isExecutor_maxTimeDelayExecutor_minTimeDelayTrader_lpMinExecutionFee_perpMinExecutionFee_lpGasConsumption_perpGasConsumption_poolLpGasConsumption_poolPerpGasConsumption_minTonsForStorage_gasTransferJetton_totalExecutionFee_usdtWallet_pool($isExecutor, $self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'totalExecutionFee, $self'usdtWallet, $self'pool));
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_refundJetton((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $queryId, int $amount, slice $to, slice $destination) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    if (($amount > 0)) {
        $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'usdtWallet, $self'gasTransferJetton, 2, false, $TokenTransfer$_store_cell($TokenTransfer$_constructor_queryId_amount_receiver_responseDestination_customPayload_forwardTonAmount_forwardPayload($queryId, $amount, $to, $destination, null(), 0, $Cell$_fun_asSlice(end_cell(begin_cell()))))));
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_fun_exceedGas((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $orderType, int $executionFeeDelta, int $executionMultiple, int $transferJetton) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    __tact_nop();
    int $tonBalanceBeforeMsg = (((__tact_my_balance() - $self'totalExecutionFee) + $executionFeeDelta) - $Context$_get_value(__tact_context_get()));
    $tonBalanceBeforeMsg = max(0, $tonBalanceBeforeMsg);
    int $storageFee = ($self'minTonsForStorage - min($tonBalanceBeforeMsg, $self'minTonsForStorage));
    int $extraValue = max(0, ($tonBalanceBeforeMsg - $self'minTonsForStorage));
    int $gasConsumption = (($orderType == 1) ? $self'lpGasConsumption : $self'perpGasConsumption);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ((((($Context$_get_value(__tact_context_get()) - $storageFee) - ($gasConsumption * $executionMultiple)) + $extraValue) - (($executionFeeDelta > 0) ? $executionFeeDelta : 0)) - ($transferJetton ? $self'gasTransferJetton : 0)));
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_refundExceedTon((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $orderType, slice $to, int $executionFeeDelta, int $executionMultiple, int $transferJetton) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    int $refundValue = ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_exceedGas($orderType, $executionFeeDelta, $executionMultiple, $transferJetton);
    __tact_nop();
    if (($refundValue > 0)) {
        $global_send($SendParameters$_constructor_to_bounce_value($to, false, $refundValue));
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_fun_getPoolGas((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $orderType) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    int $gasConsumption = (($orderType == 1) ? $self'poolLpGasConsumption : $self'poolPerpGasConsumption);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), (($Context$_fun_readForwardFee(__tact_context_get()) + $gasConsumption) + $self'minTonsForStorage));
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_handleCreateIncreaseLPPositionOrder((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $queryId, int $jettonFromAmount, slice $account, int $executionFee, int $liquidityDelta) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    slice $refundComment = __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7();
    int $refund = false;
    if (($ctx'value < ($executionFee + $self'lpGasConsumption))) {
        $refund = true;
        $refundComment = __gen_slice_string_8ba9018bc74a66ae95c44ce5cb80fbce64c3667445aa0d92336158bca8b98806();
    }
    if (($jettonFromAmount < $liquidityDelta)) {
        $refund = true;
        $refundComment = __gen_slice_string_8ce2da4af26e604e5fe31bdccf91e209e52cfe8aa03ca684428d0631f501a690();
    }
    if (($executionFee < $self'lpMinExecutionFee)) {
        $refund = true;
        $refundComment = __gen_slice_string_dec71a65a2cdc865d4307f5761ab01137c82cb0513cb4734f6a1048ca6ce4039();
    }
    if ($refund) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundJetton($queryId, $jettonFromAmount, $account, $account);
        $global_send($SendParameters$_constructor_to_bounce_value_mode_body($account, true, 0, (2 + 64), $String$_fun_asComment($refundComment)));
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
    }
    int $orderId = $self'lpPositionOrderIndexNext;
    $self'lpPositionOrderIndexNext = ($orderId + 1);
    $self'lpPositionOrders~__tact_dict_set_int_cell(257, $orderId, $LPPositionOrder$_store_cell($LPPositionOrder$_constructor_isIncrease_account_liquidityDelta_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator(true, $account, $liquidityDelta, $executionFee, now(), false, $account, null())));
    $self'totalExecutionFee = $self'totalExecutionFee + $executionFee;
    $global_emit($LPPositionOrderCreatedEvent$_store_cell($LPPositionOrderCreatedEvent$_constructor_opType_account_liquidityDelta_executionFee_orderId_trxId(1, $account, $liquidityDelta, $executionFee, $orderId, $queryId)));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundExceedTon(1, $account, $executionFee, 1, false);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), tuple) $OrderBook$_fun_lpPositionOrder((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $orderId) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), $LPPositionOrder$_load_opt(__tact_dict_get_int_cell($self'lpPositionOrders, 257, $orderId)));
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_fun_lpPositionOrderIndexNext((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), $self'lpPositionOrderIndexNext);
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_fun_createPerpOrder((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $trxId, int $opType, slice $account, int $tokenId, int $isLong, int $marginDelta, int $sizeDelta, int $triggerPrice, int $tpSize, int $tpPrice, int $slSize, int $slPrice, int $executionFee) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    int $triggerAbove = false;
    int $orderId = $self'perpPositionOrderIndexNext;
    $self'perpPositionOrderIndexNext = ($orderId + 1);
    if (( (($opType == 10)) ? (true) : (($opType == 11)) )) {
        $triggerAbove = (~ $isLong);
        $self'perpPositionOrderExs~__tact_dict_set_int_cell(257, $orderId, $PerpPositionOrderEx$_store_cell($PerpPositionOrderEx$_constructor_tpSize_tpPrice_slSize_slPrice_executionFee($tpSize, $tpPrice, $slSize, $slPrice, $executionFee)));
    } else {
        if (($opType == 12)) {
            $triggerAbove = $isLong;
        } else {
            if (($opType == 13)) {
                $triggerAbove = $isLong;
            } else {
                $triggerAbove = (~ $isLong);
            }
        }
    }
    $self'perpPositionOrders~__tact_dict_set_int_cell(257, $orderId, $PerpPositionOrder$_store_cell($PerpPositionOrder$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator($opType, $tokenId, $account, $isLong, $marginDelta, $sizeDelta, $triggerPrice, $triggerAbove, $executionFee, now(), false, __tact_context_get_sender(), null())));
    $global_emit($PerpPositionOrderCreatedEvent$_store_cell($PerpPositionOrderCreatedEvent$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_executionFee_orderId_triggerPrice_triggerAbove_tpSize_tpPrice_slSize_slPrice_trxId($opType, $tokenId, $account, $isLong, $marginDelta, $sizeDelta, $executionFee, $orderId, $triggerPrice, $triggerAbove, $tpSize, $tpPrice, $slSize, $slPrice, $trxId)));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), $orderId);
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_handleCreateIncreasePerpPositionOrder((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $queryId, int $jettonFromAmount, slice $account, int $executionFee, int $isMarket, int $tokenId, int $isLong, int $marginDelta, int $sizeDelta, int $triggerPrice, int $tpSize, int $tpPrice, int $slSize, int $slPrice) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    slice $refundComment = __gen_slice_string_96a296d224f285c67bee93c30f8a309157f0daa35dc5b87e410b78630a09cfc7();
    int $refund = false;
    if (($ctx'value < ($executionFee + $self'perpGasConsumption))) {
        $refund = true;
        $refundComment = __gen_slice_string_8ba9018bc74a66ae95c44ce5cb80fbce64c3667445aa0d92336158bca8b98806();
    }
    if (($jettonFromAmount < $marginDelta)) {
        $refund = true;
        $refundComment = __gen_slice_string_8ce2da4af26e604e5fe31bdccf91e209e52cfe8aa03ca684428d0631f501a690();
    }
    int $executionFeeMultiple = 1;
    if (( (($tpSize > 0)) ? (($tpPrice > 0)) : (false) )) {
        $executionFeeMultiple = $executionFeeMultiple + 1;
    }
    if (( (($slSize > 0)) ? (($slPrice > 0)) : (false) )) {
        $executionFeeMultiple = $executionFeeMultiple + 1;
    }
    if (($executionFee < ($self'perpMinExecutionFee * $executionFeeMultiple))) {
        $refund = true;
        $refundComment = __gen_slice_string_dec71a65a2cdc865d4307f5761ab01137c82cb0513cb4734f6a1048ca6ce4039();
    }
    if ($refund) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundJetton($queryId, $jettonFromAmount, $account, $account);
        $global_send($SendParameters$_constructor_to_bounce_value_mode_body($account, true, 0, (2 + 64), $String$_fun_asComment($refundComment)));
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
    }
    int $opType = 0;
    if ($isMarket) {
        $opType = 10;
    } else {
        $opType = 11;
    }
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_createPerpOrder($queryId, $opType, $account, $tokenId, $isLong, $marginDelta, $sizeDelta, $triggerPrice, $tpSize, $tpPrice, $slSize, $slPrice, ($executionFee / $executionFeeMultiple));
    $self'totalExecutionFee = $self'totalExecutionFee + $executionFee;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundExceedTon(2, $account, $executionFee, 1, false);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), tuple) $OrderBook$_fun_perpPositionOrder((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $orderId) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), $PerpPositionOrder$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrders, 257, $orderId)));
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_fun_perpPositionOrderIndexNext((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), $self'perpPositionOrderIndexNext);
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_fun_isExecutor((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, slice $account) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    int $isExecutorOpt = __tact_dict_get_slice_int($self'executors, 267, $account, 1);
    if (null?($isExecutorOpt)) {
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), false);
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), __tact_not_null($isExecutorOpt));
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_requireNotStopped((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    throw_unless(40368, (~ $self'stopped));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_requireStopped((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    throw_unless(53296, $self'stopped);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_fun_stopped((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), $self'stopped);
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_requireOwner((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    throw_unless(132, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), slice) $OrderBook$_fun_owner((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref {
    var (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)) = $self;
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), $self'owner);
}

;;
;; Receivers of a Contract OrderBook
;;

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_UpdateConfig((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, cell, int, int, int, int, int, int, int, int, int, int, slice, slice) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'executorLength, $msg'executors, $msg'maxTimeDelayExecutor, $msg'minTimeDelayTrader, $msg'lpMinExecutionFee, $msg'perpMinExecutionFee, $msg'lpGasConsumption, $msg'perpGasConsumption, $msg'poolLpGasConsumption, $msg'poolPerpGasConsumption, $msg'minTonsForStorage, $msg'gasTransferJetton, $msg'usdtWallet, $msg'pool) = $msg;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_requireOwner();
    int $i = 0;
    while (($i < $msg'executorLength)) {
        tuple $executor = $ExecutorParam$_load_opt(__tact_dict_get_int_cell($msg'executors, 257, $i));
        if ((~ null?($executor))) {
            $self'executors~__tact_dict_set_slice_int(267, $ExecutorParam$_get_executor($ExecutorParam$_not_null($executor)), $ExecutorParam$_get_enable($ExecutorParam$_not_null($executor)), 1);
        }
        $i = $i + 1;
    }
    $self'maxTimeDelayExecutor = $msg'maxTimeDelayExecutor;
    $self'minTimeDelayTrader = $msg'minTimeDelayTrader;
    $self'lpMinExecutionFee = $msg'lpMinExecutionFee;
    $self'perpMinExecutionFee = $msg'perpMinExecutionFee;
    $self'lpGasConsumption = $msg'lpGasConsumption;
    $self'perpGasConsumption = $msg'perpGasConsumption;
    $self'poolLpGasConsumption = $msg'poolLpGasConsumption;
    $self'poolPerpGasConsumption = $msg'poolPerpGasConsumption;
    $self'minTonsForStorage = $msg'minTonsForStorage;
    $self'gasTransferJetton = $msg'gasTransferJetton;
    $self'usdtWallet = $msg'usdtWallet;
    $self'pool = $msg'pool;
    $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_context_get_sender(), false, 0, 64));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_TokenNotification((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, int, slice, slice) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'queryId, $msg'amount, $msg'from, $msg'forwardPayload) = $msg;
    if (( ~ __tact_slice_eq_bits($self'usdtWallet, __tact_context_get_sender()) )) {
        $global_send($SendParameters$_constructor_to_value_mode_bounce_body(__tact_context_get_sender(), 0, (2 + 64), false, $TokenTransfer$_store_cell($TokenTransfer$_constructor_queryId_amount_receiver_responseDestination_customPayload_forwardTonAmount_forwardPayload($msg'queryId, $msg'amount, $msg'from, $msg'from, null(), 0, $Cell$_fun_asSlice(end_cell(begin_cell()))))));
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
    }
    if ($self'stopped) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundJetton($msg'queryId, $msg'amount, $msg'from, $msg'from);
        $global_send($SendParameters$_constructor_to_bounce_value_mode_body($msg'from, true, 0, (2 + 64), __gen_cell_comment_dfde81661693d5b2a6fafcd95a1debc64650c7aa9cee823a5fe18067c1b07bb4()));
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
    }
    slice $operation = $Cell$_fun_asSlice($msg'forwardPayload~load_ref());
    int $opCode = $operation~load_uint(32);
    if (($opCode == 1)) {
        int $liquidityDelta = $operation~load_uint(128);
        int $executionFee = $operation~load_coins();
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_handleCreateIncreaseLPPositionOrder($msg'queryId, $msg'amount, $msg'from, $executionFee, $liquidityDelta);
    } elseif (($opCode == 2)) {
        int $executionFee = $operation~load_coins();
        int $isMarket = ($operation~load_int(1) == (- 1));
        int $tokenId = $operation~load_uint(64);
        int $isLong = ($operation~load_int(1) == (- 1));
        int $marginDelta = $operation~load_uint(128);
        int $sizeDelta = $operation~load_uint(128);
        int $triggerPrice = $operation~load_uint(256);
        slice $tpSl = $Cell$_fun_asSlice($operation~load_ref());
        int $tpSize = $tpSl~load_uint(128);
        int $tpPrice = $tpSl~load_uint(256);
        int $slSize = $tpSl~load_uint(128);
        int $slPrice = $tpSl~load_uint(256);
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_handleCreateIncreasePerpPositionOrder($msg'queryId, $msg'amount, $msg'from, $executionFee, $isMarket, $tokenId, $isLong, $marginDelta, $sizeDelta, $triggerPrice, $tpSize, $tpPrice, $slSize, $slPrice);
    } else {
        $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'usdtWallet, 0, (2 + 64), false, $TokenTransfer$_store_cell($TokenTransfer$_constructor_queryId_amount_receiver_responseDestination_customPayload_forwardTonAmount_forwardPayload($msg'queryId, $msg'amount, $msg'from, $msg'from, null(), 0, $Cell$_fun_asSlice(end_cell(begin_cell()))))));
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_CreateDecreaseLPPositionOrder((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'executionFee, $msg'liquidityDelta, $msg'trxId) = $msg;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_requireNotStopped();
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, (($ctx'value - $msg'executionFee) >= $self'lpGasConsumption));
    throw_unless(24562, ($msg'executionFee >= $self'lpMinExecutionFee));
    int $orderId = $self'lpPositionOrderIndexNext;
    $self'lpPositionOrderIndexNext = ($self'lpPositionOrderIndexNext + 1);
    $self'lpPositionOrders~__tact_dict_set_int_cell(257, $orderId, $LPPositionOrder$_store_cell($LPPositionOrder$_constructor_isIncrease_account_liquidityDelta_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator(false, __tact_context_get_sender(), $msg'liquidityDelta, $msg'executionFee, now(), false, __tact_context_get_sender(), null())));
    $self'totalExecutionFee = $self'totalExecutionFee + $msg'executionFee;
    $global_emit($LPPositionOrderCreatedEvent$_store_cell($LPPositionOrderCreatedEvent$_constructor_opType_account_liquidityDelta_executionFee_orderId_trxId(2, __tact_context_get_sender(), $msg'liquidityDelta, $msg'executionFee, $orderId, $msg'trxId)));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundExceedTon(1, __tact_context_get_sender(), $msg'executionFee, 1, false);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_CancelLPPositionOrder((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, int, slice) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'orderId, $msg'trxId, $msg'executionFeeReceiver) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    tuple $orderOpt = $LPPositionOrder$_load_opt(__tact_dict_get_int_cell($self'lpPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $LPPositionOrder$_not_null($orderOpt);
    if ($order'isIncrease) {
        throw_unless(19305, ($ctx'value >= ($self'lpGasConsumption + $self'gasTransferJetton)));
    } else {
        throw_unless(19305, ($ctx'value >= $self'lpGasConsumption));
    }
    throw_unless(24173, (~ $order'isPending));
    int $isExecutor = ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_isExecutor(__tact_context_get_sender());
    throw_unless(41207, ( ($isExecutor) ? (true) : (( __tact_slice_eq_bits($order'account, __tact_context_get_sender()) )) ));
    if ((~ $isExecutor)) {
        throw_unless(39703, (($order'blockTime + $self'minTimeDelayTrader) <= now()));
    }
    slice $executionFeeReceiver = __tact_context_get_sender();
    if ((~ null?($msg'executionFeeReceiver))) {
        $executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
    }
    $self'lpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $LPPositionOrder$_store_opt(null()));
    if ($order'isIncrease) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundJetton($msg'trxId, $order'liquidityDelta, $order'account, __tact_context_get_sender());
    }
    if (($order'executionFee > 0)) {
        $global_send($SendParameters$_constructor_to_bounce_value_mode($executionFeeReceiver, true, $order'executionFee, 2));
        $self'totalExecutionFee = $self'totalExecutionFee - $order'executionFee;
    }
    $global_emit($LPPositionOrderCancelledEvent$_store_cell($LPPositionOrderCancelledEvent$_constructor_opType_orderId_trxId(($order'isIncrease ? 1 : 2), $msg'orderId, $msg'trxId)));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundExceedTon(1, __tact_context_get_sender(), (- $order'executionFee), 1, $order'isIncrease);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_ExecuteLPPositionOrder((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, int, slice) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'orderId, $msg'trxId, $msg'executionFeeReceiver) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    tuple $orderOpt = $LPPositionOrder$_load_opt(__tact_dict_get_int_cell($self'lpPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $LPPositionOrder$_not_null($orderOpt);
    if ($order'isIncrease) {
        throw_unless(19305, ($ctx'value >= (($self'lpGasConsumption * 2) + ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_getPoolGas(1))));
    } else {
        throw_unless(19305, ($ctx'value >= ((($self'lpGasConsumption * 2) + ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_getPoolGas(1)) + $self'gasTransferJetton)));
    }
    throw_unless(24173, (~ $order'isPending));
    int $isExecutor = ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_isExecutor(__tact_context_get_sender());
    throw_unless(41207, $isExecutor);
    throw_unless(16780, (($order'blockTime + $self'maxTimeDelayExecutor) > now()));
    if ((~ null?($msg'executionFeeReceiver))) {
        $order'executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
    } else {
        $order'executionFeeReceiver = __tact_context_get_sender();
    }
    $order'lastOperator = __tact_context_get_sender();
    $order'isPending = true;
    $self'lpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $LPPositionOrder$_store_cell(($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator)));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'pool, 0, 64, true, $UpdateLPPosition$_store_cell($UpdateLPPosition$_constructor_isIncrease_orderId_trxId_account_liquidityDelta($order'isIncrease, $msg'orderId, $msg'trxId, $order'account, $order'liquidityDelta))));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_UpdateLPPositionSuccess((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'orderId, $msg'receive, $msg'trxId) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(41207, ( __tact_slice_eq_bits($self'pool, __tact_context_get_sender()) ));
    tuple $orderOpt = $LPPositionOrder$_load_opt(__tact_dict_get_int_cell($self'lpPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $LPPositionOrder$_not_null($orderOpt);
    if ($order'isIncrease) {
        throw_unless(19305, ($ctx'value >= $self'lpGasConsumption));
    } else {
        throw_unless(19305, ($ctx'value >= ($self'lpGasConsumption + $self'gasTransferJetton)));
    }
    $self'lpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $LPPositionOrder$_store_opt(null()));
    if (($msg'receive > 0)) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundJetton($msg'trxId, $msg'receive, $order'account, $order'lastOperator);
    }
    if (($order'executionFee > 0)) {
        $global_send($SendParameters$_constructor_to_bounce_value_mode($order'executionFeeReceiver, true, $order'executionFee, 2));
        $self'totalExecutionFee = $self'totalExecutionFee - $order'executionFee;
    }
    $global_emit($LPPositionOrderExecutedEvent$_store_cell($LPPositionOrderExecutedEvent$_constructor_opType_orderId_trxId(($order'isIncrease ? 1 : 2), $msg'orderId, $msg'trxId)));
    if ((~ null?($order'lastOperator))) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundExceedTon(1, __tact_not_null($order'lastOperator), (- $order'executionFee), 1, ($msg'receive > 0));
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_receive_binary_bounce_UpdateLPPosition((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, int) $src) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($src'isIncrease, $src'orderId) = $src;
    tuple $orderOpt = $LPPositionOrder$_load_opt(__tact_dict_get_int_cell($self'lpPositionOrders, 257, $src'orderId));
    if (null?($orderOpt)) {
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
    }
    var ($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $LPPositionOrder$_not_null($orderOpt);
    $order'isPending = false;
    $self'lpPositionOrders~__tact_dict_set_int_cell(257, $src'orderId, $LPPositionOrder$_store_cell(($order'isIncrease, $order'account, $order'liquidityDelta, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator)));
    if ((~ null?($order'lastOperator))) {
        $global_send($SendParameters$_constructor_to_value_mode(__tact_not_null($order'lastOperator), 0, (2 + 64)));
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_CreateDecreasePerpPositionOrder((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, int, int, int, int, int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'executionFee, $msg'tokenId, $msg'isLong, $msg'marginDelta, $msg'sizeDelta, $msg'triggerPrice, $msg'trxId) = $msg;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_requireNotStopped();
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, (($ctx'value - $msg'executionFee) >= $self'perpGasConsumption));
    throw_unless(24562, ($msg'executionFee >= $self'perpMinExecutionFee));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_createPerpOrder($msg'trxId, 12, __tact_context_get_sender(), $msg'tokenId, $msg'isLong, $msg'marginDelta, $msg'sizeDelta, $msg'triggerPrice, 0, 0, 0, 0, $msg'executionFee);
    $self'totalExecutionFee = $self'totalExecutionFee + $msg'executionFee;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundExceedTon(2, __tact_context_get_sender(), $msg'executionFee, 1, false);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_CreateTpSlPerpPositionOrder((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, int, int, int, int, int, int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'executionFee, $msg'tokenId, $msg'isLong, $msg'tpSize, $msg'tpPrice, $msg'slSize, $msg'slPrice, $msg'trxId) = $msg;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_requireNotStopped();
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    int $executionFeeMultiple = 0;
    if (( (($msg'tpSize > 0)) ? (($msg'tpPrice > 0)) : (false) )) {
        $executionFeeMultiple = $executionFeeMultiple + 1;
    }
    if (( (($msg'slSize > 0)) ? (($msg'slPrice > 0)) : (false) )) {
        $executionFeeMultiple = $executionFeeMultiple + 1;
    }
    throw_unless(19305, (($ctx'value - $msg'executionFee) >= ($self'perpGasConsumption * $executionFeeMultiple)));
    throw_unless(24562, ($msg'executionFee >= ($self'perpMinExecutionFee * $executionFeeMultiple)));
    if (( (($msg'tpSize > 0)) ? (($msg'tpPrice > 0)) : (false) )) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_createPerpOrder($msg'trxId, 13, __tact_context_get_sender(), $msg'tokenId, $msg'isLong, 0, $msg'tpSize, $msg'tpPrice, 0, 0, 0, 0, ($msg'executionFee / $executionFeeMultiple));
    }
    if (( (($msg'slSize > 0)) ? (($msg'slPrice > 0)) : (false) )) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_createPerpOrder($msg'trxId, 14, __tact_context_get_sender(), $msg'tokenId, $msg'isLong, 0, $msg'slSize, $msg'slPrice, 0, 0, 0, 0, ($msg'executionFee / $executionFeeMultiple));
    }
    $self'totalExecutionFee = $self'totalExecutionFee + $msg'executionFee;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundExceedTon(2, __tact_context_get_sender(), $msg'executionFee, $executionFeeMultiple, false);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_CancelPerpPositionOrder((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (slice, int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'executionFeeReceiver, $msg'orderId, $msg'trxId) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    tuple $orderOpt = $PerpPositionOrder$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'opType, $order'tokenId, $order'account, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $PerpPositionOrder$_not_null($orderOpt);
    if (( (($order'opType == 10)) ? (true) : (($order'opType == 11)) )) {
        throw_unless(19305, ($ctx'value >= ($self'perpGasConsumption + $self'gasTransferJetton)));
    } else {
        throw_unless(19305, ($ctx'value >= $self'perpGasConsumption));
    }
    throw_unless(24173, (~ $order'isPending));
    int $isExecutor = ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_isExecutor(__tact_context_get_sender());
    throw_unless(41207, ( ($isExecutor) ? (true) : (( __tact_slice_eq_bits($order'account, __tact_context_get_sender()) )) ));
    if (( ((~ $isExecutor)) ? (( (($order'opType == 10)) ? (true) : (($order'opType == 12)) )) : (false) )) {
        throw_unless(39703, (($order'blockTime + $self'minTimeDelayTrader) <= now()));
    }
    slice $executionFeeReceiver = __tact_context_get_sender();
    if ((~ null?($msg'executionFeeReceiver))) {
        $executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
    }
    int $executionFee = 0;
    if (( (($order'opType == 10)) ? (true) : (($order'opType == 11)) )) {
        tuple $orderExOpt = $PerpPositionOrderEx$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrderExs, 257, $msg'orderId));
        if ((~ null?($orderExOpt))) {
            var ($orderEx'tpSize, $orderEx'tpPrice, $orderEx'slSize, $orderEx'slPrice, $orderEx'executionFee) = $PerpPositionOrderEx$_not_null($orderExOpt);
            int $tpSlExecutionFee = 0;
            if (( (($orderEx'tpSize > 0)) ? (($orderEx'tpPrice > 0)) : (false) )) {
                $tpSlExecutionFee = $tpSlExecutionFee + $orderEx'executionFee;
            }
            if (( (($orderEx'slSize > 0)) ? (($orderEx'slPrice > 0)) : (false) )) {
                $tpSlExecutionFee = $tpSlExecutionFee + $orderEx'executionFee;
            }
            if (($tpSlExecutionFee > 0)) {
                $global_send($SendParameters$_constructor_to_bounce_value_mode($order'account, true, $tpSlExecutionFee, 2));
                $executionFee = $executionFee + $tpSlExecutionFee;
            }
            $self'perpPositionOrderExs~__tact_dict_set_int_cell(257, $msg'orderId, $PerpPositionOrderEx$_store_opt(null()));
        }
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundJetton($msg'trxId, $order'marginDelta, $order'account, __tact_context_get_sender());
    }
    $self'perpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $PerpPositionOrder$_store_opt(null()));
    if (($order'executionFee > 0)) {
        $global_send($SendParameters$_constructor_to_bounce_value_mode($executionFeeReceiver, true, $order'executionFee, 2));
        $executionFee = $executionFee + $order'executionFee;
    }
    $self'totalExecutionFee = $self'totalExecutionFee - $executionFee;
    $global_emit($PerpPositionOrderCancelledEvent$_store_cell($PerpPositionOrderCancelledEvent$_constructor_opType_orderId_trxId($order'opType, $msg'orderId, $msg'trxId)));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundExceedTon(2, __tact_context_get_sender(), (- $executionFee), 1, ( (($order'opType == 10)) ? (true) : (($order'opType == 11)) ));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_ExecutePerpPositionOrder((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (slice, int, int, int, int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'executionFeeReceiver, $msg'orderId, $msg'trxId, $msg'tokenId, $msg'price, $msg'premiumRate) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    tuple $orderOpt = $PerpPositionOrder$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrders, 257, $msg'orderId));
    throw_unless(32637, (~ null?($orderOpt)));
    var ($order'opType, $order'tokenId, $order'account, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $PerpPositionOrder$_not_null($orderOpt);
    if (( (($order'opType == 10)) ? (true) : (($order'opType == 11)) )) {
        throw_unless(19305, ($ctx'value >= (($self'perpGasConsumption * 2) + ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_getPoolGas(2))));
    } else {
        throw_unless(19305, ($ctx'value >= ((($self'perpGasConsumption * 2) + ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_getPoolGas(2)) + $self'gasTransferJetton)));
    }
    throw_unless(24173, (~ $order'isPending));
    throw_unless(51911, ($msg'tokenId == $order'tokenId));
    int $isExecutor = ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_isExecutor(__tact_context_get_sender());
    throw_unless(41207, $isExecutor);
    if (( (($order'opType == 10)) ? (true) : (($order'opType == 12)) )) {
        throw_unless(16780, (($order'blockTime + $self'maxTimeDelayExecutor) > now()));
    }
    if ((~ null?($msg'executionFeeReceiver))) {
        $order'executionFeeReceiver = __tact_not_null($msg'executionFeeReceiver);
    } else {
        $order'executionFeeReceiver = __tact_context_get_sender();
    }
    $order'lastOperator = __tact_context_get_sender();
    $order'isPending = true;
    $self'perpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $PerpPositionOrder$_store_cell(($order'opType, $order'tokenId, $order'account, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator)));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'pool, 0, 64, true, $UpdatePerpPosition$_store_cell($UpdatePerpPosition$_constructor_orderId_opType_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_price_premiumRate($msg'orderId, $order'opType, $msg'trxId, $order'account, $order'tokenId, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $msg'price, $msg'premiumRate))));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_UpdatePerpPositionSuccess((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'orderId, $msg'receive, $msg'trxId) = $msg;
    __tact_nop();
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(41207, ( __tact_slice_eq_bits($self'pool, __tact_context_get_sender()) ));
    tuple $orderOpt = $PerpPositionOrder$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrders, 257, $msg'orderId));
    if (null?($orderOpt)) {
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
    }
    var ($order'opType, $order'tokenId, $order'account, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $PerpPositionOrder$_not_null($orderOpt);
    int $executionFee = 0;
    int $executionFeeMultiple = 1;
    if (( (($order'opType == 10)) ? (true) : (($order'opType == 11)) )) {
        throw_unless(19305, ($ctx'value >= $self'perpGasConsumption));
        tuple $orderExOpt = $PerpPositionOrderEx$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrderExs, 257, $msg'orderId));
        if ((~ null?($orderExOpt))) {
            var ($orderEx'tpSize, $orderEx'tpPrice, $orderEx'slSize, $orderEx'slPrice, $orderEx'executionFee) = $PerpPositionOrderEx$_not_null($orderExOpt);
            if (( (($orderEx'tpSize > 0)) ? (($orderEx'tpPrice > 0)) : (false) )) {
                $executionFeeMultiple = $executionFeeMultiple + 1;
                ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_createPerpOrder($msg'trxId, 13, __tact_context_get_sender(), $order'tokenId, $order'isLong, 0, $orderEx'tpSize, $orderEx'tpPrice, 0, 0, 0, 0, $orderEx'executionFee);
            }
            if (( (($orderEx'slSize > 0)) ? (($orderEx'slPrice > 0)) : (false) )) {
                $executionFeeMultiple = $executionFeeMultiple + 1;
                ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_createPerpOrder($msg'trxId, 14, __tact_context_get_sender(), $order'tokenId, $order'isLong, 0, $orderEx'slSize, $orderEx'slPrice, 0, 0, 0, 0, $orderEx'executionFee);
            }
        }
    } else {
        throw_unless(19305, ($ctx'value >= ($self'perpGasConsumption + $self'gasTransferJetton)));
    }
    $self'perpPositionOrders~__tact_dict_set_int_cell(257, $msg'orderId, $PerpPositionOrder$_store_opt(null()));
    if (($msg'receive > 0)) {
        if (($order'opType == 3)) {
            ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundJetton($msg'trxId, $msg'receive, $order'executionFeeReceiver, $order'lastOperator);
        } else {
            ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundJetton($msg'trxId, $msg'receive, $order'account, $order'lastOperator);
        }
    }
    $global_emit($PerpPositionOrderExecutedEvent$_store_cell($PerpPositionOrderExecutedEvent$_constructor_opType_orderId_trxId($order'opType, $msg'orderId, $msg'trxId)));
    if (($order'executionFee > 0)) {
        $global_send($SendParameters$_constructor_to_bounce_value_mode($order'executionFeeReceiver, true, $order'executionFee, 2));
        $self'totalExecutionFee = $self'totalExecutionFee - $order'executionFee;
    }
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundExceedTon(2, __tact_not_null($order'lastOperator), (- $order'executionFee), $executionFeeMultiple, ($msg'receive > 0));
    __tact_nop();
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_receive_binary_bounce_UpdatePerpPosition((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, int, int) $src) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($src'orderId, $src'opType, $src'tokenId) = $src;
    tuple $orderOpt = $PerpPositionOrder$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrders, 257, $src'orderId));
    if (null?($orderOpt)) {
        return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
    }
    var ($order'opType, $order'tokenId, $order'account, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator) = $PerpPositionOrder$_not_null($orderOpt);
    if (($order'opType == 3)) {
        $self'perpPositionOrders~__tact_dict_set_int_cell(257, $src'orderId, $PerpPositionOrder$_store_opt(null()));
    } else {
        $order'isPending = false;
        $self'perpPositionOrders~__tact_dict_set_int_cell(257, $src'orderId, $PerpPositionOrder$_store_cell(($order'opType, $order'tokenId, $order'account, $order'isLong, $order'marginDelta, $order'sizeDelta, $order'triggerPrice, $order'triggerAbove, $order'executionFee, $order'blockTime, $order'isPending, $order'executionFeeReceiver, $order'lastOperator)));
    }
    if ((~ null?($order'lastOperator))) {
        $global_send($SendParameters$_constructor_to_value_mode(__tact_not_null($order'lastOperator), 0, (2 + 64)));
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_LiquidatePerpPosition((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (slice, int, slice, int, int, int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'liquidationFeeReceiver, $msg'tokenId, $msg'account, $msg'isLong, $msg'trxId, $msg'price, $msg'premiumRate) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, ($ctx'value >= ((($self'perpGasConsumption * 2) + ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_getPoolGas(2)) + $self'gasTransferJetton)));
    int $isExecutor = ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_isExecutor(__tact_context_get_sender());
    throw_unless(41207, $isExecutor);
    slice $liquidationFeeReceiver = __tact_context_get_sender();
    if ((~ null?($msg'liquidationFeeReceiver))) {
        $liquidationFeeReceiver = __tact_not_null($msg'liquidationFeeReceiver);
    }
    int $orderId = $self'perpPositionOrderIndexNext;
    $self'perpPositionOrderIndexNext = ($self'perpPositionOrderIndexNext + 1);
    $self'perpPositionOrders~__tact_dict_set_int_cell(257, $orderId, $PerpPositionOrder$_store_cell($PerpPositionOrder$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator(3, $msg'tokenId, $msg'account, $msg'isLong, 0, 0, 0, false, 0, now(), true, $liquidationFeeReceiver, __tact_context_get_sender())));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'pool, 0, 64, true, $UpdatePerpPosition$_store_cell($UpdatePerpPosition$_constructor_opType_orderId_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_price_premiumRate(3, $orderId, $msg'trxId, $msg'account, $msg'tokenId, $msg'isLong, 0, 0, 0, false, $msg'price, $msg'premiumRate))));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_ADLPerpPosition((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, slice, int, int, int, int, int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'tokenId, $msg'account, $msg'isLong, $msg'marginDelta, $msg'sizeDelta, $msg'trxId, $msg'price, $msg'premiumRate) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, ($ctx'value >= ((($self'perpGasConsumption * 2) + ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_getPoolGas(2)) + $self'gasTransferJetton)));
    int $isExecutor = ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_isExecutor(__tact_context_get_sender());
    throw_unless(41207, $isExecutor);
    int $orderId = $self'perpPositionOrderIndexNext;
    $self'perpPositionOrderIndexNext = ($self'perpPositionOrderIndexNext + 1);
    $self'perpPositionOrders~__tact_dict_set_int_cell(257, $orderId, $PerpPositionOrder$_store_cell($PerpPositionOrder$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator(4, $msg'tokenId, $msg'account, $msg'isLong, $msg'marginDelta, $msg'sizeDelta, 0, false, 0, now(), true, __tact_context_get_sender(), __tact_context_get_sender())));
    $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'pool, 0, 64, true, $UpdatePerpPosition$_store_cell($UpdatePerpPosition$_constructor_opType_orderId_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_price_premiumRate(4, $orderId, $msg'trxId, $msg'account, $msg'tokenId, $msg'isLong, 0, $msg'sizeDelta, 0, false, $msg'price, $msg'premiumRate))));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_SendProtocolFee((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, slice, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'trxId, $msg'feeReceiver, $msg'amount) = $msg;
    throw_unless(41207, ( __tact_slice_eq_bits($self'pool, __tact_context_get_sender()) ));
    if (($msg'amount > 0)) {
        $global_send($SendParameters$_constructor_to_value_mode_bounce_body($self'usdtWallet, $self'gasTransferJetton, (64 + 2), false, $TokenTransfer$_store_cell($TokenTransfer$_constructor_queryId_amount_receiver_responseDestination_customPayload_forwardTonAmount_forwardPayload($msg'trxId, $msg'amount, $msg'feeReceiver, $msg'feeReceiver, null(), 0, $Cell$_fun_asSlice(end_cell(begin_cell()))))));
    }
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_CreateCompensate((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, int, int, slice, int, slice, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'orderType, $msg'orderId, $msg'trxId, $msg'refundReceiver, $msg'refundAmount, $msg'executionFeeReceiver, $msg'executionFee) = $msg;
    int $isExecutor = ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_isExecutor(__tact_context_get_sender());
    throw_unless(41207, $isExecutor);
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, ($ctx'value >= $self'perpGasConsumption));
    int $compensateId = $self'compensateIndexNext;
    $self'compensateIndexNext = $self'compensateIndexNext + 1;
    $self'compensates~__tact_dict_set_int_cell(257, $compensateId, $Compensate$_store_cell($Compensate$_constructor_orderType_orderId_trxId_refundReceiver_refundAmount_executionFeeReceiver_executionFee_unlockTime($msg'orderType, $msg'orderId, $msg'trxId, $msg'refundReceiver, $msg'refundAmount, $msg'executionFeeReceiver, $msg'executionFee, (now() + 86400))));
    $global_emit($CompensateCreatedEvent$_store_cell($CompensateCreatedEvent$_constructor_compensateId_orderType_orderId_trxId_refundReceiver_refundAmount_executionFeeReceiver_executionFee_unlockTime($compensateId, $msg'orderType, $msg'orderId, $msg'trxId, $msg'refundReceiver, $msg'refundAmount, $msg'executionFeeReceiver, $msg'executionFee, (now() + 86400))));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundExceedTon(2, __tact_context_get_sender(), 0, 1, false);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_CancelCompensate((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'compensateId, $msg'trxId) = $msg;
    int $isExecutor = ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_isExecutor(__tact_context_get_sender());
    throw_unless(41207, $isExecutor);
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(11120, (~ null?($Compensate$_load_opt(__tact_dict_get_int_cell($self'compensates, 257, $msg'compensateId)))));
    throw_unless(19305, ($ctx'value >= ($self'perpGasConsumption + $self'gasTransferJetton)));
    $self'compensates~__tact_dict_set_int_cell(257, $msg'compensateId, $Compensate$_store_opt(null()));
    $global_emit($CompensateCancelledEvent$_store_cell($CompensateCancelledEvent$_constructor_compensateId_trxId($msg'compensateId, $msg'trxId)));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundExceedTon(2, __tact_context_get_sender(), 0, 1, false);
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_ExecuteCompensate((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int, int) $msg) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($msg'compensateId, $msg'trxId) = $msg;
    int $isExecutor = ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_isExecutor(__tact_context_get_sender());
    throw_unless(41207, $isExecutor);
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(19305, ($ctx'value >= $self'perpGasConsumption));
    tuple $compensateOpt = $Compensate$_load_opt(__tact_dict_get_int_cell($self'compensates, 257, $msg'compensateId));
    throw_unless(11120, (~ null?($compensateOpt)));
    var ($compensate'orderType, $compensate'orderId, $compensate'trxId, $compensate'refundReceiver, $compensate'refundAmount, $compensate'executionFeeReceiver, $compensate'executionFee, $compensate'unlockTime) = $Compensate$_not_null($compensateOpt);
    throw_unless(31425, (now() >= $compensate'unlockTime));
    if ((~ null?($compensate'orderType))) {
        int $isPending = true;
        if (__tact_int_eq_nullable_one($compensate'orderType, 1)) {
            tuple $orderOpt = $LPPositionOrder$_load_opt(__tact_dict_get_int_cell($self'lpPositionOrders, 257, $compensate'orderId));
            if ((~ null?($orderOpt))) {
                $isPending = $LPPositionOrder$_get_isPending($LPPositionOrder$_not_null($orderOpt));
            }
            $self'lpPositionOrders~__tact_dict_set_int_cell(257, $compensate'orderId, $LPPositionOrder$_store_opt(null()));
        } else {
            tuple $orderOpt = $PerpPositionOrder$_load_opt(__tact_dict_get_int_cell($self'perpPositionOrders, 257, $compensate'orderId));
            if ((~ null?($orderOpt))) {
                $isPending = $PerpPositionOrder$_get_isPending($PerpPositionOrder$_not_null($orderOpt));
            }
            $self'perpPositionOrders~__tact_dict_set_int_cell(257, $compensate'orderId, $PerpPositionOrder$_store_opt(null()));
        }
        throw_unless(42241, $isPending);
    }
    if (( ((~ null?($compensate'refundReceiver))) ? (($compensate'refundAmount > 0)) : (false) )) {
        ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundJetton($compensate'trxId, $compensate'refundAmount, __tact_not_null($compensate'refundReceiver), __tact_context_get_sender());
    }
    if (( ((~ null?($compensate'executionFeeReceiver))) ? (($compensate'executionFee > 0)) : (false) )) {
        $global_send($SendParameters$_constructor_to_bounce_value_mode(__tact_not_null($compensate'executionFeeReceiver), true, $compensate'executionFee, 2));
    }
    $global_emit($CompensateExecutedEvent$_store_cell($CompensateExecutedEvent$_constructor_compensateId_trxId($msg'compensateId, $compensate'trxId)));
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_refundExceedTon(2, __tact_context_get_sender(), 0, 1, ( ((~ null?($compensate'refundReceiver))) ? (($compensate'refundAmount > 0)) : (false) ));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

(((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int)), ()) $OrderBook$_internal_binary_Deploy((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, (int) $deploy) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_internal_text_6c8f44f45fedb4cdfed4de8db14aa5b13ad55d430f759d0669210b74c48fe3df((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_requireOwner();
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_requireStopped();
    $self'stopped = false;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_reply(__gen_cell_comment_514f593ead485926515219a03034c6b162f1c29390f83f2f1bd70b8b77731ec3());
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_internal_text_bcfaf776907c719cc8d379d8f194aaaa27e8ca2871cd591781721f215a454501((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline {
    var ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext) = $self;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_requireOwner();
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_requireNotStopped();
    $self'stopped = true;
    ($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext)~$OrderBook$_fun_reply(__gen_cell_comment_8f4b6a166554b4f282855d0333c627d5b58d281ea4ba11e4def91a1053193b2d());
    return (($self'maxTimeDelayExecutor, $self'minTimeDelayTrader, $self'lpGasConsumption, $self'perpGasConsumption, $self'poolLpGasConsumption, $self'poolPerpGasConsumption, $self'minTonsForStorage, $self'gasTransferJetton, $self'lpMinExecutionFee, $self'perpMinExecutionFee, $self'totalExecutionFee, $self'usdtWallet, $self'pool, $self'owner, $self'stopped, $self'executors, $self'lpPositionOrders, $self'lpPositionOrderIndexNext, $self'perpPositionOrders, $self'perpPositionOrderExs, $self'perpPositionOrderIndexNext, $self'compensates, $self'compensateIndexNext), ());
}

;;
;; Get methods of a Contract OrderBook
;;

_ %configData(slice $$executor) method_id(82657) {
    slice $executor = null?($$executor) ? null() : __tact_verify_address($$executor);
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_configData($executor);
    return $ConfigData$_to_external(res);
}

_ %lpPositionOrder(int $$orderId) method_id(67995) {
    int $orderId = $$orderId;
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_lpPositionOrder($orderId);
    return $LPPositionOrder$_to_opt_external(res);
}

_ %lpPositionOrderIndexNext() method_id(75834) {
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_lpPositionOrderIndexNext();
    return res;
}

_ %perpPositionOrder(int $$orderId) method_id(69362) {
    int $orderId = $$orderId;
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_perpPositionOrder($orderId);
    return $PerpPositionOrder$_to_opt_external(res);
}

_ %perpPositionOrderIndexNext() method_id(85280) {
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_perpPositionOrderIndexNext();
    return res;
}

_ %stopped() method_id(74107) {
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_stopped();
    return res;
}

_ %owner() method_id(83229) {
    var self = $OrderBook$_contract_load();
    var res = self~$OrderBook$_fun_owner();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128,
        "org.ton.resumable"H >> 128,
        "org.ton.stoppable"H >> 128,
        "org.ton.ownable"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmQMMs1dNpBRPBFPn9quyXNqujAJzpCx22cCw6ABKeU7V7";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract OrderBook
;;

((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_contract_router_internal((int, int, int, int, int, int, int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        
        ;; Skip 0xFFFFFFFF
        in_msg~skip_bits(32);
        
        ;; Parse op
        int op = 0;
        if (slice_bits(in_msg) >= 32) {
            op = in_msg.preload_uint(32);
        }
        
        ;; Bounced handler for UpdateLPPosition message
        if (op == 3902592095) {
            var msg = in_msg~$UpdateLPPosition$_load_bounced();
            self~$OrderBook$_receive_binary_bounce_UpdateLPPosition(msg);
            return (self, true);
        }
        
        ;; Bounced handler for UpdatePerpPosition message
        if (op == 4283950423) {
            var msg = in_msg~$UpdatePerpPosition$_load_bounced();
            self~$OrderBook$_receive_binary_bounce_UpdatePerpPosition(msg);
            return (self, true);
        }
        
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive UpdateConfig message
    if (op == 2462921570) {
        var msg = in_msg~$UpdateConfig$_load();
        self~$OrderBook$_internal_binary_UpdateConfig(msg);
        return (self, true);
    }
    
    ;; Receive TokenNotification message
    if (op == 1935855772) {
        var msg = in_msg~$TokenNotification$_load();
        self~$OrderBook$_internal_binary_TokenNotification(msg);
        return (self, true);
    }
    
    ;; Receive CreateDecreaseLPPositionOrder message
    if (op == 632428324) {
        var msg = in_msg~$CreateDecreaseLPPositionOrder$_load();
        self~$OrderBook$_internal_binary_CreateDecreaseLPPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive CancelLPPositionOrder message
    if (op == 2106714934) {
        var msg = in_msg~$CancelLPPositionOrder$_load();
        self~$OrderBook$_internal_binary_CancelLPPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive ExecuteLPPositionOrder message
    if (op == 310819211) {
        var msg = in_msg~$ExecuteLPPositionOrder$_load();
        self~$OrderBook$_internal_binary_ExecuteLPPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive UpdateLPPositionSuccess message
    if (op == 485543809) {
        var msg = in_msg~$UpdateLPPositionSuccess$_load();
        self~$OrderBook$_internal_binary_UpdateLPPositionSuccess(msg);
        return (self, true);
    }
    
    ;; Receive CreateDecreasePerpPositionOrder message
    if (op == 1787968987) {
        var msg = in_msg~$CreateDecreasePerpPositionOrder$_load();
        self~$OrderBook$_internal_binary_CreateDecreasePerpPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive CreateTpSlPerpPositionOrder message
    if (op == 600256344) {
        var msg = in_msg~$CreateTpSlPerpPositionOrder$_load();
        self~$OrderBook$_internal_binary_CreateTpSlPerpPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive CancelPerpPositionOrder message
    if (op == 3254342642) {
        var msg = in_msg~$CancelPerpPositionOrder$_load();
        self~$OrderBook$_internal_binary_CancelPerpPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive ExecutePerpPositionOrder message
    if (op == 2650410712) {
        var msg = in_msg~$ExecutePerpPositionOrder$_load();
        self~$OrderBook$_internal_binary_ExecutePerpPositionOrder(msg);
        return (self, true);
    }
    
    ;; Receive UpdatePerpPositionSuccess message
    if (op == 4009870004) {
        var msg = in_msg~$UpdatePerpPositionSuccess$_load();
        self~$OrderBook$_internal_binary_UpdatePerpPositionSuccess(msg);
        return (self, true);
    }
    
    ;; Receive LiquidatePerpPosition message
    if (op == 590625716) {
        var msg = in_msg~$LiquidatePerpPosition$_load();
        self~$OrderBook$_internal_binary_LiquidatePerpPosition(msg);
        return (self, true);
    }
    
    ;; Receive ADLPerpPosition message
    if (op == 3962817618) {
        var msg = in_msg~$ADLPerpPosition$_load();
        self~$OrderBook$_internal_binary_ADLPerpPosition(msg);
        return (self, true);
    }
    
    ;; Receive SendProtocolFee message
    if (op == 1574274145) {
        var msg = in_msg~$SendProtocolFee$_load();
        self~$OrderBook$_internal_binary_SendProtocolFee(msg);
        return (self, true);
    }
    
    ;; Receive CreateCompensate message
    if (op == 2945693128) {
        var msg = in_msg~$CreateCompensate$_load();
        self~$OrderBook$_internal_binary_CreateCompensate(msg);
        return (self, true);
    }
    
    ;; Receive CancelCompensate message
    if (op == 1491007674) {
        var msg = in_msg~$CancelCompensate$_load();
        self~$OrderBook$_internal_binary_CancelCompensate(msg);
        return (self, true);
    }
    
    ;; Receive ExecuteCompensate message
    if (op == 3424428784) {
        var msg = in_msg~$ExecuteCompensate$_load();
        self~$OrderBook$_internal_binary_ExecuteCompensate(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$OrderBook$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "Resume" message
        if (text_op == 0x6c8f44f45fedb4cdfed4de8db14aa5b13ad55d430f759d0669210b74c48fe3df) {
            self~$OrderBook$_internal_text_6c8f44f45fedb4cdfed4de8db14aa5b13ad55d430f759d0669210b74c48fe3df();
            return (self, true);
        }
        
        ;; Receive "Stop" message
        if (text_op == 0xbcfaf776907c719cc8d379d8f194aaaa27e8ca2871cd591781721f215a454501) {
            self~$OrderBook$_internal_text_bcfaf776907c719cc8d379d8f194aaaa27e8ca2871cd591781721f215a454501();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $OrderBook$_contract_load();
    
    ;; Handle operation
    int handled = self~$OrderBook$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $OrderBook$_contract_store(self);
}
