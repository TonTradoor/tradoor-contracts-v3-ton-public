;;
;; Type: StateInit
;; TLB: _ code:^cell data:^cell = StateInit
;;

((cell, cell)) $StateInit$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (cell vvv'code, cell vvv'data) = __tact_tuple_destroy_2(v);
    return (vvv'code, vvv'data);
}

;;
;; Type: Context
;; TLB: _ bounced:bool sender:address value:int257 raw:^slice = Context
;;

_ $Context$_get_value((int, slice, int, slice) v) inline {
    var (v'bounced, v'sender, v'value, v'raw) = v;
    return v'value;
}

;;
;; Type: SendParameters
;; TLB: _ bounce:bool to:address value:int257 mode:int257 body:Maybe ^cell code:Maybe ^cell data:Maybe ^cell = SendParameters
;;

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline {
    return (bounce, to, value, mode, body, null(), null());
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value_mode(slice to, int bounce, int value, int mode) inline {
    return (bounce, to, value, mode, null(), null(), null());
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

;;
;; Type: Deploy
;; Header: 0x946a98b6
;; TLB: deploy#946a98b6 queryId:uint64 = Deploy
;;

(slice, ((int))) $Deploy$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

;;
;; Type: DeployOk
;; Header: 0xaff90f57
;; TLB: deploy_ok#aff90f57 queryId:uint64 = DeployOk
;;

builder $DeployOk$_store(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell $DeployOk$_store_cell((int) v) inline {
    return $DeployOk$_store(begin_cell(), v).end_cell();
}

((int)) $DeployOk$_constructor_queryId(int queryId) inline {
    return (queryId);
}

;;
;; Type: TokenNotification
;; Header: 0x7362d09c
;; TLB: token_notification#7362d09c queryId:uint64 amount:coins from:address forwardPayload:remainder<slice> = TokenNotification
;;

(slice, ((int, int, slice, slice))) $TokenNotification$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1935855772);
    var v'queryId = sc_0~load_uint(64);
    var v'amount = sc_0~load_coins();
    var v'from = sc_0~__tact_load_address();
    var v'forwardPayload = sc_0;
    return (sc_0, (v'queryId, v'amount, v'from, v'forwardPayload));
}

;;
;; Type: TokenExcesses
;; Header: 0xd53276db
;; TLB: token_excesses#d53276db queryId:uint64 = TokenExcesses
;;

(slice, ((int))) $TokenExcesses$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3576854235);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

;;
;; Type: UpdateConfig
;; Header: 0x6de0047e
;; TLB: update_config#6de0047e executor:Maybe address enableExecutor:Maybe bool maxTimeDelayExecutor:int257 minTimeDelayTrader:int257 minExecutionFee:int257 gasConsumption:int257 minTonsForStorage:int257 usdtWallet:address pool:address = UpdateConfig
;;

(slice, ((slice, int, int, int, int, int, int, slice, slice))) $UpdateConfig$_load(slice sc_0) inline_ref {
    throw_unless(129, sc_0~load_uint(32) == 1843397758);
    var v'executor = sc_0~__tact_load_address_opt();
    var v'enableExecutor = sc_0~load_int(1) ? sc_0~load_int(1) : null();
    var v'maxTimeDelayExecutor = sc_0~load_int(257);
    var v'minTimeDelayTrader = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'minExecutionFee = sc_1~load_int(257);
    var v'gasConsumption = sc_1~load_int(257);
    var v'minTonsForStorage = sc_1~load_int(257);
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'usdtWallet = sc_2~__tact_load_address();
    var v'pool = sc_2~__tact_load_address();
    return (sc_0, (v'executor, v'enableExecutor, v'maxTimeDelayExecutor, v'minTimeDelayTrader, v'minExecutionFee, v'gasConsumption, v'minTonsForStorage, v'usdtWallet, v'pool));
}

;;
;; Type: CreateDecreaseRBFPositionOrder
;; Header: 0xa11162ed
;; TLB: create_decrease_rbf_position_order#a11162ed executionFee:int257 liquidityDelta:int257 = CreateDecreaseRBFPositionOrder
;;

(slice, ((int, int))) $CreateDecreaseRBFPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2702271213);
    var v'executionFee = sc_0~load_int(257);
    var v'liquidityDelta = sc_0~load_int(257);
    return (sc_0, (v'executionFee, v'liquidityDelta));
}

;;
;; Type: CancelRBFPositionOrder
;; Header: 0xbc6f0603
;; TLB: cancel_rbf_position_order#bc6f0603 orderId:int257 trxId:int257 executionFeeReceiver:Maybe address = CancelRBFPositionOrder
;;

(slice, ((int, int, slice))) $CancelRBFPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3161392643);
    var v'orderId = sc_0~load_int(257);
    var v'trxId = sc_0~load_int(257);
    var v'executionFeeReceiver = sc_0~__tact_load_address_opt();
    return (sc_0, (v'orderId, v'trxId, v'executionFeeReceiver));
}

;;
;; Type: ExecuteRBFPositionOrder
;; Header: 0x25ec63c1
;; TLB: execute_rbf_position_order#25ec63c1 orderId:int257 trxId:int257 executionFeeReceiver:Maybe address pricesLength:int257 prices:dict<int, ^UpdatePrice{tokenId:int257,price:int257}> = ExecuteRBFPositionOrder
;;

(slice, ((int, int, slice, int, cell))) $ExecuteRBFPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 636249025);
    var v'orderId = sc_0~load_int(257);
    var v'trxId = sc_0~load_int(257);
    var v'executionFeeReceiver = sc_0~__tact_load_address_opt();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'pricesLength = sc_1~load_int(257);
    var v'prices = sc_1~load_dict();
    return (sc_0, (v'orderId, v'trxId, v'executionFeeReceiver, v'pricesLength, v'prices));
}

;;
;; Type: UpdateRBFPosition
;; Header: 0xe89cd45f
;; TLB: update_rbf_position#e89cd45f isIncrease:bool orderId:uint64 account:address liquidityDelta:int257 trxId:uint64 pricesLength:int257 prices:dict<int, ^UpdatePrice{tokenId:int257,price:int257}> = UpdateRBFPosition
;;

builder $UpdateRBFPosition$_store(builder build_0, (int, int, slice, int, int, int, cell) v) inline_ref {
    var (v'isIncrease, v'orderId, v'account, v'liquidityDelta, v'trxId, v'pricesLength, v'prices) = v;
    build_0 = store_uint(build_0, 3902592095, 32);
    build_0 = build_0.store_int(v'isIncrease, 1);
    build_0 = build_0.store_uint(v'orderId, 64);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'liquidityDelta, 257);
    build_0 = build_0.store_uint(v'trxId, 64);
    build_0 = build_0.store_int(v'pricesLength, 257);
    build_0 = build_0.store_dict(v'prices);
    return build_0;
}

cell $UpdateRBFPosition$_store_cell((int, int, slice, int, int, int, cell) v) inline {
    return $UpdateRBFPosition$_store(begin_cell(), v).end_cell();
}

(slice, ((int, int))) $UpdateRBFPosition$_load_bounced(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3902592095);
    var v'isIncrease = sc_0~load_int(1);
    var v'orderId = sc_0~load_uint(64);
    return (sc_0, (v'isIncrease, v'orderId));
}

((int, int, slice, int, int, int, cell)) $UpdateRBFPosition$_constructor_isIncrease_orderId_trxId_account_liquidityDelta_pricesLength_prices(int isIncrease, int orderId, int trxId, slice account, int liquidityDelta, int pricesLength, cell prices) inline {
    return (isIncrease, orderId, account, liquidityDelta, trxId, pricesLength, prices);
}

;;
;; Type: UpdateRBFPositionSuccess
;; Header: 0x1cf0cf81
;; TLB: update_rbf_position_success#1cf0cf81 orderId:int257 receive:int257 trxId:uint64 = UpdateRBFPositionSuccess
;;

(slice, ((int, int, int))) $UpdateRBFPositionSuccess$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 485543809);
    var v'orderId = sc_0~load_int(257);
    var v'receive = sc_0~load_int(257);
    var v'trxId = sc_0~load_uint(64);
    return (sc_0, (v'orderId, v'receive, v'trxId));
}

;;
;; Type: CreateDecreaseLPPositionOrder
;; Header: 0x7202bd7d
;; TLB: create_decrease_lp_position_order#7202bd7d executionFee:int257 marginDelta:int257 liquidityDelta:int257 = CreateDecreaseLPPositionOrder
;;

(slice, ((int, int, int))) $CreateDecreaseLPPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1912782205);
    var v'executionFee = sc_0~load_int(257);
    var v'marginDelta = sc_0~load_int(257);
    var v'liquidityDelta = sc_0~load_int(257);
    return (sc_0, (v'executionFee, v'marginDelta, v'liquidityDelta));
}

;;
;; Type: CancelLPPositionOrder
;; Header: 0x58157fbb
;; TLB: cancel_lp_position_order#58157fbb executionFeeReceiver:Maybe address orderId:int257 trxId:int257 = CancelLPPositionOrder
;;

(slice, ((slice, int, int))) $CancelLPPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1477803963);
    var v'executionFeeReceiver = sc_0~__tact_load_address_opt();
    var v'orderId = sc_0~load_int(257);
    var v'trxId = sc_0~load_int(257);
    return (sc_0, (v'executionFeeReceiver, v'orderId, v'trxId));
}

;;
;; Type: ExecuteLPPositionOrder
;; Header: 0xd0a15205
;; TLB: execute_lp_position_order#d0a15205 executionFeeReceiver:Maybe address orderId:int257 trxId:int257 pricesLength:int257 prices:dict<int, ^UpdatePrice{tokenId:int257,price:int257}> = ExecuteLPPositionOrder
;;

(slice, ((slice, int, int, int, cell))) $ExecuteLPPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3500233221);
    var v'executionFeeReceiver = sc_0~__tact_load_address_opt();
    var v'orderId = sc_0~load_int(257);
    var v'trxId = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'pricesLength = sc_1~load_int(257);
    var v'prices = sc_1~load_dict();
    return (sc_0, (v'executionFeeReceiver, v'orderId, v'trxId, v'pricesLength, v'prices));
}

;;
;; Type: LiquidateLPPositionOrder
;; Header: 0x63dd28a7
;; TLB: liquidate_lp_position_order#63dd28a7 executionFeeReceiver:Maybe address account:address trxId:int257 pricesLength:int257 prices:dict<int, ^UpdatePrice{tokenId:int257,price:int257}> = LiquidateLPPositionOrder
;;

(slice, ((slice, slice, int, int, cell))) $LiquidateLPPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1675438247);
    var v'executionFeeReceiver = sc_0~__tact_load_address_opt();
    var v'account = sc_0~__tact_load_address();
    var v'trxId = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'pricesLength = sc_1~load_int(257);
    var v'prices = sc_1~load_dict();
    return (sc_0, (v'executionFeeReceiver, v'account, v'trxId, v'pricesLength, v'prices));
}

;;
;; Type: UpdateLPPosition
;; Header: 0xfea36b71
;; TLB: update_lp_position#fea36b71 orderId:uint64 opType:uint8 account:address marginDelta:int257 liquidityDelta:int257 trxId:uint64 pricesLength:int257 prices:dict<int, ^UpdatePrice{tokenId:int257,price:int257}> = UpdateLPPosition
;;

builder $UpdateLPPosition$_store(builder build_0, (int, int, slice, int, int, int, int, cell) v) inline_ref {
    var (v'orderId, v'opType, v'account, v'marginDelta, v'liquidityDelta, v'trxId, v'pricesLength, v'prices) = v;
    build_0 = store_uint(build_0, 4272122737, 32);
    build_0 = build_0.store_uint(v'orderId, 64);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'marginDelta, 257);
    build_0 = build_0.store_int(v'liquidityDelta, 257);
    build_0 = build_0.store_uint(v'trxId, 64);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'pricesLength, 257);
    build_1 = build_1.store_dict(v'prices);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $UpdateLPPosition$_store_cell((int, int, slice, int, int, int, int, cell) v) inline {
    return $UpdateLPPosition$_store(begin_cell(), v).end_cell();
}

(slice, ((int, int))) $UpdateLPPosition$_load_bounced(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4272122737);
    var v'orderId = sc_0~load_uint(64);
    var v'opType = sc_0~load_uint(8);
    return (sc_0, (v'orderId, v'opType));
}

((int, int, slice, int, int, int, int, cell)) $UpdateLPPosition$_constructor_orderId_opType_trxId_account_marginDelta_liquidityDelta_pricesLength_prices(int orderId, int opType, int trxId, slice account, int marginDelta, int liquidityDelta, int pricesLength, cell prices) inline {
    return (orderId, opType, account, marginDelta, liquidityDelta, trxId, pricesLength, prices);
}

((int, int, slice, int, int, int, int, cell)) $UpdateLPPosition$_constructor_opType_orderId_trxId_account_marginDelta_liquidityDelta_pricesLength_prices(int opType, int orderId, int trxId, slice account, int marginDelta, int liquidityDelta, int pricesLength, cell prices) inline {
    return (orderId, opType, account, marginDelta, liquidityDelta, trxId, pricesLength, prices);
}

;;
;; Type: UpdateLPPositionSuccess
;; Header: 0x4989c7c1
;; TLB: update_lp_position_success#4989c7c1 orderId:int257 receive:int257 trxId:uint64 = UpdateLPPositionSuccess
;;

(slice, ((int, int, int))) $UpdateLPPositionSuccess$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1233766337);
    var v'orderId = sc_0~load_int(257);
    var v'receive = sc_0~load_int(257);
    var v'trxId = sc_0~load_uint(64);
    return (sc_0, (v'orderId, v'receive, v'trxId));
}

;;
;; Type: CreateDecreasePerpPositionOrder
;; Header: 0x0da78ef9
;; TLB: create_decrease_perp_position_order#0da78ef9 executionFee:int257 opType:int257 tokenId:int257 isLong:bool marginDelta:int257 sizeDelta:int257 triggerPrice:int257 = CreateDecreasePerpPositionOrder
;;

(slice, ((int, int, int, int, int, int, int))) $CreateDecreasePerpPositionOrder$_load(slice sc_0) inline_ref {
    throw_unless(129, sc_0~load_uint(32) == 229084921);
    var v'executionFee = sc_0~load_int(257);
    var v'opType = sc_0~load_int(257);
    var v'tokenId = sc_0~load_int(257);
    var v'isLong = sc_0~load_int(1);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'marginDelta = sc_1~load_int(257);
    var v'sizeDelta = sc_1~load_int(257);
    var v'triggerPrice = sc_1~load_int(257);
    return (sc_0, (v'executionFee, v'opType, v'tokenId, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice));
}

;;
;; Type: CancelPerpPositionOrder
;; Header: 0xf99514f3
;; TLB: cancel_perp_position_order#f99514f3 executionFeeReceiver:Maybe address orderId:int257 trxId:int257 = CancelPerpPositionOrder
;;

(slice, ((slice, int, int))) $CancelPerpPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4187297011);
    var v'executionFeeReceiver = sc_0~__tact_load_address_opt();
    var v'orderId = sc_0~load_int(257);
    var v'trxId = sc_0~load_int(257);
    return (sc_0, (v'executionFeeReceiver, v'orderId, v'trxId));
}

;;
;; Type: ExecutePerpPositionOrder
;; Header: 0xe30b9e9b
;; TLB: execute_perp_position_order#e30b9e9b executionFeeReceiver:Maybe address orderId:int257 trxId:int257 pricesLength:int257 prices:dict<int, ^UpdatePrice{tokenId:int257,price:int257}> = ExecutePerpPositionOrder
;;

(slice, ((slice, int, int, int, cell))) $ExecutePerpPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3809189531);
    var v'executionFeeReceiver = sc_0~__tact_load_address_opt();
    var v'orderId = sc_0~load_int(257);
    var v'trxId = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'pricesLength = sc_1~load_int(257);
    var v'prices = sc_1~load_dict();
    return (sc_0, (v'executionFeeReceiver, v'orderId, v'trxId, v'pricesLength, v'prices));
}

;;
;; Type: LiquidateOrADLPerpPosition
;; Header: 0x1d571000
;; TLB: liquidate_or_adl_perp_position#1d571000 executionFeeReceiver:Maybe address tokenId:int257 account:address isLong:bool trxId:int257 pricesLength:int257 prices:dict<int, ^UpdatePrice{tokenId:int257,price:int257}> = LiquidateOrADLPerpPosition
;;

(slice, ((slice, int, slice, int, int, int, cell))) $LiquidateOrADLPerpPosition$_load(slice sc_0) inline_ref {
    throw_unless(129, sc_0~load_uint(32) == 492244992);
    var v'executionFeeReceiver = sc_0~__tact_load_address_opt();
    var v'tokenId = sc_0~load_int(257);
    var v'account = sc_0~__tact_load_address();
    var v'isLong = sc_0~load_int(1);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'trxId = sc_1~load_int(257);
    var v'pricesLength = sc_1~load_int(257);
    var v'prices = sc_1~load_dict();
    return (sc_0, (v'executionFeeReceiver, v'tokenId, v'account, v'isLong, v'trxId, v'pricesLength, v'prices));
}

;;
;; Type: UpdatePerpPosition
;; Header: 0xff57e557
;; TLB: update_perp_position#ff57e557 orderId:uint64 opType:uint8 tokenId:int257 account:address isLong:bool marginDelta:int257 sizeDelta:int257 triggerPrice:int257 triggerAbove:bool trxId:uint64 pricesLength:int257 prices:dict<int, ^UpdatePrice{tokenId:int257,price:int257}> = UpdatePerpPosition
;;

builder $UpdatePerpPosition$_store(builder build_0, (int, int, int, slice, int, int, int, int, int, int, int, cell) v) inline_ref {
    var (v'orderId, v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'trxId, v'pricesLength, v'prices) = v;
    build_0 = store_uint(build_0, 4283950423, 32);
    build_0 = build_0.store_uint(v'orderId, 64);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_int(v'tokenId, 257);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'isLong, 1);
    build_0 = build_0.store_int(v'marginDelta, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'sizeDelta, 257);
    build_1 = build_1.store_int(v'triggerPrice, 257);
    build_1 = build_1.store_int(v'triggerAbove, 1);
    build_1 = build_1.store_uint(v'trxId, 64);
    build_1 = build_1.store_int(v'pricesLength, 257);
    build_1 = build_1.store_dict(v'prices);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $UpdatePerpPosition$_store_cell((int, int, int, slice, int, int, int, int, int, int, int, cell) v) inline {
    return $UpdatePerpPosition$_store(begin_cell(), v).end_cell();
}

(slice, ((int, int))) $UpdatePerpPosition$_load_bounced(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4283950423);
    var v'orderId = sc_0~load_uint(64);
    var v'opType = sc_0~load_uint(8);
    return (sc_0, (v'orderId, v'opType));
}

((int, int, int, slice, int, int, int, int, int, int, int, cell)) $UpdatePerpPosition$_constructor_orderId_opType_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices(int orderId, int opType, int trxId, slice account, int tokenId, int isLong, int marginDelta, int sizeDelta, int triggerPrice, int triggerAbove, int pricesLength, cell prices) inline {
    return (orderId, opType, tokenId, account, isLong, marginDelta, sizeDelta, triggerPrice, triggerAbove, trxId, pricesLength, prices);
}

((int, int, int, slice, int, int, int, int, int, int, int, cell)) $UpdatePerpPosition$_constructor_opType_orderId_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices(int opType, int orderId, int trxId, slice account, int tokenId, int isLong, int marginDelta, int sizeDelta, int triggerPrice, int triggerAbove, int pricesLength, cell prices) inline {
    return (orderId, opType, tokenId, account, isLong, marginDelta, sizeDelta, triggerPrice, triggerAbove, trxId, pricesLength, prices);
}

;;
;; Type: UpdatePerpPositionSuccess
;; Header: 0xef01c2b4
;; TLB: update_perp_position_success#ef01c2b4 orderId:int257 receive:int257 trxId:uint64 = UpdatePerpPositionSuccess
;;

(slice, ((int, int, int))) $UpdatePerpPositionSuccess$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4009870004);
    var v'orderId = sc_0~load_int(257);
    var v'receive = sc_0~load_int(257);
    var v'trxId = sc_0~load_uint(64);
    return (sc_0, (v'orderId, v'receive, v'trxId));
}

;;
;; Type: RBFPositionOrderCreatedEvent
;; Header: 0x59e185f1
;; TLB: rbf_position_order_created_event#59e185f1 opType:uint8 account:address liquidityDelta:int257 executionFee:int257 orderId:int257 = RBFPositionOrderCreatedEvent
;;

builder $RBFPositionOrderCreatedEvent$_store(builder build_0, (int, slice, int, int, int) v) inline {
    var (v'opType, v'account, v'liquidityDelta, v'executionFee, v'orderId) = v;
    build_0 = store_uint(build_0, 1507952113, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'liquidityDelta, 257);
    build_0 = build_0.store_int(v'executionFee, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'orderId, 257);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $RBFPositionOrderCreatedEvent$_store_cell((int, slice, int, int, int) v) inline {
    return $RBFPositionOrderCreatedEvent$_store(begin_cell(), v).end_cell();
}

((int, slice, int, int, int)) $RBFPositionOrderCreatedEvent$_constructor_opType_account_liquidityDelta_executionFee_orderId(int opType, slice account, int liquidityDelta, int executionFee, int orderId) inline {
    return (opType, account, liquidityDelta, executionFee, orderId);
}

;;
;; Type: RBFPositionOrderCancelledEvent
;; Header: 0x9822e3aa
;; TLB: rbf_position_order_cancelled_event#9822e3aa opType:uint8 orderId:int257 trxId:int257 = RBFPositionOrderCancelledEvent
;;

builder $RBFPositionOrderCancelledEvent$_store(builder build_0, (int, int, int) v) inline {
    var (v'opType, v'orderId, v'trxId) = v;
    build_0 = store_uint(build_0, 2552423338, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_int(v'orderId, 257);
    build_0 = build_0.store_int(v'trxId, 257);
    return build_0;
}

cell $RBFPositionOrderCancelledEvent$_store_cell((int, int, int) v) inline {
    return $RBFPositionOrderCancelledEvent$_store(begin_cell(), v).end_cell();
}

((int, int, int)) $RBFPositionOrderCancelledEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline {
    return (opType, orderId, trxId);
}

;;
;; Type: RBFPositionOrderExecutedEvent
;; Header: 0x508154c5
;; TLB: rbf_position_order_executed_event#508154c5 opType:uint8 orderId:int257 trxId:int257 = RBFPositionOrderExecutedEvent
;;

builder $RBFPositionOrderExecutedEvent$_store(builder build_0, (int, int, int) v) inline {
    var (v'opType, v'orderId, v'trxId) = v;
    build_0 = store_uint(build_0, 1350653125, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_int(v'orderId, 257);
    build_0 = build_0.store_int(v'trxId, 257);
    return build_0;
}

cell $RBFPositionOrderExecutedEvent$_store_cell((int, int, int) v) inline {
    return $RBFPositionOrderExecutedEvent$_store(begin_cell(), v).end_cell();
}

((int, int, int)) $RBFPositionOrderExecutedEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline {
    return (opType, orderId, trxId);
}

;;
;; Type: LPPositionOrderCreatedEvent
;; Header: 0xe9304df3
;; TLB: lp_position_order_created_event#e9304df3 opType:uint8 account:address marginDelta:int257 liquidityDelta:int257 executionFee:int257 orderId:int257 = LPPositionOrderCreatedEvent
;;

builder $LPPositionOrderCreatedEvent$_store(builder build_0, (int, slice, int, int, int, int) v) inline_ref {
    var (v'opType, v'account, v'marginDelta, v'liquidityDelta, v'executionFee, v'orderId) = v;
    build_0 = store_uint(build_0, 3912257011, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'marginDelta, 257);
    build_0 = build_0.store_int(v'liquidityDelta, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'executionFee, 257);
    build_1 = build_1.store_int(v'orderId, 257);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $LPPositionOrderCreatedEvent$_store_cell((int, slice, int, int, int, int) v) inline {
    return $LPPositionOrderCreatedEvent$_store(begin_cell(), v).end_cell();
}

((int, slice, int, int, int, int)) $LPPositionOrderCreatedEvent$_constructor_opType_account_marginDelta_liquidityDelta_executionFee_orderId(int opType, slice account, int marginDelta, int liquidityDelta, int executionFee, int orderId) inline {
    return (opType, account, marginDelta, liquidityDelta, executionFee, orderId);
}

;;
;; Type: LPPositionOrderCancelledEvent
;; Header: 0x1069ead0
;; TLB: lp_position_order_cancelled_event#1069ead0 opType:uint8 orderId:int257 trxId:int257 = LPPositionOrderCancelledEvent
;;

builder $LPPositionOrderCancelledEvent$_store(builder build_0, (int, int, int) v) inline {
    var (v'opType, v'orderId, v'trxId) = v;
    build_0 = store_uint(build_0, 275376848, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_int(v'orderId, 257);
    build_0 = build_0.store_int(v'trxId, 257);
    return build_0;
}

cell $LPPositionOrderCancelledEvent$_store_cell((int, int, int) v) inline {
    return $LPPositionOrderCancelledEvent$_store(begin_cell(), v).end_cell();
}

((int, int, int)) $LPPositionOrderCancelledEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline {
    return (opType, orderId, trxId);
}

;;
;; Type: LPPositionOrderExecutedEvent
;; Header: 0xd72f36d8
;; TLB: lp_position_order_executed_event#d72f36d8 opType:uint8 orderId:int257 trxId:int257 = LPPositionOrderExecutedEvent
;;

builder $LPPositionOrderExecutedEvent$_store(builder build_0, (int, int, int) v) inline {
    var (v'opType, v'orderId, v'trxId) = v;
    build_0 = store_uint(build_0, 3610195672, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_int(v'orderId, 257);
    build_0 = build_0.store_int(v'trxId, 257);
    return build_0;
}

cell $LPPositionOrderExecutedEvent$_store_cell((int, int, int) v) inline {
    return $LPPositionOrderExecutedEvent$_store(begin_cell(), v).end_cell();
}

((int, int, int)) $LPPositionOrderExecutedEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline {
    return (opType, orderId, trxId);
}

;;
;; Type: PerpPositionOrderCreatedEvent
;; Header: 0xee2a9831
;; TLB: perp_position_order_created_event#ee2a9831 opType:uint8 tokenId:int257 account:address isLong:bool marginDelta:int257 sizeDelta:int257 triggerPrice:int257 triggerAbove:bool tpSize:int257 tpPrice:int257 slSize:int257 slPrice:int257 executionFee:int257 orderId:int257 = PerpPositionOrderCreatedEvent
;;

builder $PerpPositionOrderCreatedEvent$_store(builder build_0, (int, int, slice, int, int, int, int, int, int, int, int, int, int, int) v) inline_ref {
    var (v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'tpSize, v'tpPrice, v'slSize, v'slPrice, v'executionFee, v'orderId) = v;
    build_0 = store_uint(build_0, 3995768881, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_int(v'tokenId, 257);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'isLong, 1);
    build_0 = build_0.store_int(v'marginDelta, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'sizeDelta, 257);
    build_1 = build_1.store_int(v'triggerPrice, 257);
    build_1 = build_1.store_int(v'triggerAbove, 1);
    build_1 = build_1.store_int(v'tpSize, 257);
    var build_2 = begin_cell();
    build_2 = build_2.store_int(v'tpPrice, 257);
    build_2 = build_2.store_int(v'slSize, 257);
    build_2 = build_2.store_int(v'slPrice, 257);
    var build_3 = begin_cell();
    build_3 = build_3.store_int(v'executionFee, 257);
    build_3 = build_3.store_int(v'orderId, 257);
    build_2 = store_ref(build_2, build_3.end_cell());
    build_1 = store_ref(build_1, build_2.end_cell());
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $PerpPositionOrderCreatedEvent$_store_cell((int, int, slice, int, int, int, int, int, int, int, int, int, int, int) v) inline {
    return $PerpPositionOrderCreatedEvent$_store(begin_cell(), v).end_cell();
}

((int, int, slice, int, int, int, int, int, int, int, int, int, int, int)) $PerpPositionOrderCreatedEvent$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_executionFee_orderId_triggerPrice_triggerAbove_tpSize_tpPrice_slSize_slPrice(int opType, int tokenId, slice account, int isLong, int marginDelta, int sizeDelta, int executionFee, int orderId, int triggerPrice, int triggerAbove, int tpSize, int tpPrice, int slSize, int slPrice) inline {
    return (opType, tokenId, account, isLong, marginDelta, sizeDelta, triggerPrice, triggerAbove, tpSize, tpPrice, slSize, slPrice, executionFee, orderId);
}

;;
;; Type: PerpPositionOrderCancelledEvent
;; Header: 0x97b426ea
;; TLB: perp_position_order_cancelled_event#97b426ea opType:uint8 orderId:int257 trxId:int257 = PerpPositionOrderCancelledEvent
;;

builder $PerpPositionOrderCancelledEvent$_store(builder build_0, (int, int, int) v) inline {
    var (v'opType, v'orderId, v'trxId) = v;
    build_0 = store_uint(build_0, 2545166058, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_int(v'orderId, 257);
    build_0 = build_0.store_int(v'trxId, 257);
    return build_0;
}

cell $PerpPositionOrderCancelledEvent$_store_cell((int, int, int) v) inline {
    return $PerpPositionOrderCancelledEvent$_store(begin_cell(), v).end_cell();
}

((int, int, int)) $PerpPositionOrderCancelledEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline {
    return (opType, orderId, trxId);
}

;;
;; Type: PerpPositionOrderExecutedEvent
;; Header: 0xfecf3a7f
;; TLB: perp_position_order_executed_event#fecf3a7f opType:uint8 orderId:int257 trxId:int257 = PerpPositionOrderExecutedEvent
;;

builder $PerpPositionOrderExecutedEvent$_store(builder build_0, (int, int, int) v) inline {
    var (v'opType, v'orderId, v'trxId) = v;
    build_0 = store_uint(build_0, 4274993791, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_int(v'orderId, 257);
    build_0 = build_0.store_int(v'trxId, 257);
    return build_0;
}

cell $PerpPositionOrderExecutedEvent$_store_cell((int, int, int) v) inline {
    return $PerpPositionOrderExecutedEvent$_store(begin_cell(), v).end_cell();
}

((int, int, int)) $PerpPositionOrderExecutedEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline {
    return (opType, orderId, trxId);
}

;;
;; Type: ConfigData
;; TLB: _ isExecutor:Maybe bool maxTimeDelayExecutor:int257 minTimeDelayTrader:int257 minExecutionFee:int257 gasConsumption:int257 minTonsForStorage:int257 usdtWallet:address pool:address = ConfigData
;;

(int, int, int, int, int, int, slice, slice) $ConfigData$_to_external(((int, int, int, int, int, int, slice, slice)) v) inline {
    var (v'isExecutor, v'maxTimeDelayExecutor, v'minTimeDelayTrader, v'minExecutionFee, v'gasConsumption, v'minTonsForStorage, v'usdtWallet, v'pool) = v; 
    return (v'isExecutor, v'maxTimeDelayExecutor, v'minTimeDelayTrader, v'minExecutionFee, v'gasConsumption, v'minTonsForStorage, v'usdtWallet, v'pool);
}

((int, int, int, int, int, int, slice, slice)) $ConfigData$_constructor_isExecutor_maxTimeDelayExecutor_minTimeDelayTrader_minExecutionFee_gasConsumption_minTonsForStorage_usdtWallet_pool(int isExecutor, int maxTimeDelayExecutor, int minTimeDelayTrader, int minExecutionFee, int gasConsumption, int minTonsForStorage, slice usdtWallet, slice pool) inline {
    return (isExecutor, maxTimeDelayExecutor, minTimeDelayTrader, minExecutionFee, gasConsumption, minTonsForStorage, usdtWallet, pool);
}

;;
;; Type: JettonCallback
;; TLB: _ orderType:int257 orderId:int257 amount:int257 receiver:address trxId:int257 = JettonCallback
;;

builder $JettonCallback$_store(builder build_0, (int, int, int, slice, int) v) inline {
    var (v'orderType, v'orderId, v'amount, v'receiver, v'trxId) = v;
    build_0 = build_0.store_int(v'orderType, 257);
    build_0 = build_0.store_int(v'orderId, 257);
    build_0 = build_0.store_int(v'amount, 257);
    var build_1 = begin_cell();
    build_1 = __tact_store_address(build_1, v'receiver);
    build_1 = build_1.store_int(v'trxId, 257);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $JettonCallback$_store_cell((int, int, int, slice, int) v) inline {
    return $JettonCallback$_store(begin_cell(), v).end_cell();
}

((int, int, int, slice, int)) $JettonCallback$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'orderType, int vvv'orderId, int vvv'amount, slice vvv'receiver, int vvv'trxId) = __tact_tuple_destroy_5(v);
    return (vvv'orderType, vvv'orderId, vvv'amount, vvv'receiver, vvv'trxId);
}

cell $JettonCallback$_store_opt(tuple v) inline {
    if (null?(v)) {
        return null();
    }
    return $JettonCallback$_store_cell($JettonCallback$_not_null(v));
}

(slice, ((int, int, int, slice, int))) $JettonCallback$_load(slice sc_0) inline {
    var v'orderType = sc_0~load_int(257);
    var v'orderId = sc_0~load_int(257);
    var v'amount = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'receiver = sc_1~__tact_load_address();
    var v'trxId = sc_1~load_int(257);
    return (sc_0, (v'orderType, v'orderId, v'amount, v'receiver, v'trxId));
}

tuple $JettonCallback$_as_optional((int, int, int, slice, int) v) inline {
    var (v'orderType, v'orderId, v'amount, v'receiver, v'trxId) = v;
    return __tact_tuple_create_5(v'orderType, v'orderId, v'amount, v'receiver, v'trxId);
}

tuple $JettonCallback$_load_opt(cell cl) inline {
    if (null?(cl)) {
        return null();
    }
    var sc = cl.begin_parse();
    return $JettonCallback$_as_optional(sc~$JettonCallback$_load());
}

((int, int, int, slice, int)) $JettonCallback$_constructor_orderType_orderId_amount_receiver_trxId(int orderType, int orderId, int amount, slice receiver, int trxId) inline {
    return (orderType, orderId, amount, receiver, trxId);
}

;;
;; Type: RBFPositionOrder
;; TLB: _ isIncrease:bool account:address liquidityDelta:int257 executionFee:int257 blockTime:int257 isPending:bool callbackId:Maybe int257 executionFeeReceiver:Maybe address lastOperator:Maybe address = RBFPositionOrder
;;

builder $RBFPositionOrder$_store(builder build_0, (int, slice, int, int, int, int, int, slice, slice) v) inline_ref {
    var (v'isIncrease, v'account, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator) = v;
    build_0 = build_0.store_int(v'isIncrease, 1);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'liquidityDelta, 257);
    build_0 = build_0.store_int(v'executionFee, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'blockTime, 257);
    build_1 = build_1.store_int(v'isPending, 1);
    build_1 = ~ null?(v'callbackId) ? build_1.store_int(true, 1).store_int(v'callbackId, 257) : build_1.store_int(false, 1);
    build_1 = __tact_store_address_opt(build_1, v'executionFeeReceiver);
    var build_2 = begin_cell();
    build_2 = __tact_store_address_opt(build_2, v'lastOperator);
    build_1 = store_ref(build_1, build_2.end_cell());
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $RBFPositionOrder$_store_cell((int, slice, int, int, int, int, int, slice, slice) v) inline {
    return $RBFPositionOrder$_store(begin_cell(), v).end_cell();
}

((int, slice, int, int, int, int, int, slice, slice)) $RBFPositionOrder$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'isIncrease, slice vvv'account, int vvv'liquidityDelta, int vvv'executionFee, int vvv'blockTime, int vvv'isPending, int vvv'callbackId, slice vvv'executionFeeReceiver, slice vvv'lastOperator) = __tact_tuple_destroy_9(v);
    return (vvv'isIncrease, vvv'account, vvv'liquidityDelta, vvv'executionFee, vvv'blockTime, vvv'isPending, vvv'callbackId, vvv'executionFeeReceiver, vvv'lastOperator);
}

cell $RBFPositionOrder$_store_opt(tuple v) inline {
    if (null?(v)) {
        return null();
    }
    return $RBFPositionOrder$_store_cell($RBFPositionOrder$_not_null(v));
}

(slice, ((int, slice, int, int, int, int, int, slice, slice))) $RBFPositionOrder$_load(slice sc_0) inline_ref {
    var v'isIncrease = sc_0~load_int(1);
    var v'account = sc_0~__tact_load_address();
    var v'liquidityDelta = sc_0~load_int(257);
    var v'executionFee = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'blockTime = sc_1~load_int(257);
    var v'isPending = sc_1~load_int(1);
    var v'callbackId = sc_1~load_int(1) ? sc_1~load_int(257) : null();
    var v'executionFeeReceiver = sc_1~__tact_load_address_opt();
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'lastOperator = sc_2~__tact_load_address_opt();
    return (sc_0, (v'isIncrease, v'account, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator));
}

tuple $RBFPositionOrder$_as_optional((int, slice, int, int, int, int, int, slice, slice) v) inline {
    var (v'isIncrease, v'account, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator) = v;
    return __tact_tuple_create_9(v'isIncrease, v'account, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator);
}

tuple $RBFPositionOrder$_load_opt(cell cl) inline {
    if (null?(cl)) {
        return null();
    }
    var sc = cl.begin_parse();
    return $RBFPositionOrder$_as_optional(sc~$RBFPositionOrder$_load());
}

tuple $RBFPositionOrder$_to_tuple(((int, slice, int, int, int, int, int, slice, slice)) v) inline {
    var (v'isIncrease, v'account, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator) = v;
    return __tact_tuple_create_9(v'isIncrease, v'account, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator);
}

tuple $RBFPositionOrder$_to_opt_tuple(tuple v) inline {
    if (null?(v)) { return null(); } 
    return $RBFPositionOrder$_to_tuple($RBFPositionOrder$_not_null(v)); 
}

tuple $RBFPositionOrder$_to_opt_external(tuple v) inline {
    var loaded = $RBFPositionOrder$_to_opt_tuple(v);
    if (null?(loaded)) {
        return null();
    } else {
        return (loaded);
    }
}

((int, slice, int, int, int, int, int, slice, slice)) $RBFPositionOrder$_constructor_isIncrease_account_liquidityDelta_executionFee_blockTime_isPending_callbackId_executionFeeReceiver_lastOperator(int isIncrease, slice account, int liquidityDelta, int executionFee, int blockTime, int isPending, int callbackId, slice executionFeeReceiver, slice lastOperator) inline {
    return (isIncrease, account, liquidityDelta, executionFee, blockTime, isPending, callbackId, executionFeeReceiver, lastOperator);
}

;;
;; Type: LPPositionOrder
;; TLB: _ opType:uint8 account:address marginDelta:int257 liquidityDelta:int257 executionFee:int257 blockTime:int257 isPending:bool callbackId:Maybe int257 executionFeeReceiver:Maybe address lastOperator:Maybe address = LPPositionOrder
;;

builder $LPPositionOrder$_store(builder build_0, (int, slice, int, int, int, int, int, int, slice, slice) v) inline_ref {
    var (v'opType, v'account, v'marginDelta, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator) = v;
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'marginDelta, 257);
    build_0 = build_0.store_int(v'liquidityDelta, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'executionFee, 257);
    build_1 = build_1.store_int(v'blockTime, 257);
    build_1 = build_1.store_int(v'isPending, 1);
    build_1 = ~ null?(v'callbackId) ? build_1.store_int(true, 1).store_int(v'callbackId, 257) : build_1.store_int(false, 1);
    var build_2 = begin_cell();
    build_2 = __tact_store_address_opt(build_2, v'executionFeeReceiver);
    build_2 = __tact_store_address_opt(build_2, v'lastOperator);
    build_1 = store_ref(build_1, build_2.end_cell());
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $LPPositionOrder$_store_cell((int, slice, int, int, int, int, int, int, slice, slice) v) inline {
    return $LPPositionOrder$_store(begin_cell(), v).end_cell();
}

((int, slice, int, int, int, int, int, int, slice, slice)) $LPPositionOrder$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'opType, slice vvv'account, int vvv'marginDelta, int vvv'liquidityDelta, int vvv'executionFee, int vvv'blockTime, int vvv'isPending, int vvv'callbackId, slice vvv'executionFeeReceiver, slice vvv'lastOperator) = __tact_tuple_destroy_10(v);
    return (vvv'opType, vvv'account, vvv'marginDelta, vvv'liquidityDelta, vvv'executionFee, vvv'blockTime, vvv'isPending, vvv'callbackId, vvv'executionFeeReceiver, vvv'lastOperator);
}

cell $LPPositionOrder$_store_opt(tuple v) inline {
    if (null?(v)) {
        return null();
    }
    return $LPPositionOrder$_store_cell($LPPositionOrder$_not_null(v));
}

(slice, ((int, slice, int, int, int, int, int, int, slice, slice))) $LPPositionOrder$_load(slice sc_0) inline_ref {
    var v'opType = sc_0~load_uint(8);
    var v'account = sc_0~__tact_load_address();
    var v'marginDelta = sc_0~load_int(257);
    var v'liquidityDelta = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'executionFee = sc_1~load_int(257);
    var v'blockTime = sc_1~load_int(257);
    var v'isPending = sc_1~load_int(1);
    var v'callbackId = sc_1~load_int(1) ? sc_1~load_int(257) : null();
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'executionFeeReceiver = sc_2~__tact_load_address_opt();
    var v'lastOperator = sc_2~__tact_load_address_opt();
    return (sc_0, (v'opType, v'account, v'marginDelta, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator));
}

tuple $LPPositionOrder$_as_optional((int, slice, int, int, int, int, int, int, slice, slice) v) inline {
    var (v'opType, v'account, v'marginDelta, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator) = v;
    return __tact_tuple_create_10(v'opType, v'account, v'marginDelta, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator);
}

tuple $LPPositionOrder$_load_opt(cell cl) inline {
    if (null?(cl)) {
        return null();
    }
    var sc = cl.begin_parse();
    return $LPPositionOrder$_as_optional(sc~$LPPositionOrder$_load());
}

tuple $LPPositionOrder$_to_tuple(((int, slice, int, int, int, int, int, int, slice, slice)) v) inline {
    var (v'opType, v'account, v'marginDelta, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator) = v;
    return __tact_tuple_create_10(v'opType, v'account, v'marginDelta, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator);
}

tuple $LPPositionOrder$_to_opt_tuple(tuple v) inline {
    if (null?(v)) { return null(); } 
    return $LPPositionOrder$_to_tuple($LPPositionOrder$_not_null(v)); 
}

tuple $LPPositionOrder$_to_opt_external(tuple v) inline {
    var loaded = $LPPositionOrder$_to_opt_tuple(v);
    if (null?(loaded)) {
        return null();
    } else {
        return (loaded);
    }
}

((int, slice, int, int, int, int, int, int, slice, slice)) $LPPositionOrder$_constructor_opType_account_marginDelta_liquidityDelta_executionFee_blockTime_isPending_callbackId_executionFeeReceiver_lastOperator(int opType, slice account, int marginDelta, int liquidityDelta, int executionFee, int blockTime, int isPending, int callbackId, slice executionFeeReceiver, slice lastOperator) inline {
    return (opType, account, marginDelta, liquidityDelta, executionFee, blockTime, isPending, callbackId, executionFeeReceiver, lastOperator);
}

;;
;; Type: PerpPositionOrder
;; TLB: _ opType:uint8 tokenId:int257 account:address isLong:bool marginDelta:int257 sizeDelta:int257 triggerPrice:int257 triggerAbove:bool executionFee:int257 blockTime:int257 isPending:bool callbackId:Maybe int257 executionFeeReceiver:Maybe address lastOperator:Maybe address = PerpPositionOrder
;;

builder $PerpPositionOrder$_store(builder build_0, (int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice) v) inline_ref {
    var (v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator) = v;
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_int(v'tokenId, 257);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'isLong, 1);
    build_0 = build_0.store_int(v'marginDelta, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'sizeDelta, 257);
    build_1 = build_1.store_int(v'triggerPrice, 257);
    build_1 = build_1.store_int(v'triggerAbove, 1);
    build_1 = build_1.store_int(v'executionFee, 257);
    var build_2 = begin_cell();
    build_2 = build_2.store_int(v'blockTime, 257);
    build_2 = build_2.store_int(v'isPending, 1);
    build_2 = ~ null?(v'callbackId) ? build_2.store_int(true, 1).store_int(v'callbackId, 257) : build_2.store_int(false, 1);
    build_2 = __tact_store_address_opt(build_2, v'executionFeeReceiver);
    var build_3 = begin_cell();
    build_3 = __tact_store_address_opt(build_3, v'lastOperator);
    build_2 = store_ref(build_2, build_3.end_cell());
    build_1 = store_ref(build_1, build_2.end_cell());
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $PerpPositionOrder$_store_cell((int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice) v) inline {
    return $PerpPositionOrder$_store(begin_cell(), v).end_cell();
}

((int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice)) $PerpPositionOrder$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'opType, int vvv'tokenId, slice vvv'account, int vvv'isLong, int vvv'marginDelta, int vvv'sizeDelta, int vvv'triggerPrice, int vvv'triggerAbove, int vvv'executionFee, int vvv'blockTime, int vvv'isPending, int vvv'callbackId, slice vvv'executionFeeReceiver, slice vvv'lastOperator) = __tact_tuple_destroy_14(v);
    return (vvv'opType, vvv'tokenId, vvv'account, vvv'isLong, vvv'marginDelta, vvv'sizeDelta, vvv'triggerPrice, vvv'triggerAbove, vvv'executionFee, vvv'blockTime, vvv'isPending, vvv'callbackId, vvv'executionFeeReceiver, vvv'lastOperator);
}

cell $PerpPositionOrder$_store_opt(tuple v) inline {
    if (null?(v)) {
        return null();
    }
    return $PerpPositionOrder$_store_cell($PerpPositionOrder$_not_null(v));
}

(slice, ((int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice))) $PerpPositionOrder$_load(slice sc_0) inline_ref {
    var v'opType = sc_0~load_uint(8);
    var v'tokenId = sc_0~load_int(257);
    var v'account = sc_0~__tact_load_address();
    var v'isLong = sc_0~load_int(1);
    var v'marginDelta = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'sizeDelta = sc_1~load_int(257);
    var v'triggerPrice = sc_1~load_int(257);
    var v'triggerAbove = sc_1~load_int(1);
    var v'executionFee = sc_1~load_int(257);
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'blockTime = sc_2~load_int(257);
    var v'isPending = sc_2~load_int(1);
    var v'callbackId = sc_2~load_int(1) ? sc_2~load_int(257) : null();
    var v'executionFeeReceiver = sc_2~__tact_load_address_opt();
    slice sc_3 = sc_2~load_ref().begin_parse();
    var v'lastOperator = sc_3~__tact_load_address_opt();
    return (sc_0, (v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator));
}

tuple $PerpPositionOrder$_as_optional((int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice) v) inline {
    var (v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator) = v;
    return __tact_tuple_create_14(v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator);
}

tuple $PerpPositionOrder$_load_opt(cell cl) inline {
    if (null?(cl)) {
        return null();
    }
    var sc = cl.begin_parse();
    return $PerpPositionOrder$_as_optional(sc~$PerpPositionOrder$_load());
}

tuple $PerpPositionOrder$_to_tuple(((int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice)) v) inline {
    var (v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator) = v;
    return __tact_tuple_create_14(v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'executionFee, v'blockTime, v'isPending, v'callbackId, v'executionFeeReceiver, v'lastOperator);
}

tuple $PerpPositionOrder$_to_opt_tuple(tuple v) inline {
    if (null?(v)) { return null(); } 
    return $PerpPositionOrder$_to_tuple($PerpPositionOrder$_not_null(v)); 
}

tuple $PerpPositionOrder$_to_opt_external(tuple v) inline {
    var loaded = $PerpPositionOrder$_to_opt_tuple(v);
    if (null?(loaded)) {
        return null();
    } else {
        return (loaded);
    }
}

((int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice)) $PerpPositionOrder$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_executionFee_blockTime_isPending_callbackId_executionFeeReceiver_lastOperator(int opType, int tokenId, slice account, int isLong, int marginDelta, int sizeDelta, int triggerPrice, int triggerAbove, int executionFee, int blockTime, int isPending, int callbackId, slice executionFeeReceiver, slice lastOperator) inline {
    return (opType, tokenId, account, isLong, marginDelta, sizeDelta, triggerPrice, triggerAbove, executionFee, blockTime, isPending, callbackId, executionFeeReceiver, lastOperator);
}

;;
;; Type: PerpPositionOrderEx
;; TLB: _ tpSize:int257 tpPrice:int257 slSize:int257 slPrice:int257 = PerpPositionOrderEx
;;

builder $PerpPositionOrderEx$_store(builder build_0, (int, int, int, int) v) inline {
    var (v'tpSize, v'tpPrice, v'slSize, v'slPrice) = v;
    build_0 = build_0.store_int(v'tpSize, 257);
    build_0 = build_0.store_int(v'tpPrice, 257);
    build_0 = build_0.store_int(v'slSize, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'slPrice, 257);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $PerpPositionOrderEx$_store_cell((int, int, int, int) v) inline {
    return $PerpPositionOrderEx$_store(begin_cell(), v).end_cell();
}

((int, int, int, int)) $PerpPositionOrderEx$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'tpSize, int vvv'tpPrice, int vvv'slSize, int vvv'slPrice) = __tact_tuple_destroy_4(v);
    return (vvv'tpSize, vvv'tpPrice, vvv'slSize, vvv'slPrice);
}

cell $PerpPositionOrderEx$_store_opt(tuple v) inline {
    if (null?(v)) {
        return null();
    }
    return $PerpPositionOrderEx$_store_cell($PerpPositionOrderEx$_not_null(v));
}

(slice, ((int, int, int, int))) $PerpPositionOrderEx$_load(slice sc_0) inline {
    var v'tpSize = sc_0~load_int(257);
    var v'tpPrice = sc_0~load_int(257);
    var v'slSize = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'slPrice = sc_1~load_int(257);
    return (sc_0, (v'tpSize, v'tpPrice, v'slSize, v'slPrice));
}

tuple $PerpPositionOrderEx$_as_optional((int, int, int, int) v) inline {
    var (v'tpSize, v'tpPrice, v'slSize, v'slPrice) = v;
    return __tact_tuple_create_4(v'tpSize, v'tpPrice, v'slSize, v'slPrice);
}

tuple $PerpPositionOrderEx$_load_opt(cell cl) inline {
    if (null?(cl)) {
        return null();
    }
    var sc = cl.begin_parse();
    return $PerpPositionOrderEx$_as_optional(sc~$PerpPositionOrderEx$_load());
}

((int, int, int, int)) $PerpPositionOrderEx$_constructor_tpSize_tpPrice_slSize_slPrice(int tpSize, int tpPrice, int slSize, int slPrice) inline {
    return (tpSize, tpPrice, slSize, slPrice);
}

;;
;; Type: OrderBook
;;

builder $OrderBook$_store(builder build_0, (int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) v) inline {
    var (v'maxTimeDelayExecutor, v'minTimeDelayTrader, v'minExecutionFee, v'gasConsumption, v'minTonsForStorage, v'usdtWallet, v'pool, v'owner, v'executors, v'jettonCallbacks, v'jettonCallbackQueryIdNext, v'rbfPositionOrders, v'rbfPositionOrderIndexNext, v'lpPositionOrders, v'lpPositionOrderIndexNext, v'perpPositionOrders, v'perpPositionOrderExs, v'perpPositionOrderIndexNext) = v;
    build_0 = build_0.store_int(v'maxTimeDelayExecutor, 257);
    build_0 = build_0.store_int(v'minTimeDelayTrader, 257);
    build_0 = build_0.store_int(v'minExecutionFee, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'gasConsumption, 257);
    build_1 = build_1.store_int(v'minTonsForStorage, 257);
    build_1 = __tact_store_address(build_1, v'usdtWallet);
    var build_2 = begin_cell();
    build_2 = __tact_store_address(build_2, v'pool);
    build_2 = __tact_store_address(build_2, v'owner);
    build_2 = build_2.store_dict(v'executors);
    build_2 = build_2.store_dict(v'jettonCallbacks);
    build_2 = build_2.store_uint(v'jettonCallbackQueryIdNext, 64);
    build_2 = build_2.store_dict(v'rbfPositionOrders);
    build_2 = build_2.store_uint(v'rbfPositionOrderIndexNext, 64);
    var build_3 = begin_cell();
    build_3 = build_3.store_dict(v'lpPositionOrders);
    build_3 = build_3.store_uint(v'lpPositionOrderIndexNext, 64);
    build_3 = build_3.store_dict(v'perpPositionOrders);
    build_3 = build_3.store_dict(v'perpPositionOrderExs);
    build_3 = build_3.store_uint(v'perpPositionOrderIndexNext, 64);
    build_2 = store_ref(build_2, build_3.end_cell());
    build_1 = store_ref(build_1, build_2.end_cell());
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

(slice, ((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int))) $OrderBook$_load(slice sc_0) inline {
    var v'maxTimeDelayExecutor = sc_0~load_int(257);
    var v'minTimeDelayTrader = sc_0~load_int(257);
    var v'minExecutionFee = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'gasConsumption = sc_1~load_int(257);
    var v'minTonsForStorage = sc_1~load_int(257);
    var v'usdtWallet = sc_1~__tact_load_address();
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'pool = sc_2~__tact_load_address();
    var v'owner = sc_2~__tact_load_address();
    var v'executors = sc_2~load_dict();
    var v'jettonCallbacks = sc_2~load_dict();
    var v'jettonCallbackQueryIdNext = sc_2~load_uint(64);
    var v'rbfPositionOrders = sc_2~load_dict();
    var v'rbfPositionOrderIndexNext = sc_2~load_uint(64);
    slice sc_3 = sc_2~load_ref().begin_parse();
    var v'lpPositionOrders = sc_3~load_dict();
    var v'lpPositionOrderIndexNext = sc_3~load_uint(64);
    var v'perpPositionOrders = sc_3~load_dict();
    var v'perpPositionOrderExs = sc_3~load_dict();
    var v'perpPositionOrderIndexNext = sc_3~load_uint(64);
    return (sc_0, (v'maxTimeDelayExecutor, v'minTimeDelayTrader, v'minExecutionFee, v'gasConsumption, v'minTonsForStorage, v'usdtWallet, v'pool, v'owner, v'executors, v'jettonCallbacks, v'jettonCallbackQueryIdNext, v'rbfPositionOrders, v'rbfPositionOrderIndexNext, v'lpPositionOrders, v'lpPositionOrderIndexNext, v'perpPositionOrders, v'perpPositionOrderExs, v'perpPositionOrderIndexNext));
}

(slice, ((int))) $OrderBook$init$_load(slice sc_0) inline {
    var v'deployId = sc_0~load_int(257);
    return (sc_0, (v'deployId));
}

(int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $OrderBook$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$OrderBook$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (int deployId) = $sc~$OrderBook$init$_load();
        $sc.end_parse();
        return $OrderBook$_contract_init(deployId);
    }
}

() $OrderBook$_contract_store((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $OrderBook$_store(b, v);
    set_data(b.end_cell());
}