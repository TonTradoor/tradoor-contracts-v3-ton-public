;;
;; Type: StateInit
;; TLB: _ code:^cell data:^cell = StateInit
;;

((cell, cell)) $StateInit$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (cell vvv'code, cell vvv'data) = __tact_tuple_destroy_2(v);
    return (vvv'code, vvv'data);
}

;;
;; Type: Context
;; TLB: _ bounced:bool sender:address value:int257 raw:^slice = Context
;;

_ $Context$_get_value((int, slice, int, slice) v) inline {
    var (v'bounced, v'sender, v'value, v'raw) = v;
    return v'value;
}

;;
;; Type: SendParameters
;; TLB: _ bounce:bool to:address value:int257 mode:int257 body:Maybe ^cell code:Maybe ^cell data:Maybe ^cell = SendParameters
;;

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline {
    return (bounce, to, value, mode, body, null(), null());
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value_mode(slice to, int bounce, int value, int mode) inline {
    return (bounce, to, value, mode, null(), null(), null());
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value_mode_body(slice to, int bounce, int value, int mode, cell body) inline {
    return (bounce, to, value, mode, body, null(), null());
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline {
    return (bounce, to, value, mode, body, code, data);
}

((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode(slice to, int value, int mode) inline {
    return (true, to, value, mode, null(), null(), null());
}

;;
;; Type: Deploy
;; Header: 0x946a98b6
;; TLB: deploy#946a98b6 queryId:uint64 = Deploy
;;

(slice, ((int))) $Deploy$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2490013878);
    var v'queryId = sc_0~load_uint(64);
    return (sc_0, (v'queryId));
}

;;
;; Type: DeployOk
;; Header: 0xaff90f57
;; TLB: deploy_ok#aff90f57 queryId:uint64 = DeployOk
;;

builder $DeployOk$_store(builder build_0, (int) v) inline {
    var (v'queryId) = v;
    build_0 = store_uint(build_0, 2952335191, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    return build_0;
}

cell $DeployOk$_store_cell((int) v) inline {
    return $DeployOk$_store(begin_cell(), v).end_cell();
}

((int)) $DeployOk$_constructor_queryId(int queryId) inline {
    return (queryId);
}

;;
;; Type: TokenTransfer
;; Header: 0x0f8a7ea5
;; TLB: token_transfer#0f8a7ea5 queryId:uint64 amount:coins receiver:address responseDestination:Maybe address customPayload:Maybe ^cell forwardTonAmount:coins forwardPayload:remainder<slice> = TokenTransfer
;;

builder $TokenTransfer$_store(builder build_0, (int, int, slice, slice, cell, int, slice) v) inline_ref {
    var (v'queryId, v'amount, v'receiver, v'responseDestination, v'customPayload, v'forwardTonAmount, v'forwardPayload) = v;
    build_0 = store_uint(build_0, 260734629, 32);
    build_0 = build_0.store_uint(v'queryId, 64);
    build_0 = build_0.store_coins(v'amount);
    build_0 = __tact_store_address(build_0, v'receiver);
    build_0 = __tact_store_address_opt(build_0, v'responseDestination);
    build_0 = ~ null?(v'customPayload) ? build_0.store_int(true, 1).store_ref(v'customPayload) : build_0.store_int(false, 1);
    build_0 = build_0.store_coins(v'forwardTonAmount);
    build_0 = build_0.store_slice(v'forwardPayload);
    return build_0;
}

cell $TokenTransfer$_store_cell((int, int, slice, slice, cell, int, slice) v) inline {
    return $TokenTransfer$_store(begin_cell(), v).end_cell();
}

((int, int, slice, slice, cell, int, slice)) $TokenTransfer$_constructor_queryId_amount_receiver_responseDestination_customPayload_forwardTonAmount_forwardPayload(int queryId, int amount, slice receiver, slice responseDestination, cell customPayload, int forwardTonAmount, slice forwardPayload) inline {
    return (queryId, amount, receiver, responseDestination, customPayload, forwardTonAmount, forwardPayload);
}

;;
;; Type: TokenNotification
;; Header: 0x7362d09c
;; TLB: token_notification#7362d09c queryId:uint64 amount:coins from:address forwardPayload:remainder<slice> = TokenNotification
;;

(slice, ((int, int, slice, slice))) $TokenNotification$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1935855772);
    var v'queryId = sc_0~load_uint(64);
    var v'amount = sc_0~load_coins();
    var v'from = sc_0~__tact_load_address();
    var v'forwardPayload = sc_0;
    return (sc_0, (v'queryId, v'amount, v'from, v'forwardPayload));
}

;;
;; Type: UpdateConfig
;; Header: 0x408e9f7c
;; TLB: update_config#408e9f7c executor:Maybe address enableExecutor:Maybe bool maxTimeDelayExecutor:int257 minTimeDelayTrader:int257 minExecutionFee:coins gasConsumption:coins minTonsForStorage:coins usdtWallet:address pool:address = UpdateConfig
;;

(slice, ((slice, int, int, int, int, int, int, slice, slice))) $UpdateConfig$_load(slice sc_0) inline_ref {
    throw_unless(129, sc_0~load_uint(32) == 1083088764);
    var v'executor = sc_0~__tact_load_address_opt();
    var v'enableExecutor = sc_0~load_int(1) ? sc_0~load_int(1) : null();
    var v'maxTimeDelayExecutor = sc_0~load_int(257);
    var v'minTimeDelayTrader = sc_0~load_int(257);
    var v'minExecutionFee = sc_0~load_coins();
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'gasConsumption = sc_1~load_coins();
    var v'minTonsForStorage = sc_1~load_coins();
    var v'usdtWallet = sc_1~__tact_load_address();
    var v'pool = sc_1~__tact_load_address();
    return (sc_0, (v'executor, v'enableExecutor, v'maxTimeDelayExecutor, v'minTimeDelayTrader, v'minExecutionFee, v'gasConsumption, v'minTonsForStorage, v'usdtWallet, v'pool));
}

;;
;; Type: UpdateWhitelist
;; Header: 0x4f5c3f48
;; TLB: update_whitelist#4f5c3f48 enableWhitelist:Maybe bool whitelistLength:uint64 whitelist:dict<int, ^UpdateWhitelistParam{account:address,enable:bool}> = UpdateWhitelist
;;

(slice, ((int, int, cell))) $UpdateWhitelist$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1331445576);
    var v'enableWhitelist = sc_0~load_int(1) ? sc_0~load_int(1) : null();
    var v'whitelistLength = sc_0~load_uint(64);
    var v'whitelist = sc_0~load_dict();
    return (sc_0, (v'enableWhitelist, v'whitelistLength, v'whitelist));
}

;;
;; Type: CreateDecreaseLPPositionOrder
;; Header: 0x25b21724
;; TLB: create_decrease_lp_position_order#25b21724 executionFee:coins liquidityDelta:uint128 trxId:uint64 = CreateDecreaseLPPositionOrder
;;

(slice, ((int, int, int))) $CreateDecreaseLPPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 632428324);
    var v'executionFee = sc_0~load_coins();
    var v'liquidityDelta = sc_0~load_uint(128);
    var v'trxId = sc_0~load_uint(64);
    return (sc_0, (v'executionFee, v'liquidityDelta, v'trxId));
}

;;
;; Type: CancelLPPositionOrder
;; Header: 0x7d91eb36
;; TLB: cancel_lp_position_order#7d91eb36 orderId:uint64 trxId:uint64 executionFeeReceiver:Maybe address = CancelLPPositionOrder
;;

(slice, ((int, int, slice))) $CancelLPPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2106714934);
    var v'orderId = sc_0~load_uint(64);
    var v'trxId = sc_0~load_uint(64);
    var v'executionFeeReceiver = sc_0~__tact_load_address_opt();
    return (sc_0, (v'orderId, v'trxId, v'executionFeeReceiver));
}

;;
;; Type: ExecuteLPPositionOrder
;; Header: 0x554a0851
;; TLB: execute_lp_position_order#554a0851 orderId:uint64 trxId:uint64 executionFeeReceiver:Maybe address pricesLength:uint64 prices:dict<int, ^UpdatePrice{tokenId:uint64,price:int257}> = ExecuteLPPositionOrder
;;

(slice, ((int, int, slice, int, cell))) $ExecuteLPPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1430915153);
    var v'orderId = sc_0~load_uint(64);
    var v'trxId = sc_0~load_uint(64);
    var v'executionFeeReceiver = sc_0~__tact_load_address_opt();
    var v'pricesLength = sc_0~load_uint(64);
    var v'prices = sc_0~load_dict();
    return (sc_0, (v'orderId, v'trxId, v'executionFeeReceiver, v'pricesLength, v'prices));
}

;;
;; Type: UpdateLPPosition
;; Header: 0xe89cd45f
;; TLB: update_lp_position#e89cd45f isIncrease:bool orderId:uint64 account:address liquidityDelta:int257 trxId:uint64 pricesLength:uint64 prices:dict<int, ^UpdatePrice{tokenId:uint64,price:int257}> = UpdateLPPosition
;;

builder $UpdateLPPosition$_store(builder build_0, (int, int, slice, int, int, int, cell) v) inline_ref {
    var (v'isIncrease, v'orderId, v'account, v'liquidityDelta, v'trxId, v'pricesLength, v'prices) = v;
    build_0 = store_uint(build_0, 3902592095, 32);
    build_0 = build_0.store_int(v'isIncrease, 1);
    build_0 = build_0.store_uint(v'orderId, 64);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'liquidityDelta, 257);
    build_0 = build_0.store_uint(v'trxId, 64);
    build_0 = build_0.store_uint(v'pricesLength, 64);
    build_0 = build_0.store_dict(v'prices);
    return build_0;
}

cell $UpdateLPPosition$_store_cell((int, int, slice, int, int, int, cell) v) inline {
    return $UpdateLPPosition$_store(begin_cell(), v).end_cell();
}

(slice, ((int, int))) $UpdateLPPosition$_load_bounced(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3902592095);
    var v'isIncrease = sc_0~load_int(1);
    var v'orderId = sc_0~load_uint(64);
    return (sc_0, (v'isIncrease, v'orderId));
}

((int, int, slice, int, int, int, cell)) $UpdateLPPosition$_constructor_isIncrease_orderId_trxId_account_liquidityDelta_pricesLength_prices(int isIncrease, int orderId, int trxId, slice account, int liquidityDelta, int pricesLength, cell prices) inline {
    return (isIncrease, orderId, account, liquidityDelta, trxId, pricesLength, prices);
}

;;
;; Type: UpdateLPPositionSuccess
;; Header: 0x1cf0cf81
;; TLB: update_lp_position_success#1cf0cf81 orderId:uint64 receive:int257 trxId:uint64 = UpdateLPPositionSuccess
;;

(slice, ((int, int, int))) $UpdateLPPositionSuccess$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 485543809);
    var v'orderId = sc_0~load_uint(64);
    var v'receive = sc_0~load_int(257);
    var v'trxId = sc_0~load_uint(64);
    return (sc_0, (v'orderId, v'receive, v'trxId));
}

;;
;; Type: CreateCompensate
;; Header: 0xaf93b5c8
;; TLB: create_compensate#af93b5c8 orderType:Maybe uint8 orderId:uint64 trxId:uint64 refundReceiver:Maybe address refundAmount:uint128 executionFeeReceiver:Maybe address executionFee:coins = CreateCompensate
;;

(slice, ((int, int, int, slice, int, slice, int))) $CreateCompensate$_load(slice sc_0) inline_ref {
    throw_unless(129, sc_0~load_uint(32) == 2945693128);
    var v'orderType = sc_0~load_int(1) ? sc_0~load_uint(8) : null();
    var v'orderId = sc_0~load_uint(64);
    var v'trxId = sc_0~load_uint(64);
    var v'refundReceiver = sc_0~__tact_load_address_opt();
    var v'refundAmount = sc_0~load_uint(128);
    var v'executionFeeReceiver = sc_0~__tact_load_address_opt();
    var v'executionFee = sc_0~load_coins();
    return (sc_0, (v'orderType, v'orderId, v'trxId, v'refundReceiver, v'refundAmount, v'executionFeeReceiver, v'executionFee));
}

;;
;; Type: CancelCompensate
;; Header: 0x58def8ba
;; TLB: cancel_compensate#58def8ba compensateId:uint64 trxId:uint64 = CancelCompensate
;;

(slice, ((int, int))) $CancelCompensate$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 1491007674);
    var v'compensateId = sc_0~load_uint(64);
    var v'trxId = sc_0~load_uint(64);
    return (sc_0, (v'compensateId, v'trxId));
}

;;
;; Type: ExecuteCompensate
;; Header: 0xcc1ca2f0
;; TLB: execute_compensate#cc1ca2f0 compensateId:uint64 trxId:uint64 = ExecuteCompensate
;;

(slice, ((int, int))) $ExecuteCompensate$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3424428784);
    var v'compensateId = sc_0~load_uint(64);
    var v'trxId = sc_0~load_uint(64);
    return (sc_0, (v'compensateId, v'trxId));
}

;;
;; Type: CreateDecreasePerpPositionOrder
;; Header: 0x6a923ddb
;; TLB: create_decrease_perp_position_order#6a923ddb executionFee:coins tokenId:uint64 isLong:bool marginDelta:uint128 sizeDelta:uint128 triggerPrice:uint128 trxId:uint64 = CreateDecreasePerpPositionOrder
;;

(slice, ((int, int, int, int, int, int, int))) $CreateDecreasePerpPositionOrder$_load(slice sc_0) inline_ref {
    throw_unless(129, sc_0~load_uint(32) == 1787968987);
    var v'executionFee = sc_0~load_coins();
    var v'tokenId = sc_0~load_uint(64);
    var v'isLong = sc_0~load_int(1);
    var v'marginDelta = sc_0~load_uint(128);
    var v'sizeDelta = sc_0~load_uint(128);
    var v'triggerPrice = sc_0~load_uint(128);
    var v'trxId = sc_0~load_uint(64);
    return (sc_0, (v'executionFee, v'tokenId, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'trxId));
}

;;
;; Type: CreateTpSlPerpPositionOrder
;; Header: 0x23c72f58
;; TLB: create_tp_sl_perp_position_order#23c72f58 executionFee:coins tokenId:uint64 isLong:bool tpSize:uint128 tpPrice:uint128 slSize:uint128 slPrice:uint128 trxId:uint64 = CreateTpSlPerpPositionOrder
;;

(slice, ((int, int, int, int, int, int, int, int))) $CreateTpSlPerpPositionOrder$_load(slice sc_0) inline_ref {
    throw_unless(129, sc_0~load_uint(32) == 600256344);
    var v'executionFee = sc_0~load_coins();
    var v'tokenId = sc_0~load_uint(64);
    var v'isLong = sc_0~load_int(1);
    var v'tpSize = sc_0~load_uint(128);
    var v'tpPrice = sc_0~load_uint(128);
    var v'slSize = sc_0~load_uint(128);
    var v'slPrice = sc_0~load_uint(128);
    var v'trxId = sc_0~load_uint(64);
    return (sc_0, (v'executionFee, v'tokenId, v'isLong, v'tpSize, v'tpPrice, v'slSize, v'slPrice, v'trxId));
}

;;
;; Type: CancelPerpPositionOrder
;; Header: 0xc1f953f2
;; TLB: cancel_perp_position_order#c1f953f2 executionFeeReceiver:Maybe address orderId:uint64 trxId:uint64 = CancelPerpPositionOrder
;;

(slice, ((slice, int, int))) $CancelPerpPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 3254342642);
    var v'executionFeeReceiver = sc_0~__tact_load_address_opt();
    var v'orderId = sc_0~load_uint(64);
    var v'trxId = sc_0~load_uint(64);
    return (sc_0, (v'executionFeeReceiver, v'orderId, v'trxId));
}

;;
;; Type: ExecutePerpPositionOrder
;; Header: 0xf9a72561
;; TLB: execute_perp_position_order#f9a72561 executionFeeReceiver:Maybe address orderId:uint64 trxId:uint64 pricesLength:uint64 prices:dict<int, ^UpdatePrice{tokenId:uint64,price:int257}> = ExecutePerpPositionOrder
;;

(slice, ((slice, int, int, int, cell))) $ExecutePerpPositionOrder$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4188480865);
    var v'executionFeeReceiver = sc_0~__tact_load_address_opt();
    var v'orderId = sc_0~load_uint(64);
    var v'trxId = sc_0~load_uint(64);
    var v'pricesLength = sc_0~load_uint(64);
    var v'prices = sc_0~load_dict();
    return (sc_0, (v'executionFeeReceiver, v'orderId, v'trxId, v'pricesLength, v'prices));
}

;;
;; Type: LiquidatePerpPosition
;; Header: 0xbcd64691
;; TLB: liquidate_perp_position#bcd64691 liquidationFeeReceiver:Maybe address tokenId:uint64 account:address isLong:bool trxId:uint64 pricesLength:uint64 prices:dict<int, ^UpdatePrice{tokenId:uint64,price:int257}> = LiquidatePerpPosition
;;

(slice, ((slice, int, slice, int, int, int, cell))) $LiquidatePerpPosition$_load(slice sc_0) inline_ref {
    throw_unless(129, sc_0~load_uint(32) == 3168159377);
    var v'liquidationFeeReceiver = sc_0~__tact_load_address_opt();
    var v'tokenId = sc_0~load_uint(64);
    var v'account = sc_0~__tact_load_address();
    var v'isLong = sc_0~load_int(1);
    var v'trxId = sc_0~load_uint(64);
    var v'pricesLength = sc_0~load_uint(64);
    var v'prices = sc_0~load_dict();
    return (sc_0, (v'liquidationFeeReceiver, v'tokenId, v'account, v'isLong, v'trxId, v'pricesLength, v'prices));
}

;;
;; Type: ADLPerpPosition
;; Header: 0xce7af89a
;; TLB: adl_perp_position#ce7af89a tokenId:uint64 account:address isLong:bool marginDelta:uint128 sizeDelta:uint128 trxId:uint64 pricesLength:uint64 prices:dict<int, ^UpdatePrice{tokenId:uint64,price:int257}> = ADLPerpPosition
;;

(slice, ((int, slice, int, int, int, int, int, cell))) $ADLPerpPosition$_load(slice sc_0) inline_ref {
    throw_unless(129, sc_0~load_uint(32) == 3464165530);
    var v'tokenId = sc_0~load_uint(64);
    var v'account = sc_0~__tact_load_address();
    var v'isLong = sc_0~load_int(1);
    var v'marginDelta = sc_0~load_uint(128);
    var v'sizeDelta = sc_0~load_uint(128);
    var v'trxId = sc_0~load_uint(64);
    var v'pricesLength = sc_0~load_uint(64);
    var v'prices = sc_0~load_dict();
    return (sc_0, (v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'trxId, v'pricesLength, v'prices));
}

;;
;; Type: UpdatePerpPosition
;; Header: 0xff57e557
;; TLB: update_perp_position#ff57e557 orderId:uint64 opType:uint8 tokenId:uint64 account:address isLong:bool marginDelta:int257 sizeDelta:int257 triggerPrice:int257 triggerAbove:bool trxId:uint64 pricesLength:uint64 prices:dict<int, ^UpdatePrice{tokenId:uint64,price:int257}> = UpdatePerpPosition
;;

builder $UpdatePerpPosition$_store(builder build_0, (int, int, int, slice, int, int, int, int, int, int, int, cell) v) inline_ref {
    var (v'orderId, v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'trxId, v'pricesLength, v'prices) = v;
    build_0 = store_uint(build_0, 4283950423, 32);
    build_0 = build_0.store_uint(v'orderId, 64);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_uint(v'tokenId, 64);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'isLong, 1);
    build_0 = build_0.store_int(v'marginDelta, 257);
    build_0 = build_0.store_int(v'sizeDelta, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'triggerPrice, 257);
    build_1 = build_1.store_int(v'triggerAbove, 1);
    build_1 = build_1.store_uint(v'trxId, 64);
    build_1 = build_1.store_uint(v'pricesLength, 64);
    build_1 = build_1.store_dict(v'prices);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $UpdatePerpPosition$_store_cell((int, int, int, slice, int, int, int, int, int, int, int, cell) v) inline {
    return $UpdatePerpPosition$_store(begin_cell(), v).end_cell();
}

(slice, ((int, int, int))) $UpdatePerpPosition$_load_bounced(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4283950423);
    var v'orderId = sc_0~load_uint(64);
    var v'opType = sc_0~load_uint(8);
    var v'tokenId = sc_0~load_uint(64);
    return (sc_0, (v'orderId, v'opType, v'tokenId));
}

((int, int, int, slice, int, int, int, int, int, int, int, cell)) $UpdatePerpPosition$_constructor_orderId_opType_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices(int orderId, int opType, int trxId, slice account, int tokenId, int isLong, int marginDelta, int sizeDelta, int triggerPrice, int triggerAbove, int pricesLength, cell prices) inline {
    return (orderId, opType, tokenId, account, isLong, marginDelta, sizeDelta, triggerPrice, triggerAbove, trxId, pricesLength, prices);
}

((int, int, int, slice, int, int, int, int, int, int, int, cell)) $UpdatePerpPosition$_constructor_opType_orderId_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices(int opType, int orderId, int trxId, slice account, int tokenId, int isLong, int marginDelta, int sizeDelta, int triggerPrice, int triggerAbove, int pricesLength, cell prices) inline {
    return (orderId, opType, tokenId, account, isLong, marginDelta, sizeDelta, triggerPrice, triggerAbove, trxId, pricesLength, prices);
}

;;
;; Type: UpdatePerpPositionSuccess
;; Header: 0xef01c2b4
;; TLB: update_perp_position_success#ef01c2b4 orderId:uint64 receive:int257 trxId:uint64 = UpdatePerpPositionSuccess
;;

(slice, ((int, int, int))) $UpdatePerpPositionSuccess$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 4009870004);
    var v'orderId = sc_0~load_uint(64);
    var v'receive = sc_0~load_int(257);
    var v'trxId = sc_0~load_uint(64);
    return (sc_0, (v'orderId, v'receive, v'trxId));
}

;;
;; Type: LPPositionOrderCreatedEvent
;; Header: 0xb417cc6c
;; TLB: lp_position_order_created_event#b417cc6c opType:uint8 account:address liquidityDelta:int257 executionFee:coins orderId:int257 trxId:uint64 = LPPositionOrderCreatedEvent
;;

builder $LPPositionOrderCreatedEvent$_store(builder build_0, (int, slice, int, int, int, int) v) inline_ref {
    var (v'opType, v'account, v'liquidityDelta, v'executionFee, v'orderId, v'trxId) = v;
    build_0 = store_uint(build_0, 3021458540, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'liquidityDelta, 257);
    build_0 = build_0.store_coins(v'executionFee);
    build_0 = build_0.store_int(v'orderId, 257);
    build_0 = build_0.store_uint(v'trxId, 64);
    return build_0;
}

cell $LPPositionOrderCreatedEvent$_store_cell((int, slice, int, int, int, int) v) inline {
    return $LPPositionOrderCreatedEvent$_store(begin_cell(), v).end_cell();
}

((int, slice, int, int, int, int)) $LPPositionOrderCreatedEvent$_constructor_opType_account_liquidityDelta_executionFee_orderId_trxId(int opType, slice account, int liquidityDelta, int executionFee, int orderId, int trxId) inline {
    return (opType, account, liquidityDelta, executionFee, orderId, trxId);
}

;;
;; Type: LPPositionOrderCancelledEvent
;; Header: 0x4b658ac0
;; TLB: lp_position_order_cancelled_event#4b658ac0 opType:uint8 orderId:uint64 trxId:uint64 = LPPositionOrderCancelledEvent
;;

builder $LPPositionOrderCancelledEvent$_store(builder build_0, (int, int, int) v) inline {
    var (v'opType, v'orderId, v'trxId) = v;
    build_0 = store_uint(build_0, 1264945856, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_uint(v'orderId, 64);
    build_0 = build_0.store_uint(v'trxId, 64);
    return build_0;
}

cell $LPPositionOrderCancelledEvent$_store_cell((int, int, int) v) inline {
    return $LPPositionOrderCancelledEvent$_store(begin_cell(), v).end_cell();
}

((int, int, int)) $LPPositionOrderCancelledEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline {
    return (opType, orderId, trxId);
}

;;
;; Type: LPPositionOrderExecutedEvent
;; Header: 0xb3055fd4
;; TLB: lp_position_order_executed_event#b3055fd4 opType:uint8 orderId:uint64 trxId:uint64 = LPPositionOrderExecutedEvent
;;

builder $LPPositionOrderExecutedEvent$_store(builder build_0, (int, int, int) v) inline {
    var (v'opType, v'orderId, v'trxId) = v;
    build_0 = store_uint(build_0, 3003473876, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_uint(v'orderId, 64);
    build_0 = build_0.store_uint(v'trxId, 64);
    return build_0;
}

cell $LPPositionOrderExecutedEvent$_store_cell((int, int, int) v) inline {
    return $LPPositionOrderExecutedEvent$_store(begin_cell(), v).end_cell();
}

((int, int, int)) $LPPositionOrderExecutedEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline {
    return (opType, orderId, trxId);
}

;;
;; Type: PerpPositionOrderCreatedEvent
;; Header: 0x7263615d
;; TLB: perp_position_order_created_event#7263615d opType:uint8 tokenId:uint64 account:address isLong:bool marginDelta:int257 sizeDelta:int257 triggerPrice:int257 triggerAbove:bool tpSize:int257 tpPrice:int257 slSize:int257 slPrice:int257 executionFee:coins orderId:int257 trxId:uint64 = PerpPositionOrderCreatedEvent
;;

builder $PerpPositionOrderCreatedEvent$_store(builder build_0, (int, int, slice, int, int, int, int, int, int, int, int, int, int, int, int) v) inline_ref {
    var (v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'tpSize, v'tpPrice, v'slSize, v'slPrice, v'executionFee, v'orderId, v'trxId) = v;
    build_0 = store_uint(build_0, 1919115613, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_uint(v'tokenId, 64);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'isLong, 1);
    build_0 = build_0.store_int(v'marginDelta, 257);
    build_0 = build_0.store_int(v'sizeDelta, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'triggerPrice, 257);
    build_1 = build_1.store_int(v'triggerAbove, 1);
    build_1 = build_1.store_int(v'tpSize, 257);
    build_1 = build_1.store_int(v'tpPrice, 257);
    var build_2 = begin_cell();
    build_2 = build_2.store_int(v'slSize, 257);
    build_2 = build_2.store_int(v'slPrice, 257);
    build_2 = build_2.store_coins(v'executionFee);
    build_2 = build_2.store_int(v'orderId, 257);
    build_2 = build_2.store_uint(v'trxId, 64);
    build_1 = store_ref(build_1, build_2.end_cell());
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $PerpPositionOrderCreatedEvent$_store_cell((int, int, slice, int, int, int, int, int, int, int, int, int, int, int, int) v) inline {
    return $PerpPositionOrderCreatedEvent$_store(begin_cell(), v).end_cell();
}

((int, int, slice, int, int, int, int, int, int, int, int, int, int, int, int)) $PerpPositionOrderCreatedEvent$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_executionFee_orderId_triggerPrice_triggerAbove_tpSize_tpPrice_slSize_slPrice_trxId(int opType, int tokenId, slice account, int isLong, int marginDelta, int sizeDelta, int executionFee, int orderId, int triggerPrice, int triggerAbove, int tpSize, int tpPrice, int slSize, int slPrice, int trxId) inline {
    return (opType, tokenId, account, isLong, marginDelta, sizeDelta, triggerPrice, triggerAbove, tpSize, tpPrice, slSize, slPrice, executionFee, orderId, trxId);
}

;;
;; Type: PerpPositionOrderCancelledEvent
;; Header: 0x803e6175
;; TLB: perp_position_order_cancelled_event#803e6175 opType:uint8 orderId:uint64 trxId:uint64 = PerpPositionOrderCancelledEvent
;;

builder $PerpPositionOrderCancelledEvent$_store(builder build_0, (int, int, int) v) inline {
    var (v'opType, v'orderId, v'trxId) = v;
    build_0 = store_uint(build_0, 2151571829, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_uint(v'orderId, 64);
    build_0 = build_0.store_uint(v'trxId, 64);
    return build_0;
}

cell $PerpPositionOrderCancelledEvent$_store_cell((int, int, int) v) inline {
    return $PerpPositionOrderCancelledEvent$_store(begin_cell(), v).end_cell();
}

((int, int, int)) $PerpPositionOrderCancelledEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline {
    return (opType, orderId, trxId);
}

;;
;; Type: PerpPositionOrderExecutedEvent
;; Header: 0xa1bb0b3f
;; TLB: perp_position_order_executed_event#a1bb0b3f opType:uint8 orderId:uint64 trxId:uint64 = PerpPositionOrderExecutedEvent
;;

builder $PerpPositionOrderExecutedEvent$_store(builder build_0, (int, int, int) v) inline {
    var (v'opType, v'orderId, v'trxId) = v;
    build_0 = store_uint(build_0, 2713389887, 32);
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_uint(v'orderId, 64);
    build_0 = build_0.store_uint(v'trxId, 64);
    return build_0;
}

cell $PerpPositionOrderExecutedEvent$_store_cell((int, int, int) v) inline {
    return $PerpPositionOrderExecutedEvent$_store(begin_cell(), v).end_cell();
}

((int, int, int)) $PerpPositionOrderExecutedEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline {
    return (opType, orderId, trxId);
}

;;
;; Type: CompensateCreatedEvent
;; Header: 0x17e6cb93
;; TLB: compensate_created_event#17e6cb93 compensateId:uint64 orderType:Maybe int257 orderId:uint64 trxId:uint64 refundReceiver:Maybe address refundAmount:int257 executionFeeReceiver:Maybe address executionFee:coins unlockTime:int257 = CompensateCreatedEvent
;;

builder $CompensateCreatedEvent$_store(builder build_0, (int, int, int, int, slice, int, slice, int, int) v) inline_ref {
    var (v'compensateId, v'orderType, v'orderId, v'trxId, v'refundReceiver, v'refundAmount, v'executionFeeReceiver, v'executionFee, v'unlockTime) = v;
    build_0 = store_uint(build_0, 401001363, 32);
    build_0 = build_0.store_uint(v'compensateId, 64);
    build_0 = ~ null?(v'orderType) ? build_0.store_int(true, 1).store_int(v'orderType, 257) : build_0.store_int(false, 1);
    build_0 = build_0.store_uint(v'orderId, 64);
    build_0 = build_0.store_uint(v'trxId, 64);
    build_0 = __tact_store_address_opt(build_0, v'refundReceiver);
    build_0 = build_0.store_int(v'refundAmount, 257);
    var build_1 = begin_cell();
    build_1 = __tact_store_address_opt(build_1, v'executionFeeReceiver);
    build_1 = build_1.store_coins(v'executionFee);
    build_1 = build_1.store_int(v'unlockTime, 257);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $CompensateCreatedEvent$_store_cell((int, int, int, int, slice, int, slice, int, int) v) inline {
    return $CompensateCreatedEvent$_store(begin_cell(), v).end_cell();
}

((int, int, int, int, slice, int, slice, int, int)) $CompensateCreatedEvent$_constructor_compensateId_orderType_orderId_trxId_refundReceiver_refundAmount_executionFeeReceiver_executionFee_unlockTime(int compensateId, int orderType, int orderId, int trxId, slice refundReceiver, int refundAmount, slice executionFeeReceiver, int executionFee, int unlockTime) inline {
    return (compensateId, orderType, orderId, trxId, refundReceiver, refundAmount, executionFeeReceiver, executionFee, unlockTime);
}

;;
;; Type: CompensateCancelledEvent
;; Header: 0x4bc341d5
;; TLB: compensate_cancelled_event#4bc341d5 compensateId:uint64 trxId:uint64 = CompensateCancelledEvent
;;

builder $CompensateCancelledEvent$_store(builder build_0, (int, int) v) inline {
    var (v'compensateId, v'trxId) = v;
    build_0 = store_uint(build_0, 1271087573, 32);
    build_0 = build_0.store_uint(v'compensateId, 64);
    build_0 = build_0.store_uint(v'trxId, 64);
    return build_0;
}

cell $CompensateCancelledEvent$_store_cell((int, int) v) inline {
    return $CompensateCancelledEvent$_store(begin_cell(), v).end_cell();
}

((int, int)) $CompensateCancelledEvent$_constructor_compensateId_trxId(int compensateId, int trxId) inline {
    return (compensateId, trxId);
}

;;
;; Type: CompensateExecutedEvent
;; Header: 0xdb45e438
;; TLB: compensate_executed_event#db45e438 compensateId:uint64 trxId:uint64 = CompensateExecutedEvent
;;

builder $CompensateExecutedEvent$_store(builder build_0, (int, int) v) inline {
    var (v'compensateId, v'trxId) = v;
    build_0 = store_uint(build_0, 3678790712, 32);
    build_0 = build_0.store_uint(v'compensateId, 64);
    build_0 = build_0.store_uint(v'trxId, 64);
    return build_0;
}

cell $CompensateExecutedEvent$_store_cell((int, int) v) inline {
    return $CompensateExecutedEvent$_store(begin_cell(), v).end_cell();
}

((int, int)) $CompensateExecutedEvent$_constructor_compensateId_trxId(int compensateId, int trxId) inline {
    return (compensateId, trxId);
}

;;
;; Type: ConfigData
;; TLB: _ isExecutor:Maybe bool maxTimeDelayExecutor:int257 minTimeDelayTrader:int257 minExecutionFee:coins gasConsumption:coins minTonsForStorage:coins usdtWallet:address pool:address = ConfigData
;;

(int, int, int, int, int, int, slice, slice) $ConfigData$_to_external(((int, int, int, int, int, int, slice, slice)) v) inline {
    var (v'isExecutor, v'maxTimeDelayExecutor, v'minTimeDelayTrader, v'minExecutionFee, v'gasConsumption, v'minTonsForStorage, v'usdtWallet, v'pool) = v; 
    return (v'isExecutor, v'maxTimeDelayExecutor, v'minTimeDelayTrader, v'minExecutionFee, v'gasConsumption, v'minTonsForStorage, v'usdtWallet, v'pool);
}

((int, int, int, int, int, int, slice, slice)) $ConfigData$_constructor_isExecutor_maxTimeDelayExecutor_minTimeDelayTrader_minExecutionFee_gasConsumption_minTonsForStorage_usdtWallet_pool(int isExecutor, int maxTimeDelayExecutor, int minTimeDelayTrader, int minExecutionFee, int gasConsumption, int minTonsForStorage, slice usdtWallet, slice pool) inline {
    return (isExecutor, maxTimeDelayExecutor, minTimeDelayTrader, minExecutionFee, gasConsumption, minTonsForStorage, usdtWallet, pool);
}

;;
;; Type: WhitelistData
;; TLB: _ enableWhitelist:bool isInWhitelist:bool = WhitelistData
;;

(int, int) $WhitelistData$_to_external(((int, int)) v) inline {
    var (v'enableWhitelist, v'isInWhitelist) = v; 
    return (v'enableWhitelist, v'isInWhitelist);
}

((int, int)) $WhitelistData$_constructor_enableWhitelist_isInWhitelist(int enableWhitelist, int isInWhitelist) inline {
    return (enableWhitelist, isInWhitelist);
}

;;
;; Type: UpdateWhitelistParam
;; TLB: _ account:address enable:bool = UpdateWhitelistParam
;;

(slice, ((slice, int))) $UpdateWhitelistParam$_load(slice sc_0) inline {
    var v'account = sc_0~__tact_load_address();
    var v'enable = sc_0~load_int(1);
    return (sc_0, (v'account, v'enable));
}

tuple $UpdateWhitelistParam$_as_optional((slice, int) v) inline {
    var (v'account, v'enable) = v;
    return __tact_tuple_create_2(v'account, v'enable);
}

tuple $UpdateWhitelistParam$_load_opt(cell cl) inline {
    if (null?(cl)) {
        return null();
    }
    var sc = cl.begin_parse();
    return $UpdateWhitelistParam$_as_optional(sc~$UpdateWhitelistParam$_load());
}

_ $UpdateWhitelistParam$_get_account((slice, int) v) inline {
    var (v'account, v'enable) = v;
    return v'account;
}

_ $UpdateWhitelistParam$_get_enable((slice, int) v) inline {
    var (v'account, v'enable) = v;
    return v'enable;
}

((slice, int)) $UpdateWhitelistParam$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (slice vvv'account, int vvv'enable) = __tact_tuple_destroy_2(v);
    return (vvv'account, vvv'enable);
}

;;
;; Type: LPPositionOrder
;; TLB: _ isIncrease:bool account:address liquidityDelta:int257 executionFee:coins blockTime:int257 isPending:bool executionFeeReceiver:address lastOperator:Maybe address = LPPositionOrder
;;

builder $LPPositionOrder$_store(builder build_0, (int, slice, int, int, int, int, slice, slice) v) inline_ref {
    var (v'isIncrease, v'account, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator) = v;
    build_0 = build_0.store_int(v'isIncrease, 1);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'liquidityDelta, 257);
    build_0 = build_0.store_coins(v'executionFee);
    build_0 = build_0.store_int(v'blockTime, 257);
    build_0 = build_0.store_int(v'isPending, 1);
    var build_1 = begin_cell();
    build_1 = __tact_store_address(build_1, v'executionFeeReceiver);
    build_1 = __tact_store_address_opt(build_1, v'lastOperator);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $LPPositionOrder$_store_cell((int, slice, int, int, int, int, slice, slice) v) inline {
    return $LPPositionOrder$_store(begin_cell(), v).end_cell();
}

((int, slice, int, int, int, int, slice, slice)) $LPPositionOrder$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'isIncrease, slice vvv'account, int vvv'liquidityDelta, int vvv'executionFee, int vvv'blockTime, int vvv'isPending, slice vvv'executionFeeReceiver, slice vvv'lastOperator) = __tact_tuple_destroy_8(v);
    return (vvv'isIncrease, vvv'account, vvv'liquidityDelta, vvv'executionFee, vvv'blockTime, vvv'isPending, vvv'executionFeeReceiver, vvv'lastOperator);
}

cell $LPPositionOrder$_store_opt(tuple v) inline {
    if (null?(v)) {
        return null();
    }
    return $LPPositionOrder$_store_cell($LPPositionOrder$_not_null(v));
}

(slice, ((int, slice, int, int, int, int, slice, slice))) $LPPositionOrder$_load(slice sc_0) inline_ref {
    var v'isIncrease = sc_0~load_int(1);
    var v'account = sc_0~__tact_load_address();
    var v'liquidityDelta = sc_0~load_int(257);
    var v'executionFee = sc_0~load_coins();
    var v'blockTime = sc_0~load_int(257);
    var v'isPending = sc_0~load_int(1);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'executionFeeReceiver = sc_1~__tact_load_address();
    var v'lastOperator = sc_1~__tact_load_address_opt();
    return (sc_0, (v'isIncrease, v'account, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator));
}

tuple $LPPositionOrder$_as_optional((int, slice, int, int, int, int, slice, slice) v) inline {
    var (v'isIncrease, v'account, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator) = v;
    return __tact_tuple_create_8(v'isIncrease, v'account, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator);
}

tuple $LPPositionOrder$_load_opt(cell cl) inline {
    if (null?(cl)) {
        return null();
    }
    var sc = cl.begin_parse();
    return $LPPositionOrder$_as_optional(sc~$LPPositionOrder$_load());
}

_ $LPPositionOrder$_get_isPending((int, slice, int, int, int, int, slice, slice) v) inline {
    var (v'isIncrease, v'account, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator) = v;
    return v'isPending;
}

tuple $LPPositionOrder$_to_tuple(((int, slice, int, int, int, int, slice, slice)) v) inline {
    var (v'isIncrease, v'account, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator) = v;
    return __tact_tuple_create_8(v'isIncrease, v'account, v'liquidityDelta, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator);
}

tuple $LPPositionOrder$_to_opt_tuple(tuple v) inline {
    if (null?(v)) { return null(); } 
    return $LPPositionOrder$_to_tuple($LPPositionOrder$_not_null(v)); 
}

tuple $LPPositionOrder$_to_opt_external(tuple v) inline {
    var loaded = $LPPositionOrder$_to_opt_tuple(v);
    if (null?(loaded)) {
        return null();
    } else {
        return (loaded);
    }
}

((int, slice, int, int, int, int, slice, slice)) $LPPositionOrder$_constructor_isIncrease_account_liquidityDelta_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator(int isIncrease, slice account, int liquidityDelta, int executionFee, int blockTime, int isPending, slice executionFeeReceiver, slice lastOperator) inline {
    return (isIncrease, account, liquidityDelta, executionFee, blockTime, isPending, executionFeeReceiver, lastOperator);
}

;;
;; Type: PerpPositionOrder
;; TLB: _ opType:uint8 tokenId:uint64 account:address isLong:bool marginDelta:int257 sizeDelta:int257 triggerPrice:int257 triggerAbove:bool executionFee:coins blockTime:int257 isPending:bool executionFeeReceiver:address lastOperator:Maybe address = PerpPositionOrder
;;

builder $PerpPositionOrder$_store(builder build_0, (int, int, slice, int, int, int, int, int, int, int, int, slice, slice) v) inline_ref {
    var (v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator) = v;
    build_0 = build_0.store_uint(v'opType, 8);
    build_0 = build_0.store_uint(v'tokenId, 64);
    build_0 = __tact_store_address(build_0, v'account);
    build_0 = build_0.store_int(v'isLong, 1);
    build_0 = build_0.store_int(v'marginDelta, 257);
    build_0 = build_0.store_int(v'sizeDelta, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'triggerPrice, 257);
    build_1 = build_1.store_int(v'triggerAbove, 1);
    build_1 = build_1.store_coins(v'executionFee);
    build_1 = build_1.store_int(v'blockTime, 257);
    build_1 = build_1.store_int(v'isPending, 1);
    build_1 = __tact_store_address(build_1, v'executionFeeReceiver);
    var build_2 = begin_cell();
    build_2 = __tact_store_address_opt(build_2, v'lastOperator);
    build_1 = store_ref(build_1, build_2.end_cell());
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $PerpPositionOrder$_store_cell((int, int, slice, int, int, int, int, int, int, int, int, slice, slice) v) inline {
    return $PerpPositionOrder$_store(begin_cell(), v).end_cell();
}

((int, int, slice, int, int, int, int, int, int, int, int, slice, slice)) $PerpPositionOrder$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'opType, int vvv'tokenId, slice vvv'account, int vvv'isLong, int vvv'marginDelta, int vvv'sizeDelta, int vvv'triggerPrice, int vvv'triggerAbove, int vvv'executionFee, int vvv'blockTime, int vvv'isPending, slice vvv'executionFeeReceiver, slice vvv'lastOperator) = __tact_tuple_destroy_13(v);
    return (vvv'opType, vvv'tokenId, vvv'account, vvv'isLong, vvv'marginDelta, vvv'sizeDelta, vvv'triggerPrice, vvv'triggerAbove, vvv'executionFee, vvv'blockTime, vvv'isPending, vvv'executionFeeReceiver, vvv'lastOperator);
}

cell $PerpPositionOrder$_store_opt(tuple v) inline {
    if (null?(v)) {
        return null();
    }
    return $PerpPositionOrder$_store_cell($PerpPositionOrder$_not_null(v));
}

(slice, ((int, int, slice, int, int, int, int, int, int, int, int, slice, slice))) $PerpPositionOrder$_load(slice sc_0) inline_ref {
    var v'opType = sc_0~load_uint(8);
    var v'tokenId = sc_0~load_uint(64);
    var v'account = sc_0~__tact_load_address();
    var v'isLong = sc_0~load_int(1);
    var v'marginDelta = sc_0~load_int(257);
    var v'sizeDelta = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'triggerPrice = sc_1~load_int(257);
    var v'triggerAbove = sc_1~load_int(1);
    var v'executionFee = sc_1~load_coins();
    var v'blockTime = sc_1~load_int(257);
    var v'isPending = sc_1~load_int(1);
    var v'executionFeeReceiver = sc_1~__tact_load_address();
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'lastOperator = sc_2~__tact_load_address_opt();
    return (sc_0, (v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator));
}

tuple $PerpPositionOrder$_as_optional((int, int, slice, int, int, int, int, int, int, int, int, slice, slice) v) inline {
    var (v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator) = v;
    return __tact_tuple_create_13(v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator);
}

tuple $PerpPositionOrder$_load_opt(cell cl) inline {
    if (null?(cl)) {
        return null();
    }
    var sc = cl.begin_parse();
    return $PerpPositionOrder$_as_optional(sc~$PerpPositionOrder$_load());
}

_ $PerpPositionOrder$_get_isPending((int, int, slice, int, int, int, int, int, int, int, int, slice, slice) v) inline {
    var (v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator) = v;
    return v'isPending;
}

tuple $PerpPositionOrder$_to_tuple(((int, int, slice, int, int, int, int, int, int, int, int, slice, slice)) v) inline {
    var (v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator) = v;
    return __tact_tuple_create_13(v'opType, v'tokenId, v'account, v'isLong, v'marginDelta, v'sizeDelta, v'triggerPrice, v'triggerAbove, v'executionFee, v'blockTime, v'isPending, v'executionFeeReceiver, v'lastOperator);
}

tuple $PerpPositionOrder$_to_opt_tuple(tuple v) inline {
    if (null?(v)) { return null(); } 
    return $PerpPositionOrder$_to_tuple($PerpPositionOrder$_not_null(v)); 
}

tuple $PerpPositionOrder$_to_opt_external(tuple v) inline {
    var loaded = $PerpPositionOrder$_to_opt_tuple(v);
    if (null?(loaded)) {
        return null();
    } else {
        return (loaded);
    }
}

((int, int, slice, int, int, int, int, int, int, int, int, slice, slice)) $PerpPositionOrder$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator(int opType, int tokenId, slice account, int isLong, int marginDelta, int sizeDelta, int triggerPrice, int triggerAbove, int executionFee, int blockTime, int isPending, slice executionFeeReceiver, slice lastOperator) inline {
    return (opType, tokenId, account, isLong, marginDelta, sizeDelta, triggerPrice, triggerAbove, executionFee, blockTime, isPending, executionFeeReceiver, lastOperator);
}

;;
;; Type: PerpPositionOrderEx
;; TLB: _ tpSize:int257 tpPrice:int257 slSize:int257 slPrice:int257 executionFee:int257 = PerpPositionOrderEx
;;

builder $PerpPositionOrderEx$_store(builder build_0, (int, int, int, int, int) v) inline {
    var (v'tpSize, v'tpPrice, v'slSize, v'slPrice, v'executionFee) = v;
    build_0 = build_0.store_int(v'tpSize, 257);
    build_0 = build_0.store_int(v'tpPrice, 257);
    build_0 = build_0.store_int(v'slSize, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'slPrice, 257);
    build_1 = build_1.store_int(v'executionFee, 257);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $PerpPositionOrderEx$_store_cell((int, int, int, int, int) v) inline {
    return $PerpPositionOrderEx$_store(begin_cell(), v).end_cell();
}

(slice, ((int, int, int, int, int))) $PerpPositionOrderEx$_load(slice sc_0) inline {
    var v'tpSize = sc_0~load_int(257);
    var v'tpPrice = sc_0~load_int(257);
    var v'slSize = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'slPrice = sc_1~load_int(257);
    var v'executionFee = sc_1~load_int(257);
    return (sc_0, (v'tpSize, v'tpPrice, v'slSize, v'slPrice, v'executionFee));
}

tuple $PerpPositionOrderEx$_as_optional((int, int, int, int, int) v) inline {
    var (v'tpSize, v'tpPrice, v'slSize, v'slPrice, v'executionFee) = v;
    return __tact_tuple_create_5(v'tpSize, v'tpPrice, v'slSize, v'slPrice, v'executionFee);
}

tuple $PerpPositionOrderEx$_load_opt(cell cl) inline {
    if (null?(cl)) {
        return null();
    }
    var sc = cl.begin_parse();
    return $PerpPositionOrderEx$_as_optional(sc~$PerpPositionOrderEx$_load());
}

((int, int, int, int, int)) $PerpPositionOrderEx$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'tpSize, int vvv'tpPrice, int vvv'slSize, int vvv'slPrice, int vvv'executionFee) = __tact_tuple_destroy_5(v);
    return (vvv'tpSize, vvv'tpPrice, vvv'slSize, vvv'slPrice, vvv'executionFee);
}

((int, int, int, int, int)) $PerpPositionOrderEx$_constructor_tpSize_tpPrice_slSize_slPrice_executionFee(int tpSize, int tpPrice, int slSize, int slPrice, int executionFee) inline {
    return (tpSize, tpPrice, slSize, slPrice, executionFee);
}

;;
;; Type: Compensate
;; TLB: _ orderType:Maybe int257 orderId:uint64 trxId:uint64 refundReceiver:Maybe address refundAmount:int257 executionFeeReceiver:Maybe address executionFee:coins unlockTime:int257 = Compensate
;;

builder $Compensate$_store(builder build_0, (int, int, int, slice, int, slice, int, int) v) inline_ref {
    var (v'orderType, v'orderId, v'trxId, v'refundReceiver, v'refundAmount, v'executionFeeReceiver, v'executionFee, v'unlockTime) = v;
    build_0 = ~ null?(v'orderType) ? build_0.store_int(true, 1).store_int(v'orderType, 257) : build_0.store_int(false, 1);
    build_0 = build_0.store_uint(v'orderId, 64);
    build_0 = build_0.store_uint(v'trxId, 64);
    build_0 = __tact_store_address_opt(build_0, v'refundReceiver);
    build_0 = build_0.store_int(v'refundAmount, 257);
    var build_1 = begin_cell();
    build_1 = __tact_store_address_opt(build_1, v'executionFeeReceiver);
    build_1 = build_1.store_coins(v'executionFee);
    build_1 = build_1.store_int(v'unlockTime, 257);
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

cell $Compensate$_store_cell((int, int, int, slice, int, slice, int, int) v) inline {
    return $Compensate$_store(begin_cell(), v).end_cell();
}

((int, int, int, slice, int, slice, int, int)) $Compensate$_not_null(tuple v) inline {
    throw_if(128, null?(v));
    var (int vvv'orderType, int vvv'orderId, int vvv'trxId, slice vvv'refundReceiver, int vvv'refundAmount, slice vvv'executionFeeReceiver, int vvv'executionFee, int vvv'unlockTime) = __tact_tuple_destroy_8(v);
    return (vvv'orderType, vvv'orderId, vvv'trxId, vvv'refundReceiver, vvv'refundAmount, vvv'executionFeeReceiver, vvv'executionFee, vvv'unlockTime);
}

cell $Compensate$_store_opt(tuple v) inline {
    if (null?(v)) {
        return null();
    }
    return $Compensate$_store_cell($Compensate$_not_null(v));
}

(slice, ((int, int, int, slice, int, slice, int, int))) $Compensate$_load(slice sc_0) inline_ref {
    var v'orderType = sc_0~load_int(1) ? sc_0~load_int(257) : null();
    var v'orderId = sc_0~load_uint(64);
    var v'trxId = sc_0~load_uint(64);
    var v'refundReceiver = sc_0~__tact_load_address_opt();
    var v'refundAmount = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'executionFeeReceiver = sc_1~__tact_load_address_opt();
    var v'executionFee = sc_1~load_coins();
    var v'unlockTime = sc_1~load_int(257);
    return (sc_0, (v'orderType, v'orderId, v'trxId, v'refundReceiver, v'refundAmount, v'executionFeeReceiver, v'executionFee, v'unlockTime));
}

tuple $Compensate$_as_optional((int, int, int, slice, int, slice, int, int) v) inline {
    var (v'orderType, v'orderId, v'trxId, v'refundReceiver, v'refundAmount, v'executionFeeReceiver, v'executionFee, v'unlockTime) = v;
    return __tact_tuple_create_8(v'orderType, v'orderId, v'trxId, v'refundReceiver, v'refundAmount, v'executionFeeReceiver, v'executionFee, v'unlockTime);
}

tuple $Compensate$_load_opt(cell cl) inline {
    if (null?(cl)) {
        return null();
    }
    var sc = cl.begin_parse();
    return $Compensate$_as_optional(sc~$Compensate$_load());
}

((int, int, int, slice, int, slice, int, int)) $Compensate$_constructor_orderType_orderId_trxId_refundReceiver_refundAmount_executionFeeReceiver_executionFee_unlockTime(int orderType, int orderId, int trxId, slice refundReceiver, int refundAmount, slice executionFeeReceiver, int executionFee, int unlockTime) inline {
    return (orderType, orderId, trxId, refundReceiver, refundAmount, executionFeeReceiver, executionFee, unlockTime);
}

;;
;; Type: OrderBook
;;

builder $OrderBook$_store(builder build_0, (int, int, int, int, int, slice, slice, slice, int, cell, int, cell, cell, int, cell, cell, int, cell, int) v) inline {
    var (v'maxTimeDelayExecutor, v'minTimeDelayTrader, v'minExecutionFee, v'gasConsumption, v'minTonsForStorage, v'usdtWallet, v'pool, v'owner, v'stopped, v'executors, v'enableWhitelist, v'whitelist, v'lpPositionOrders, v'lpPositionOrderIndexNext, v'perpPositionOrders, v'perpPositionOrderExs, v'perpPositionOrderIndexNext, v'compensates, v'compensateIndexNext) = v;
    build_0 = build_0.store_int(v'maxTimeDelayExecutor, 257);
    build_0 = build_0.store_int(v'minTimeDelayTrader, 257);
    build_0 = build_0.store_int(v'minExecutionFee, 257);
    var build_1 = begin_cell();
    build_1 = build_1.store_int(v'gasConsumption, 257);
    build_1 = build_1.store_int(v'minTonsForStorage, 257);
    build_1 = __tact_store_address(build_1, v'usdtWallet);
    var build_2 = begin_cell();
    build_2 = __tact_store_address(build_2, v'pool);
    build_2 = __tact_store_address(build_2, v'owner);
    build_2 = build_2.store_int(v'stopped, 1);
    build_2 = build_2.store_dict(v'executors);
    build_2 = build_2.store_int(v'enableWhitelist, 1);
    build_2 = build_2.store_dict(v'whitelist);
    build_2 = build_2.store_dict(v'lpPositionOrders);
    build_2 = build_2.store_uint(v'lpPositionOrderIndexNext, 64);
    var build_3 = begin_cell();
    build_3 = build_3.store_dict(v'perpPositionOrders);
    build_3 = build_3.store_dict(v'perpPositionOrderExs);
    build_3 = build_3.store_uint(v'perpPositionOrderIndexNext, 64);
    build_3 = build_3.store_dict(v'compensates);
    build_3 = build_3.store_uint(v'compensateIndexNext, 64);
    build_2 = store_ref(build_2, build_3.end_cell());
    build_1 = store_ref(build_1, build_2.end_cell());
    build_0 = store_ref(build_0, build_1.end_cell());
    return build_0;
}

(slice, ((int, int, int, int, int, slice, slice, slice, int, cell, int, cell, cell, int, cell, cell, int, cell, int))) $OrderBook$_load(slice sc_0) inline {
    var v'maxTimeDelayExecutor = sc_0~load_int(257);
    var v'minTimeDelayTrader = sc_0~load_int(257);
    var v'minExecutionFee = sc_0~load_int(257);
    slice sc_1 = sc_0~load_ref().begin_parse();
    var v'gasConsumption = sc_1~load_int(257);
    var v'minTonsForStorage = sc_1~load_int(257);
    var v'usdtWallet = sc_1~__tact_load_address();
    slice sc_2 = sc_1~load_ref().begin_parse();
    var v'pool = sc_2~__tact_load_address();
    var v'owner = sc_2~__tact_load_address();
    var v'stopped = sc_2~load_int(1);
    var v'executors = sc_2~load_dict();
    var v'enableWhitelist = sc_2~load_int(1);
    var v'whitelist = sc_2~load_dict();
    var v'lpPositionOrders = sc_2~load_dict();
    var v'lpPositionOrderIndexNext = sc_2~load_uint(64);
    slice sc_3 = sc_2~load_ref().begin_parse();
    var v'perpPositionOrders = sc_3~load_dict();
    var v'perpPositionOrderExs = sc_3~load_dict();
    var v'perpPositionOrderIndexNext = sc_3~load_uint(64);
    var v'compensates = sc_3~load_dict();
    var v'compensateIndexNext = sc_3~load_uint(64);
    return (sc_0, (v'maxTimeDelayExecutor, v'minTimeDelayTrader, v'minExecutionFee, v'gasConsumption, v'minTonsForStorage, v'usdtWallet, v'pool, v'owner, v'stopped, v'executors, v'enableWhitelist, v'whitelist, v'lpPositionOrders, v'lpPositionOrderIndexNext, v'perpPositionOrders, v'perpPositionOrderExs, v'perpPositionOrderIndexNext, v'compensates, v'compensateIndexNext));
}

(slice, ((int))) $OrderBook$init$_load(slice sc_0) inline {
    var v'deployId = sc_0~load_int(257);
    return (sc_0, (v'deployId));
}

(int, int, int, int, int, slice, slice, slice, int, cell, int, cell, cell, int, cell, cell, int, cell, int) $OrderBook$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$OrderBook$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (int deployId) = $sc~$OrderBook$init$_load();
        $sc.end_parse();
        return $OrderBook$_contract_init(deployId);
    }
}

() $OrderBook$_contract_store((int, int, int, int, int, slice, slice, slice, int, cell, int, cell, cell, int, cell, cell, int, cell, int) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $OrderBook$_store(b, v);
    set_data(b.end_cell());
}