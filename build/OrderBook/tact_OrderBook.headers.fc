;;
;; Header files for OrderBook
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_cell
(cell, ()) __tact_dict_set_int_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_get_int_cell
cell __tact_dict_get_int_cell(cell d, int kl, int k) inline;

;; __tact_dict_set_slice_int
(cell, ()) __tact_dict_set_slice_int(cell d, int kl, slice k, int v, int vl) inline;

;; __tact_dict_get_slice_int
int __tact_dict_get_slice_int(cell d, int kl, slice k, int vl) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $TokenNotification$_load
(slice, ((int, int, slice, slice))) $TokenNotification$_load(slice sc_0) inline;

;; $TokenExcesses$_load
(slice, ((int))) $TokenExcesses$_load(slice sc_0) inline;

;; $UpdateConfig$_load
(slice, ((slice, int, int, int, int, int, int, slice, slice))) $UpdateConfig$_load(slice sc_0) inline_ref;

;; $CreateDecreaseRBFPositionOrder$_load
(slice, ((int, int))) $CreateDecreaseRBFPositionOrder$_load(slice sc_0) inline;

;; $CancelRBFPositionOrder$_load
(slice, ((int, int, slice))) $CancelRBFPositionOrder$_load(slice sc_0) inline;

;; $ExecuteRBFPositionOrder$_load
(slice, ((int, int, slice, int, cell))) $ExecuteRBFPositionOrder$_load(slice sc_0) inline;

;; $UpdateRBFPosition$_store
builder $UpdateRBFPosition$_store(builder build_0, (int, int, slice, int, int, int, cell) v) inline_ref;

;; $UpdateRBFPosition$_store_cell
cell $UpdateRBFPosition$_store_cell((int, int, slice, int, int, int, cell) v) inline;

;; $UpdateRBFPosition$_load_bounced
(slice, ((int, int))) $UpdateRBFPosition$_load_bounced(slice sc_0) inline;

;; $UpdateRBFPositionSuccess$_load
(slice, ((int, int, int))) $UpdateRBFPositionSuccess$_load(slice sc_0) inline;

;; $CreateDecreaseLPPositionOrder$_load
(slice, ((int, int, int))) $CreateDecreaseLPPositionOrder$_load(slice sc_0) inline;

;; $CancelLPPositionOrder$_load
(slice, ((slice, int, int))) $CancelLPPositionOrder$_load(slice sc_0) inline;

;; $ExecuteLPPositionOrder$_load
(slice, ((slice, int, int, int, cell))) $ExecuteLPPositionOrder$_load(slice sc_0) inline;

;; $LiquidateLPPositionOrder$_load
(slice, ((slice, slice, int, int, cell))) $LiquidateLPPositionOrder$_load(slice sc_0) inline;

;; $UpdateLPPosition$_store
builder $UpdateLPPosition$_store(builder build_0, (int, int, slice, int, int, int, int, cell) v) inline_ref;

;; $UpdateLPPosition$_store_cell
cell $UpdateLPPosition$_store_cell((int, int, slice, int, int, int, int, cell) v) inline;

;; $UpdateLPPosition$_load_bounced
(slice, ((int, int))) $UpdateLPPosition$_load_bounced(slice sc_0) inline;

;; $UpdateLPPositionSuccess$_load
(slice, ((int, int, int))) $UpdateLPPositionSuccess$_load(slice sc_0) inline;

;; $CreateDecreasePerpPositionOrder$_load
(slice, ((int, int, int, int, int, int, int))) $CreateDecreasePerpPositionOrder$_load(slice sc_0) inline_ref;

;; $CancelPerpPositionOrder$_load
(slice, ((slice, int, int))) $CancelPerpPositionOrder$_load(slice sc_0) inline;

;; $ExecutePerpPositionOrder$_load
(slice, ((slice, int, int, int, cell))) $ExecutePerpPositionOrder$_load(slice sc_0) inline;

;; $LiquidatePerpPositionOrder$_load
(slice, ((slice, int, slice, int, int, int, cell))) $LiquidatePerpPositionOrder$_load(slice sc_0) inline_ref;

;; $UpdatePerpPosition$_store
builder $UpdatePerpPosition$_store(builder build_0, (int, int, int, slice, int, int, int, int, int, int, int, cell) v) inline_ref;

;; $UpdatePerpPosition$_store_cell
cell $UpdatePerpPosition$_store_cell((int, int, int, slice, int, int, int, int, int, int, int, cell) v) inline;

;; $UpdatePerpPosition$_load_bounced
(slice, ((int, int))) $UpdatePerpPosition$_load_bounced(slice sc_0) inline;

;; $UpdatePerpPositionSuccess$_load
(slice, ((int, int, int))) $UpdatePerpPositionSuccess$_load(slice sc_0) inline;

;; $RBFPositionOrderCreatedEvent$_store
builder $RBFPositionOrderCreatedEvent$_store(builder build_0, (int, slice, int, int, int) v) inline;

;; $RBFPositionOrderCreatedEvent$_store_cell
cell $RBFPositionOrderCreatedEvent$_store_cell((int, slice, int, int, int) v) inline;

;; $RBFPositionOrderCancelledEvent$_store
builder $RBFPositionOrderCancelledEvent$_store(builder build_0, (int, int, int) v) inline;

;; $RBFPositionOrderCancelledEvent$_store_cell
cell $RBFPositionOrderCancelledEvent$_store_cell((int, int, int) v) inline;

;; $RBFPositionOrderExecutedEvent$_store
builder $RBFPositionOrderExecutedEvent$_store(builder build_0, (int, int, int) v) inline;

;; $RBFPositionOrderExecutedEvent$_store_cell
cell $RBFPositionOrderExecutedEvent$_store_cell((int, int, int) v) inline;

;; $LPPositionOrderCreatedEvent$_store
builder $LPPositionOrderCreatedEvent$_store(builder build_0, (int, slice, int, int, int, int) v) inline_ref;

;; $LPPositionOrderCreatedEvent$_store_cell
cell $LPPositionOrderCreatedEvent$_store_cell((int, slice, int, int, int, int) v) inline;

;; $LPPositionOrderCancelledEvent$_store
builder $LPPositionOrderCancelledEvent$_store(builder build_0, (int, int, int) v) inline;

;; $LPPositionOrderCancelledEvent$_store_cell
cell $LPPositionOrderCancelledEvent$_store_cell((int, int, int) v) inline;

;; $LPPositionOrderExecutedEvent$_store
builder $LPPositionOrderExecutedEvent$_store(builder build_0, (int, int, int) v) inline;

;; $LPPositionOrderExecutedEvent$_store_cell
cell $LPPositionOrderExecutedEvent$_store_cell((int, int, int) v) inline;

;; $PerpPositionOrderCreatedEvent$_store
builder $PerpPositionOrderCreatedEvent$_store(builder build_0, (int, int, slice, int, int, int, int, int, int, int, int, int, int, int) v) inline_ref;

;; $PerpPositionOrderCreatedEvent$_store_cell
cell $PerpPositionOrderCreatedEvent$_store_cell((int, int, slice, int, int, int, int, int, int, int, int, int, int, int) v) inline;

;; $PerpPositionOrderCancelledEvent$_store
builder $PerpPositionOrderCancelledEvent$_store(builder build_0, (int, int, int) v) inline;

;; $PerpPositionOrderCancelledEvent$_store_cell
cell $PerpPositionOrderCancelledEvent$_store_cell((int, int, int) v) inline;

;; $PerpPositionOrderExecutedEvent$_store
builder $PerpPositionOrderExecutedEvent$_store(builder build_0, (int, int, int) v) inline;

;; $PerpPositionOrderExecutedEvent$_store_cell
cell $PerpPositionOrderExecutedEvent$_store_cell((int, int, int) v) inline;

;; $JettonCallback$_store
builder $JettonCallback$_store(builder build_0, (int, int, int, slice, int) v) inline;

;; $JettonCallback$_store_cell
cell $JettonCallback$_store_cell((int, int, int, slice, int) v) inline;

;; $JettonCallback$_not_null
((int, int, int, slice, int)) $JettonCallback$_not_null(tuple v) inline;

;; $JettonCallback$_store_opt
cell $JettonCallback$_store_opt(tuple v) inline;

;; $JettonCallback$_load
(slice, ((int, int, int, slice, int))) $JettonCallback$_load(slice sc_0) inline;

;; $JettonCallback$_as_optional
tuple $JettonCallback$_as_optional((int, int, int, slice, int) v) inline;

;; $JettonCallback$_load_opt
tuple $JettonCallback$_load_opt(cell cl) inline;

;; $RBFPositionOrder$_store
builder $RBFPositionOrder$_store(builder build_0, (int, slice, int, int, int, int, int, slice, slice) v) inline_ref;

;; $RBFPositionOrder$_store_cell
cell $RBFPositionOrder$_store_cell((int, slice, int, int, int, int, int, slice, slice) v) inline;

;; $RBFPositionOrder$_not_null
((int, slice, int, int, int, int, int, slice, slice)) $RBFPositionOrder$_not_null(tuple v) inline;

;; $RBFPositionOrder$_store_opt
cell $RBFPositionOrder$_store_opt(tuple v) inline;

;; $RBFPositionOrder$_load
(slice, ((int, slice, int, int, int, int, int, slice, slice))) $RBFPositionOrder$_load(slice sc_0) inline_ref;

;; $RBFPositionOrder$_as_optional
tuple $RBFPositionOrder$_as_optional((int, slice, int, int, int, int, int, slice, slice) v) inline;

;; $RBFPositionOrder$_load_opt
tuple $RBFPositionOrder$_load_opt(cell cl) inline;

;; $LPPositionOrder$_store
builder $LPPositionOrder$_store(builder build_0, (int, slice, int, int, int, int, int, int, slice, slice) v) inline_ref;

;; $LPPositionOrder$_store_cell
cell $LPPositionOrder$_store_cell((int, slice, int, int, int, int, int, int, slice, slice) v) inline;

;; $LPPositionOrder$_not_null
((int, slice, int, int, int, int, int, int, slice, slice)) $LPPositionOrder$_not_null(tuple v) inline;

;; $LPPositionOrder$_store_opt
cell $LPPositionOrder$_store_opt(tuple v) inline;

;; $LPPositionOrder$_load
(slice, ((int, slice, int, int, int, int, int, int, slice, slice))) $LPPositionOrder$_load(slice sc_0) inline_ref;

;; $LPPositionOrder$_as_optional
tuple $LPPositionOrder$_as_optional((int, slice, int, int, int, int, int, int, slice, slice) v) inline;

;; $LPPositionOrder$_load_opt
tuple $LPPositionOrder$_load_opt(cell cl) inline;

;; $PerpPositionOrder$_store
builder $PerpPositionOrder$_store(builder build_0, (int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice) v) inline_ref;

;; $PerpPositionOrder$_store_cell
cell $PerpPositionOrder$_store_cell((int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice) v) inline;

;; $PerpPositionOrder$_not_null
((int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice)) $PerpPositionOrder$_not_null(tuple v) inline;

;; $PerpPositionOrder$_store_opt
cell $PerpPositionOrder$_store_opt(tuple v) inline;

;; $PerpPositionOrder$_load
(slice, ((int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice))) $PerpPositionOrder$_load(slice sc_0) inline_ref;

;; $PerpPositionOrder$_as_optional
tuple $PerpPositionOrder$_as_optional((int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice) v) inline;

;; $PerpPositionOrder$_load_opt
tuple $PerpPositionOrder$_load_opt(cell cl) inline;

;; $PerpPositionOrderEx$_store
builder $PerpPositionOrderEx$_store(builder build_0, (int, int, int, int) v) inline;

;; $PerpPositionOrderEx$_store_cell
cell $PerpPositionOrderEx$_store_cell((int, int, int, int) v) inline;

;; $PerpPositionOrderEx$_not_null
((int, int, int, int)) $PerpPositionOrderEx$_not_null(tuple v) inline;

;; $PerpPositionOrderEx$_store_opt
cell $PerpPositionOrderEx$_store_opt(tuple v) inline;

;; $PerpPositionOrderEx$_load
(slice, ((int, int, int, int))) $PerpPositionOrderEx$_load(slice sc_0) inline;

;; $PerpPositionOrderEx$_as_optional
tuple $PerpPositionOrderEx$_as_optional((int, int, int, int) v) inline;

;; $PerpPositionOrderEx$_load_opt
tuple $PerpPositionOrderEx$_load_opt(cell cl) inline;

;; $OrderBook$_store
builder $OrderBook$_store(builder build_0, (int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) v) inline;

;; $OrderBook$_load
(slice, ((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int))) $OrderBook$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $ConfigData$_to_external
(int, int, int, int, int, int, slice, slice) $ConfigData$_to_external(((int, int, int, int, int, int, slice, slice)) v) inline;

;; $RBFPositionOrder$_to_tuple
tuple $RBFPositionOrder$_to_tuple(((int, slice, int, int, int, int, int, slice, slice)) v) inline;

;; $RBFPositionOrder$_to_opt_tuple
tuple $RBFPositionOrder$_to_opt_tuple(tuple v) inline;

;; $RBFPositionOrder$_to_opt_external
tuple $RBFPositionOrder$_to_opt_external(tuple v) inline;

;; $LPPositionOrder$_to_tuple
tuple $LPPositionOrder$_to_tuple(((int, slice, int, int, int, int, int, int, slice, slice)) v) inline;

;; $LPPositionOrder$_to_opt_tuple
tuple $LPPositionOrder$_to_opt_tuple(tuple v) inline;

;; $LPPositionOrder$_to_opt_external
tuple $LPPositionOrder$_to_opt_external(tuple v) inline;

;; $PerpPositionOrder$_to_tuple
tuple $PerpPositionOrder$_to_tuple(((int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice)) v) inline;

;; $PerpPositionOrder$_to_opt_tuple
tuple $PerpPositionOrder$_to_opt_tuple(tuple v) inline;

;; $PerpPositionOrder$_to_opt_external
tuple $PerpPositionOrder$_to_opt_external(tuple v) inline;

;; $OrderBook$init$_load
(slice, ((int))) $OrderBook$init$_load(slice sc_0) inline;

;; $OrderBook$_contract_init
(int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $OrderBook$_contract_init(int $deployId) impure inline_ref;

;; $OrderBook$_contract_load
(int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $OrderBook$_contract_load() impure inline_ref;

;; $OrderBook$_contract_store
() $OrderBook$_contract_store((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_emit
() $global_emit(cell $body) impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $Context$_fun_readForwardFee
int $Context$_fun_readForwardFee((int, slice, int, slice) $self) impure inline_ref;

;; $ConfigData$_constructor_isExecutor_maxTimeDelayExecutor_minTimeDelayTrader_minExecutionFee_gasConsumption_minTonsForStorage_usdtWallet_pool
((int, int, int, int, int, int, slice, slice)) $ConfigData$_constructor_isExecutor_maxTimeDelayExecutor_minTimeDelayTrader_minExecutionFee_gasConsumption_minTonsForStorage_usdtWallet_pool(int isExecutor, int maxTimeDelayExecutor, int minTimeDelayTrader, int minExecutionFee, int gasConsumption, int minTonsForStorage, slice usdtWallet, slice pool) inline;

;; $OrderBook$_fun_configData
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), (int, int, int, int, int, int, slice, slice)) $OrderBook$_fun_configData((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, slice $executor) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $OrderBook$_fun_createJettonTransferBody
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), cell) $OrderBook$_fun_createJettonTransferBody((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $queryId, int $jettonAmount, slice $to, slice $responseDestination) impure inline_ref;

;; $OrderBook$_fun_refundJetton
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), ()) $OrderBook$_fun_refundJetton((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $queryId, int $amount, slice $to, slice $response) impure inline_ref;

;; $SendParameters$_constructor_to_bounce_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value_mode(slice to, int bounce, int value, int mode) inline;

;; $OrderBook$_fun_refundExecessTon
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), ()) $OrderBook$_fun_refundExecessTon((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, slice $to, int $executionFee) impure inline_ref;

;; $OrderBook$_fun_getPoolGas
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), int) $OrderBook$_fun_getPoolGas((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self) impure inline_ref;

;; $RBFPositionOrder$_constructor_isIncrease_account_liquidityDelta_executionFee_blockTime_isPending_callbackId_executionFeeReceiver_lastOperator
((int, slice, int, int, int, int, int, slice, slice)) $RBFPositionOrder$_constructor_isIncrease_account_liquidityDelta_executionFee_blockTime_isPending_callbackId_executionFeeReceiver_lastOperator(int isIncrease, slice account, int liquidityDelta, int executionFee, int blockTime, int isPending, int callbackId, slice executionFeeReceiver, slice lastOperator) inline;

;; $RBFPositionOrderCreatedEvent$_constructor_isIncrease_account_liquidityDelta_executionFee_orderId
((int, slice, int, int, int)) $RBFPositionOrderCreatedEvent$_constructor_isIncrease_account_liquidityDelta_executionFee_orderId(int isIncrease, slice account, int liquidityDelta, int executionFee, int orderId) inline;

;; $OrderBook$_fun_handleCreateIncreaseRBFPositionOrder
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), ()) $OrderBook$_fun_handleCreateIncreaseRBFPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $queryId, int $jettonFromAmount, slice $account, int $executionFee, int $liquidityDelta) impure inline_ref;

;; $RBFPositionOrderCancelledEvent$_constructor_isIncrease_orderId_trxId
((int, int, int)) $RBFPositionOrderCancelledEvent$_constructor_isIncrease_orderId_trxId(int isIncrease, int orderId, int trxId) inline;

;; $RBFPositionOrderExecutedEvent$_constructor_isIncrease_orderId_trxId
((int, int, int)) $RBFPositionOrderExecutedEvent$_constructor_isIncrease_orderId_trxId(int isIncrease, int orderId, int trxId) inline;

;; $OrderBook$_fun_handelRBFPositionOrderCallback
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), ()) $OrderBook$_fun_handelRBFPositionOrderCallback((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $orderId, int $trxId) impure inline_ref;

;; $OrderBook$_fun_rbfPositionOrder
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), tuple) $OrderBook$_fun_rbfPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $orderId) impure inline_ref;

;; $OrderBook$_fun_rbfPositionOrderIndexNext
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), int) $OrderBook$_fun_rbfPositionOrderIndexNext((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self) impure inline_ref;

;; $LPPositionOrder$_constructor_opType_account_marginDelta_liquidityDelta_executionFee_blockTime_isPending_callbackId_executionFeeReceiver_lastOperator
((int, slice, int, int, int, int, int, int, slice, slice)) $LPPositionOrder$_constructor_opType_account_marginDelta_liquidityDelta_executionFee_blockTime_isPending_callbackId_executionFeeReceiver_lastOperator(int opType, slice account, int marginDelta, int liquidityDelta, int executionFee, int blockTime, int isPending, int callbackId, slice executionFeeReceiver, slice lastOperator) inline;

;; $LPPositionOrderCreatedEvent$_constructor_opType_account_marginDelta_liquidityDelta_executionFee_orderId
((int, slice, int, int, int, int)) $LPPositionOrderCreatedEvent$_constructor_opType_account_marginDelta_liquidityDelta_executionFee_orderId(int opType, slice account, int marginDelta, int liquidityDelta, int executionFee, int orderId) inline;

;; $OrderBook$_fun_handleCreateIncreaseLPPositionOrder
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), ()) $OrderBook$_fun_handleCreateIncreaseLPPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $queryId, int $jettonFromAmount, slice $account, int $executionFee, int $marginDelta, int $liquidityDelta) impure inline_ref;

;; $LPPositionOrderCancelledEvent$_constructor_opType_orderId_trxId
((int, int, int)) $LPPositionOrderCancelledEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline;

;; $LPPositionOrderExecutedEvent$_constructor_opType_orderId_trxId
((int, int, int)) $LPPositionOrderExecutedEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline;

;; $OrderBook$_fun_handelLPPositionOrderCallback
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), ()) $OrderBook$_fun_handelLPPositionOrderCallback((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $orderId, int $trxId) impure inline_ref;

;; $OrderBook$_fun_lpPositionOrder
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), tuple) $OrderBook$_fun_lpPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $orderId) impure inline_ref;

;; $OrderBook$_fun_lpPositionOrderIndexNext
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), int) $OrderBook$_fun_lpPositionOrderIndexNext((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self) impure inline_ref;

;; $PerpPositionOrderEx$_constructor_tpSize_tpPrice_slSize_slPrice
((int, int, int, int)) $PerpPositionOrderEx$_constructor_tpSize_tpPrice_slSize_slPrice(int tpSize, int tpPrice, int slSize, int slPrice) inline;

;; $PerpPositionOrder$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_executionFee_blockTime_isPending_callbackId_executionFeeReceiver_lastOperator
((int, int, slice, int, int, int, int, int, int, int, int, int, slice, slice)) $PerpPositionOrder$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_executionFee_blockTime_isPending_callbackId_executionFeeReceiver_lastOperator(int opType, int tokenId, slice account, int isLong, int marginDelta, int sizeDelta, int triggerPrice, int triggerAbove, int executionFee, int blockTime, int isPending, int callbackId, slice executionFeeReceiver, slice lastOperator) inline;

;; $PerpPositionOrderCreatedEvent$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_executionFee_orderId_triggerPrice_triggerAbove_tpSize_tpPrice_slSize_slPrice
((int, int, slice, int, int, int, int, int, int, int, int, int, int, int)) $PerpPositionOrderCreatedEvent$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_executionFee_orderId_triggerPrice_triggerAbove_tpSize_tpPrice_slSize_slPrice(int opType, int tokenId, slice account, int isLong, int marginDelta, int sizeDelta, int executionFee, int orderId, int triggerPrice, int triggerAbove, int tpSize, int tpPrice, int slSize, int slPrice) inline;

;; $OrderBook$_fun_createPerpOrder
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), int) $OrderBook$_fun_createPerpOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $opType, slice $account, int $tokenId, int $isLong, int $marginDelta, int $sizeDelta, int $triggerPrice, int $tpSize, int $tpPrice, int $slSize, int $slPrice, int $executionFee) impure inline_ref;

;; $OrderBook$_fun_handleCreateIncreasePerpPositionOrder
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), ()) $OrderBook$_fun_handleCreateIncreasePerpPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $queryId, int $jettonFromAmount, slice $account, int $executionFee, int $isMarket, int $tokenId, int $isLong, int $marginDelta, int $sizeDelta, int $triggerPrice, int $tpSize, int $tpPrice, int $slSize, int $slPrice) impure inline_ref;

;; $PerpPositionOrderCancelledEvent$_constructor_opType_orderId_trxId
((int, int, int)) $PerpPositionOrderCancelledEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline;

;; $PerpPositionOrderExecutedEvent$_constructor_opType_orderId_trxId
((int, int, int)) $PerpPositionOrderExecutedEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline;

;; $OrderBook$_fun_handelPerpPositionOrderCallback
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), ()) $OrderBook$_fun_handelPerpPositionOrderCallback((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $orderId, int $trxId) impure inline_ref;

;; $OrderBook$_fun_perpPositionOrder
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), tuple) $OrderBook$_fun_perpPositionOrder((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $orderId) impure inline_ref;

;; $OrderBook$_fun_perpPositionOrderIndexNext
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), int) $OrderBook$_fun_perpPositionOrderIndexNext((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self) impure inline_ref;

;; $OrderBook$_fun_shouldCancel
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), ()) $OrderBook$_fun_shouldCancel((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $blockTime, slice $account, int $isPending) impure inline_ref;

;; $OrderBook$_fun_shouldExecute
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), ()) $OrderBook$_fun_shouldExecute((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, int $blockTime, int $isPending) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $OrderBook$_fun_forward
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), ()) $OrderBook$_fun_forward((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $OrderBook$_fun_notify
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), ()) $OrderBook$_fun_notify((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self, cell $body) impure inline;

;; $OrderBook$_fun_requireOwner
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), ()) $OrderBook$_fun_requireOwner((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self) impure inline_ref;

;; $OrderBook$_fun_owner
((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int), slice) $OrderBook$_fun_owner((int, int, int, int, int, slice, slice, slice, cell, cell, int, cell, int, cell, int, cell, cell, int) $self) impure inline_ref;

;; $JettonCallback$_constructor_orderType_orderId_amount_receiver_trxId
((int, int, int, slice, int)) $JettonCallback$_constructor_orderType_orderId_amount_receiver_trxId(int orderType, int orderId, int amount, slice receiver, int trxId) inline;

;; $UpdateRBFPosition$_constructor_isIncrease_orderId_trxId_account_liquidityDelta_pricesLength_prices
((int, int, slice, int, int, int, cell)) $UpdateRBFPosition$_constructor_isIncrease_orderId_trxId_account_liquidityDelta_pricesLength_prices(int isIncrease, int orderId, int trxId, slice account, int liquidityDelta, int pricesLength, cell prices) inline;

;; $UpdateLPPosition$_constructor_orderId_opType_trxId_account_marginDelta_liquidityDelta_pricesLength_prices
((int, int, slice, int, int, int, int, cell)) $UpdateLPPosition$_constructor_orderId_opType_trxId_account_marginDelta_liquidityDelta_pricesLength_prices(int orderId, int opType, int trxId, slice account, int marginDelta, int liquidityDelta, int pricesLength, cell prices) inline;

;; $UpdateLPPosition$_constructor_opType_orderId_trxId_account_marginDelta_liquidityDelta_pricesLength_prices
((int, int, slice, int, int, int, int, cell)) $UpdateLPPosition$_constructor_opType_orderId_trxId_account_marginDelta_liquidityDelta_pricesLength_prices(int opType, int orderId, int trxId, slice account, int marginDelta, int liquidityDelta, int pricesLength, cell prices) inline;

;; $UpdatePerpPosition$_constructor_orderId_opType_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices
((int, int, int, slice, int, int, int, int, int, int, int, cell)) $UpdatePerpPosition$_constructor_orderId_opType_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices(int orderId, int opType, int trxId, slice account, int tokenId, int isLong, int marginDelta, int sizeDelta, int triggerPrice, int triggerAbove, int pricesLength, cell prices) inline;

;; $UpdatePerpPosition$_constructor_opType_orderId_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices
((int, int, int, slice, int, int, int, int, int, int, int, cell)) $UpdatePerpPosition$_constructor_opType_orderId_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices(int opType, int orderId, int trxId, slice account, int tokenId, int isLong, int marginDelta, int sizeDelta, int triggerPrice, int triggerAbove, int pricesLength, cell prices) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
