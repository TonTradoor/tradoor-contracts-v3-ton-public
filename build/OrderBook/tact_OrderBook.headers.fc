;;
;; Header files for OrderBook
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_cell
(cell, ()) __tact_dict_set_int_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_get_int_cell
cell __tact_dict_get_int_cell(cell d, int kl, int k) inline;

;; __tact_dict_set_slice_int
(cell, ()) __tact_dict_set_slice_int(cell d, int kl, slice k, int v, int vl) inline;

;; __tact_dict_get_slice_int
int __tact_dict_get_slice_int(cell d, int kl, slice k, int vl) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_int_eq_nullable_one
int __tact_int_eq_nullable_one(int a, int b) inline;

;; __tact_string_builder_start
tuple __tact_string_builder_start(builder b) inline;

;; __tact_string_builder_start_comment
tuple __tact_string_builder_start_comment() inline;

;; __tact_string_builder_end
cell __tact_string_builder_end(tuple builders) inline;

;; __tact_string_builder_append
((tuple), ()) __tact_string_builder_append(tuple builders, slice sc) inline_ref;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $TokenTransfer$_store
builder $TokenTransfer$_store(builder build_0, (int, int, slice, slice, cell, int, slice) v) inline_ref;

;; $TokenTransfer$_store_cell
cell $TokenTransfer$_store_cell((int, int, slice, slice, cell, int, slice) v) inline;

;; $TokenNotification$_load
(slice, ((int, int, slice, slice))) $TokenNotification$_load(slice sc_0) inline;

;; $UpdateConfig$_load
(slice, ((slice, int, int, int, int, int, int, slice, slice))) $UpdateConfig$_load(slice sc_0) inline_ref;

;; $CreateDecreaseLPPositionOrder$_load
(slice, ((int, int, int))) $CreateDecreaseLPPositionOrder$_load(slice sc_0) inline;

;; $CancelLPPositionOrder$_load
(slice, ((int, int, slice))) $CancelLPPositionOrder$_load(slice sc_0) inline;

;; $ExecuteLPPositionOrder$_load
(slice, ((int, int, slice, int, cell))) $ExecuteLPPositionOrder$_load(slice sc_0) inline;

;; $UpdateLPPosition$_store
builder $UpdateLPPosition$_store(builder build_0, (int, int, slice, int, int, int, cell) v) inline_ref;

;; $UpdateLPPosition$_store_cell
cell $UpdateLPPosition$_store_cell((int, int, slice, int, int, int, cell) v) inline;

;; $UpdateLPPosition$_load_bounced
(slice, ((int, int))) $UpdateLPPosition$_load_bounced(slice sc_0) inline;

;; $UpdateLPPositionSuccess$_load
(slice, ((int, int, int))) $UpdateLPPositionSuccess$_load(slice sc_0) inline;

;; $CreateCompensate$_load
(slice, ((int, int, int, slice, int, slice, int))) $CreateCompensate$_load(slice sc_0) inline_ref;

;; $CancelCompensate$_load
(slice, ((int, int))) $CancelCompensate$_load(slice sc_0) inline;

;; $ExecuteCompensate$_load
(slice, ((int, int))) $ExecuteCompensate$_load(slice sc_0) inline;

;; $CreateDecreasePerpPositionOrder$_load
(slice, ((int, int, int, int, int, int, int))) $CreateDecreasePerpPositionOrder$_load(slice sc_0) inline_ref;

;; $CreateTpSlPerpPositionOrder$_load
(slice, ((int, int, int, int, int, int, int, int))) $CreateTpSlPerpPositionOrder$_load(slice sc_0) inline_ref;

;; $CancelPerpPositionOrder$_load
(slice, ((slice, int, int))) $CancelPerpPositionOrder$_load(slice sc_0) inline;

;; $ExecutePerpPositionOrder$_load
(slice, ((slice, int, int, int, cell))) $ExecutePerpPositionOrder$_load(slice sc_0) inline;

;; $LiquidatePerpPosition$_load
(slice, ((slice, int, slice, int, int, int, cell))) $LiquidatePerpPosition$_load(slice sc_0) inline_ref;

;; $ADLPerpPosition$_load
(slice, ((int, slice, int, int, int, int, int, cell))) $ADLPerpPosition$_load(slice sc_0) inline_ref;

;; $UpdatePerpPosition$_store
builder $UpdatePerpPosition$_store(builder build_0, (int, int, int, slice, int, int, int, int, int, int, int, cell) v) inline_ref;

;; $UpdatePerpPosition$_store_cell
cell $UpdatePerpPosition$_store_cell((int, int, int, slice, int, int, int, int, int, int, int, cell) v) inline;

;; $UpdatePerpPosition$_load_bounced
(slice, ((int, int, int))) $UpdatePerpPosition$_load_bounced(slice sc_0) inline;

;; $UpdatePerpPositionSuccess$_load
(slice, ((int, int, int))) $UpdatePerpPositionSuccess$_load(slice sc_0) inline;

;; $LPPositionOrderCreatedEvent$_store
builder $LPPositionOrderCreatedEvent$_store(builder build_0, (int, slice, int, int, int, int) v) inline_ref;

;; $LPPositionOrderCreatedEvent$_store_cell
cell $LPPositionOrderCreatedEvent$_store_cell((int, slice, int, int, int, int) v) inline;

;; $LPPositionOrderCancelledEvent$_store
builder $LPPositionOrderCancelledEvent$_store(builder build_0, (int, int, int) v) inline;

;; $LPPositionOrderCancelledEvent$_store_cell
cell $LPPositionOrderCancelledEvent$_store_cell((int, int, int) v) inline;

;; $LPPositionOrderExecutedEvent$_store
builder $LPPositionOrderExecutedEvent$_store(builder build_0, (int, int, int) v) inline;

;; $LPPositionOrderExecutedEvent$_store_cell
cell $LPPositionOrderExecutedEvent$_store_cell((int, int, int) v) inline;

;; $PerpPositionOrderCreatedEvent$_store
builder $PerpPositionOrderCreatedEvent$_store(builder build_0, (int, int, slice, int, int, int, int, int, int, int, int, int, int, int, int) v) inline_ref;

;; $PerpPositionOrderCreatedEvent$_store_cell
cell $PerpPositionOrderCreatedEvent$_store_cell((int, int, slice, int, int, int, int, int, int, int, int, int, int, int, int) v) inline;

;; $PerpPositionOrderCancelledEvent$_store
builder $PerpPositionOrderCancelledEvent$_store(builder build_0, (int, int, int) v) inline;

;; $PerpPositionOrderCancelledEvent$_store_cell
cell $PerpPositionOrderCancelledEvent$_store_cell((int, int, int) v) inline;

;; $PerpPositionOrderExecutedEvent$_store
builder $PerpPositionOrderExecutedEvent$_store(builder build_0, (int, int, int) v) inline;

;; $PerpPositionOrderExecutedEvent$_store_cell
cell $PerpPositionOrderExecutedEvent$_store_cell((int, int, int) v) inline;

;; $CompensateCreatedEvent$_store
builder $CompensateCreatedEvent$_store(builder build_0, (int, int, int, int, slice, int, slice, int, int) v) inline_ref;

;; $CompensateCreatedEvent$_store_cell
cell $CompensateCreatedEvent$_store_cell((int, int, int, int, slice, int, slice, int, int) v) inline;

;; $CompensateCancelledEvent$_store
builder $CompensateCancelledEvent$_store(builder build_0, (int, int) v) inline;

;; $CompensateCancelledEvent$_store_cell
cell $CompensateCancelledEvent$_store_cell((int, int) v) inline;

;; $CompensateExecutedEvent$_store
builder $CompensateExecutedEvent$_store(builder build_0, (int, int) v) inline;

;; $CompensateExecutedEvent$_store_cell
cell $CompensateExecutedEvent$_store_cell((int, int) v) inline;

;; $LPPositionOrder$_store
builder $LPPositionOrder$_store(builder build_0, (int, slice, int, int, int, int, slice, slice) v) inline_ref;

;; $LPPositionOrder$_store_cell
cell $LPPositionOrder$_store_cell((int, slice, int, int, int, int, slice, slice) v) inline;

;; $LPPositionOrder$_not_null
((int, slice, int, int, int, int, slice, slice)) $LPPositionOrder$_not_null(tuple v) inline;

;; $LPPositionOrder$_store_opt
cell $LPPositionOrder$_store_opt(tuple v) inline;

;; $LPPositionOrder$_load
(slice, ((int, slice, int, int, int, int, slice, slice))) $LPPositionOrder$_load(slice sc_0) inline_ref;

;; $LPPositionOrder$_as_optional
tuple $LPPositionOrder$_as_optional((int, slice, int, int, int, int, slice, slice) v) inline;

;; $LPPositionOrder$_load_opt
tuple $LPPositionOrder$_load_opt(cell cl) inline;

;; $PerpPositionOrder$_store
builder $PerpPositionOrder$_store(builder build_0, (int, int, slice, int, int, int, int, int, int, int, int, slice, slice) v) inline_ref;

;; $PerpPositionOrder$_store_cell
cell $PerpPositionOrder$_store_cell((int, int, slice, int, int, int, int, int, int, int, int, slice, slice) v) inline;

;; $PerpPositionOrder$_not_null
((int, int, slice, int, int, int, int, int, int, int, int, slice, slice)) $PerpPositionOrder$_not_null(tuple v) inline;

;; $PerpPositionOrder$_store_opt
cell $PerpPositionOrder$_store_opt(tuple v) inline;

;; $PerpPositionOrder$_load
(slice, ((int, int, slice, int, int, int, int, int, int, int, int, slice, slice))) $PerpPositionOrder$_load(slice sc_0) inline_ref;

;; $PerpPositionOrder$_as_optional
tuple $PerpPositionOrder$_as_optional((int, int, slice, int, int, int, int, int, int, int, int, slice, slice) v) inline;

;; $PerpPositionOrder$_load_opt
tuple $PerpPositionOrder$_load_opt(cell cl) inline;

;; $PerpPositionOrderEx$_store
builder $PerpPositionOrderEx$_store(builder build_0, (int, int, int, int, int) v) inline;

;; $PerpPositionOrderEx$_store_cell
cell $PerpPositionOrderEx$_store_cell((int, int, int, int, int) v) inline;

;; $PerpPositionOrderEx$_load
(slice, ((int, int, int, int, int))) $PerpPositionOrderEx$_load(slice sc_0) inline;

;; $PerpPositionOrderEx$_as_optional
tuple $PerpPositionOrderEx$_as_optional((int, int, int, int, int) v) inline;

;; $PerpPositionOrderEx$_load_opt
tuple $PerpPositionOrderEx$_load_opt(cell cl) inline;

;; $Compensate$_store
builder $Compensate$_store(builder build_0, (int, int, int, slice, int, slice, int, int) v) inline_ref;

;; $Compensate$_store_cell
cell $Compensate$_store_cell((int, int, int, slice, int, slice, int, int) v) inline;

;; $Compensate$_not_null
((int, int, int, slice, int, slice, int, int)) $Compensate$_not_null(tuple v) inline;

;; $Compensate$_store_opt
cell $Compensate$_store_opt(tuple v) inline;

;; $Compensate$_load
(slice, ((int, int, int, slice, int, slice, int, int))) $Compensate$_load(slice sc_0) inline_ref;

;; $Compensate$_as_optional
tuple $Compensate$_as_optional((int, int, int, slice, int, slice, int, int) v) inline;

;; $Compensate$_load_opt
tuple $Compensate$_load_opt(cell cl) inline;

;; $OrderBook$_store
builder $OrderBook$_store(builder build_0, (int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) v) inline;

;; $OrderBook$_load
(slice, ((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int))) $OrderBook$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $ConfigData$_to_external
(int, int, int, int, int, int, slice, slice) $ConfigData$_to_external(((int, int, int, int, int, int, slice, slice)) v) inline;

;; $LPPositionOrder$_get_isPending
_ $LPPositionOrder$_get_isPending((int, slice, int, int, int, int, slice, slice) v) inline;

;; $LPPositionOrder$_to_tuple
tuple $LPPositionOrder$_to_tuple(((int, slice, int, int, int, int, slice, slice)) v) inline;

;; $LPPositionOrder$_to_opt_tuple
tuple $LPPositionOrder$_to_opt_tuple(tuple v) inline;

;; $LPPositionOrder$_to_opt_external
tuple $LPPositionOrder$_to_opt_external(tuple v) inline;

;; $PerpPositionOrder$_get_isPending
_ $PerpPositionOrder$_get_isPending((int, int, slice, int, int, int, int, int, int, int, int, slice, slice) v) inline;

;; $PerpPositionOrder$_to_tuple
tuple $PerpPositionOrder$_to_tuple(((int, int, slice, int, int, int, int, int, int, int, int, slice, slice)) v) inline;

;; $PerpPositionOrder$_to_opt_tuple
tuple $PerpPositionOrder$_to_opt_tuple(tuple v) inline;

;; $PerpPositionOrder$_to_opt_external
tuple $PerpPositionOrder$_to_opt_external(tuple v) inline;

;; $PerpPositionOrderEx$_not_null
((int, int, int, int, int)) $PerpPositionOrderEx$_not_null(tuple v) inline;

;; $OrderBook$init$_load
(slice, ((int))) $OrderBook$init$_load(slice sc_0) inline;

;; $OrderBook$_contract_init
(int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $OrderBook$_contract_init(int $deployId) impure inline_ref;

;; $OrderBook$_contract_load
(int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $OrderBook$_contract_load() impure inline_ref;

;; $OrderBook$_contract_store
() $OrderBook$_contract_store((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_emit
() $global_emit(cell $body) impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $String$_fun_asComment
cell $String$_fun_asComment(slice $self) impure inline_ref;

;; $Context$_fun_readForwardFee
int $Context$_fun_readForwardFee((int, slice, int, slice) $self) impure inline_ref;

;; $ConfigData$_constructor_isExecutor_maxTimeDelayExecutor_minTimeDelayTrader_minExecutionFee_gasConsumption_minTonsForStorage_usdtWallet_pool
((int, int, int, int, int, int, slice, slice)) $ConfigData$_constructor_isExecutor_maxTimeDelayExecutor_minTimeDelayTrader_minExecutionFee_gasConsumption_minTonsForStorage_usdtWallet_pool(int isExecutor, int maxTimeDelayExecutor, int minTimeDelayTrader, int minExecutionFee, int gasConsumption, int minTonsForStorage, slice usdtWallet, slice pool) inline;

;; $OrderBook$_fun_configData
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), (int, int, int, int, int, int, slice, slice)) $OrderBook$_fun_configData((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, slice $executor) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $TokenTransfer$_constructor_queryId_amount_receiver_responseDestination_customPayload_forwardTonAmount_forwardPayload
((int, int, slice, slice, cell, int, slice)) $TokenTransfer$_constructor_queryId_amount_receiver_responseDestination_customPayload_forwardTonAmount_forwardPayload(int queryId, int amount, slice receiver, slice responseDestination, cell customPayload, int forwardTonAmount, slice forwardPayload) inline;

;; $OrderBook$_fun_refundJetton
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_refundJetton((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $queryId, int $amount, slice $to, slice $destination) impure inline_ref;

;; $SendParameters$_constructor_to_bounce_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value_mode(slice to, int bounce, int value, int mode) inline;

;; $OrderBook$_fun_refundExecessTon
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_refundExecessTon((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, slice $to, int $executionFee) impure inline_ref;

;; $OrderBook$_fun_getPoolGas
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_fun_getPoolGas((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref;

;; $SendParameters$_constructor_to_bounce_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value_mode_body(slice to, int bounce, int value, int mode, cell body) inline;

;; $LPPositionOrder$_constructor_isIncrease_account_liquidityDelta_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator
((int, slice, int, int, int, int, slice, slice)) $LPPositionOrder$_constructor_isIncrease_account_liquidityDelta_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator(int isIncrease, slice account, int liquidityDelta, int executionFee, int blockTime, int isPending, slice executionFeeReceiver, slice lastOperator) inline;

;; $LPPositionOrderCreatedEvent$_constructor_opType_account_liquidityDelta_executionFee_orderId_trxId
((int, slice, int, int, int, int)) $LPPositionOrderCreatedEvent$_constructor_opType_account_liquidityDelta_executionFee_orderId_trxId(int opType, slice account, int liquidityDelta, int executionFee, int orderId, int trxId) inline;

;; $OrderBook$_fun_handleCreateIncreaseLPPositionOrder
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_handleCreateIncreaseLPPositionOrder((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $queryId, int $jettonFromAmount, slice $account, int $executionFee, int $liquidityDelta) impure inline_ref;

;; $OrderBook$_fun_lpPositionOrder
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), tuple) $OrderBook$_fun_lpPositionOrder((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $orderId) impure inline_ref;

;; $OrderBook$_fun_lpPositionOrderIndexNext
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_fun_lpPositionOrderIndexNext((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref;

;; $PerpPositionOrderEx$_constructor_tpSize_tpPrice_slSize_slPrice_executionFee
((int, int, int, int, int)) $PerpPositionOrderEx$_constructor_tpSize_tpPrice_slSize_slPrice_executionFee(int tpSize, int tpPrice, int slSize, int slPrice, int executionFee) inline;

;; $PerpPositionOrder$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator
((int, int, slice, int, int, int, int, int, int, int, int, slice, slice)) $PerpPositionOrder$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_executionFee_blockTime_isPending_executionFeeReceiver_lastOperator(int opType, int tokenId, slice account, int isLong, int marginDelta, int sizeDelta, int triggerPrice, int triggerAbove, int executionFee, int blockTime, int isPending, slice executionFeeReceiver, slice lastOperator) inline;

;; $PerpPositionOrderCreatedEvent$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_executionFee_orderId_triggerPrice_triggerAbove_tpSize_tpPrice_slSize_slPrice_trxId
((int, int, slice, int, int, int, int, int, int, int, int, int, int, int, int)) $PerpPositionOrderCreatedEvent$_constructor_opType_tokenId_account_isLong_marginDelta_sizeDelta_executionFee_orderId_triggerPrice_triggerAbove_tpSize_tpPrice_slSize_slPrice_trxId(int opType, int tokenId, slice account, int isLong, int marginDelta, int sizeDelta, int executionFee, int orderId, int triggerPrice, int triggerAbove, int tpSize, int tpPrice, int slSize, int slPrice, int trxId) inline;

;; $OrderBook$_fun_createPerpOrder
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_fun_createPerpOrder((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $trxId, int $opType, slice $account, int $tokenId, int $isLong, int $marginDelta, int $sizeDelta, int $triggerPrice, int $tpSize, int $tpPrice, int $slSize, int $slPrice, int $executionFee) impure inline_ref;

;; $OrderBook$_fun_handleCreateIncreasePerpPositionOrder
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_handleCreateIncreasePerpPositionOrder((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $queryId, int $jettonFromAmount, slice $account, int $executionFee, int $isMarket, int $tokenId, int $isLong, int $marginDelta, int $sizeDelta, int $triggerPrice, int $tpSize, int $tpPrice, int $slSize, int $slPrice) impure inline_ref;

;; $OrderBook$_fun_perpPositionOrder
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), tuple) $OrderBook$_fun_perpPositionOrder((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, int $orderId) impure inline_ref;

;; $OrderBook$_fun_perpPositionOrderIndexNext
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_fun_perpPositionOrderIndexNext((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref;

;; $OrderBook$_fun_isExecutor
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_fun_isExecutor((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, slice $account) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $OrderBook$_fun_forward
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_forward((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $OrderBook$_fun_reply
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_reply((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, cell $body) impure inline;

;; $OrderBook$_fun_notify
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_notify((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self, cell $body) impure inline;

;; $OrderBook$_fun_requireNotStopped
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_requireNotStopped((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref;

;; $OrderBook$_fun_requireStopped
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_requireStopped((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref;

;; $OrderBook$_fun_stopped
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), int) $OrderBook$_fun_stopped((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref;

;; $OrderBook$_fun_requireOwner
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), ()) $OrderBook$_fun_requireOwner((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref;

;; $OrderBook$_fun_owner
((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int), slice) $OrderBook$_fun_owner((int, int, int, int, int, slice, slice, slice, int, cell, cell, int, cell, cell, int, cell, int) $self) impure inline_ref;

;; $LPPositionOrderCancelledEvent$_constructor_opType_orderId_trxId
((int, int, int)) $LPPositionOrderCancelledEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline;

;; $UpdateLPPosition$_constructor_isIncrease_orderId_trxId_account_liquidityDelta_pricesLength_prices
((int, int, slice, int, int, int, cell)) $UpdateLPPosition$_constructor_isIncrease_orderId_trxId_account_liquidityDelta_pricesLength_prices(int isIncrease, int orderId, int trxId, slice account, int liquidityDelta, int pricesLength, cell prices) inline;

;; $LPPositionOrderExecutedEvent$_constructor_opType_orderId_trxId
((int, int, int)) $LPPositionOrderExecutedEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline;

;; $PerpPositionOrderCancelledEvent$_constructor_opType_orderId_trxId
((int, int, int)) $PerpPositionOrderCancelledEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline;

;; $UpdatePerpPosition$_constructor_orderId_opType_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices
((int, int, int, slice, int, int, int, int, int, int, int, cell)) $UpdatePerpPosition$_constructor_orderId_opType_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices(int orderId, int opType, int trxId, slice account, int tokenId, int isLong, int marginDelta, int sizeDelta, int triggerPrice, int triggerAbove, int pricesLength, cell prices) inline;

;; $PerpPositionOrderExecutedEvent$_constructor_opType_orderId_trxId
((int, int, int)) $PerpPositionOrderExecutedEvent$_constructor_opType_orderId_trxId(int opType, int orderId, int trxId) inline;

;; $UpdatePerpPosition$_constructor_opType_orderId_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices
((int, int, int, slice, int, int, int, int, int, int, int, cell)) $UpdatePerpPosition$_constructor_opType_orderId_trxId_account_tokenId_isLong_marginDelta_sizeDelta_triggerPrice_triggerAbove_pricesLength_prices(int opType, int orderId, int trxId, slice account, int tokenId, int isLong, int marginDelta, int sizeDelta, int triggerPrice, int triggerAbove, int pricesLength, cell prices) inline;

;; $Compensate$_constructor_orderType_orderId_trxId_refundReceiver_refundAmount_executionFeeReceiver_executionFee_unlockTime
((int, int, int, slice, int, slice, int, int)) $Compensate$_constructor_orderType_orderId_trxId_refundReceiver_refundAmount_executionFeeReceiver_executionFee_unlockTime(int orderType, int orderId, int trxId, slice refundReceiver, int refundAmount, slice executionFeeReceiver, int executionFee, int unlockTime) inline;

;; $CompensateCreatedEvent$_constructor_compensateId_orderType_orderId_trxId_refundReceiver_refundAmount_executionFeeReceiver_executionFee_unlockTime
((int, int, int, int, slice, int, slice, int, int)) $CompensateCreatedEvent$_constructor_compensateId_orderType_orderId_trxId_refundReceiver_refundAmount_executionFeeReceiver_executionFee_unlockTime(int compensateId, int orderType, int orderId, int trxId, slice refundReceiver, int refundAmount, slice executionFeeReceiver, int executionFee, int unlockTime) inline;

;; $CompensateCancelledEvent$_constructor_compensateId_trxId
((int, int)) $CompensateCancelledEvent$_constructor_compensateId_trxId(int compensateId, int trxId) inline;

;; $CompensateExecutedEvent$_constructor_compensateId_trxId
((int, int)) $CompensateExecutedEvent$_constructor_compensateId_trxId(int compensateId, int trxId) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
